{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_enum_test_100 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 100 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 179575,
    "final_cost": 68184,
    "compression_ratio": 2.6336823888302243,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _c _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _d _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _e _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _f _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _l (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _b (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _d (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _e (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _f (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _b _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _d _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _e _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _f _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _c _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _d _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _e _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _f _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) _b $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) _c $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) _d $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) _e $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) _f $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _f $0))))",
        "(lam (_rflatten (if (_rmatch _t (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _r (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _a (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _e (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _o (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _t $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _d (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _d (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _f $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _d _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _f _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _b _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _e _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _f _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _d (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _d (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _c _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _d _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _e _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _f _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _d (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (if (_rmatch (_rtail (_rsplit _rempty $0)) _i) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (if (_rmatch _i (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (if (_rmatch _z (_rtail (_rrevcdr (_rsplit _rempty $0)))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (if (_rmatch (car (_rsplit _rempty $0)) (_rtail (_rsplit _rempty $0))) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _c (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _d (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _t $0)) (_rsplit _rempty $0))))) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _r $0)) (_rsplit _rempty $0))))) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _a $0)) (_rsplit _rempty $0))))) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _e $0)) (_rsplit _rempty $0))))) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _o $0)) (_rsplit _rempty $0))))) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _c _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _d _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _e _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _f _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _b (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _d (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _e (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _f (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _d (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _o)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _o (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _c (_rsplit _a $0))))",
        "(lam (_rflatten (cons _c (_rsplit _b $0))))",
        "(lam (_rflatten (cons _d (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _r (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _e (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _o (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _r (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _q) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _q) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _q) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _q) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _q) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))"
    ],
    "rewritten": [
        "(lam (fn_8 $0 _w))",
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lam (fn_0 $0 _b _d))",
        "(lam (fn_0 $0 _c _d))",
        "(lam (fn_0 $0 _d _d))",
        "(lam (fn_6 _d $0))",
        "(lam (fn_0 $0 _f _d))",
        "(lam (fn_0 $0 (_rconcat _b _b) _b))",
        "(lam (fn_2 _b _b $0))",
        "(lam (fn_0 $0 (_rconcat _d _b) _b))",
        "(lam (fn_0 $0 (_rconcat _e _b) _b))",
        "(lam (fn_0 $0 (_rconcat _f _b) _b))",
        "(lam (fn_1 $0 _r))",
        "(lam (_rflatten (cons _r (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _x) _t) _b _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _x) _t) _c _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _x) _t) _d _t))",
        "(lam (fn_6 _t (fn_0 $0 (_rconcat _a _x) _t)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _x) _t) _f _t))",
        "(lam (fn_1 (_rflatten (cdr (fn_5 $0))) _l))",
        "(lam (_rflatten (cons _l (cons _b (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _l (cons _d (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _l (cons _e (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _l (cons _f (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (fn_0 $0 (_rconcat _b _e) _e))",
        "(lam (fn_2 _e _e $0))",
        "(lam (fn_0 $0 (_rconcat _d _e) _e))",
        "(lam (fn_0 $0 (_rconcat _e _e) _e))",
        "(lam (fn_0 $0 (_rconcat _f _e) _e))",
        "(lam (fn_1 $0 _n))",
        "(lam (_rflatten (cons _n (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _n (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _n (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_9 $0 (lam _k)))",
        "(lam (fn_9 (_rflatten (fn_5 $0)) (lam _k)))",
        "(lam (fn_9 (fn_9 $0 (lam $0)) (lam _k)))",
        "(lam (fn_9 $0 (lam (_rconcat _t _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _r _rempty))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_5 $0)))))",
        "(lam (fn_4 (_rrevcdr (fn_5 $0)) _u))",
        "(lam (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (fn_0 $0 (_rconcat _b _w) _p))",
        "(lam (fn_2 _p _w $0))",
        "(lam (fn_0 $0 (_rconcat _d _w) _p))",
        "(lam (fn_0 $0 (_rconcat _e _w) _p))",
        "(lam (fn_0 $0 (_rconcat _f _w) _p))",
        "(lam (fn_8 $0 _t))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_2 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_2 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_9 $0 (lam (_rconcat $0 _v))))",
        "(lam (fn_9 (_rflatten (fn_5 $0)) (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (fn_5 (fn_9 $0 (lam (_rconcat $0 _v))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 (_rconcat _b _t) _i))",
        "(lam (fn_2 _i _t $0))",
        "(lam (fn_0 $0 (_rconcat _d _t) _i))",
        "(lam (fn_0 $0 (_rconcat _e _t) _i))",
        "(lam (fn_0 $0 (_rconcat _f _t) _i))",
        "(lam (fn_0 $0 (_rconcat _b _q) _u))",
        "(lam (fn_2 _u _q $0))",
        "(lam (fn_0 $0 (_rconcat _d _q) _u))",
        "(lam (fn_0 $0 (_rconcat _e _q) _u))",
        "(lam (fn_0 $0 (_rconcat _f _q) _u))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_5 $0)))))",
        "(lam (fn_4 (fn_5 $0) _m))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _e))",
        "(lam (_rflatten (cons _e (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_7 (fn_5 $0)))",
        "(lam (_rflatten (cons _c (fn_5 $0))))",
        "(lam (_rflatten (cons _d (fn_5 $0))))",
        "(lam (_rflatten (cons _e (fn_5 $0))))",
        "(lam (_rflatten (cons _f (fn_5 $0))))",
        "(lam (fn_9 $0 (lam _j)))",
        "(lam (_rflatten (fn_5 (fn_9 $0 (lam _j)))))",
        "(lam (fn_9 $0 (lam (_rconcat _t _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _r _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_7 (cons _d (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _e (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _f (cdr (fn_5 $0)))))",
        "(lam (fn_1 $0 _c))",
        "(lam (fn_0 $0 _b _r))",
        "(lam (fn_0 $0 _c _r))",
        "(lam (fn_0 $0 _d _r))",
        "(lam (fn_6 _r $0))",
        "(lam (fn_0 $0 _f _r))",
        "(lam (fn_0 $0 (_rconcat _b _x) _t))",
        "(lam (fn_2 _t _x $0))",
        "(lam (fn_0 $0 (_rconcat _d _x) _t))",
        "(lam (fn_0 $0 (_rconcat _e _x) _t))",
        "(lam (fn_0 $0 (_rconcat _f _x) _t))",
        "(lam (fn_1 $0 _y))",
        "(lam (_rflatten (cons _y (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _y (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _y (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_7 (cons _d (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _e (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _f (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _c (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _c (cons _e (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _a) _b))",
        "(lam (fn_2 _b _a $0))",
        "(lam (fn_0 $0 (_rconcat _d _a) _b))",
        "(lam (fn_0 $0 (_rconcat _e _a) _b))",
        "(lam (fn_0 $0 (_rconcat _f _a) _b))",
        "(lam (fn_0 $0 (_rconcat _b _q) _t))",
        "(lam (fn_2 _t _q $0))",
        "(lam (fn_0 $0 (_rconcat _d _q) _t))",
        "(lam (fn_0 $0 (_rconcat _e _q) _t))",
        "(lam (fn_0 $0 (_rconcat _f _q) _t))",
        "(lam (fn_1 $0 _q))",
        "(lam (_rflatten (cons _q (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 (fn_2 _d _t $0) _b _r))",
        "(lam (fn_0 (fn_2 _d _t $0) _c _r))",
        "(lam (fn_0 (fn_2 _d _t $0) _d _r))",
        "(lam (fn_6 _r (fn_2 _d _t $0)))",
        "(lam (fn_0 (fn_2 _d _t $0) _f _r))",
        "(lam (fn_1 $0 _g))",
        "(lam (fn_1 (_rflatten (fn_5 $0)) _g))",
        "(lam (_rflatten (cons _g (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (fn_5 (_rflatten (fn_5 $0))))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (fn_5 $0))))))",
        "(lam (fn_9 $0 (lam _p)))",
        "(lam (fn_9 (_rflatten (fn_5 $0)) (lam _p)))",
        "(lam (_rflatten (fn_5 (fn_9 $0 (lam _p)))))",
        "(lam (fn_9 (fn_9 $0 (lam _l)) (lam _p)))",
        "(lam (fn_9 (fn_9 $0 (lam _k)) (lam _p)))",
        "(lam (fn_0 $0 (_rconcat _b _k) _l))",
        "(lam (fn_2 _l _k $0))",
        "(lam (fn_0 $0 (_rconcat _d _k) _l))",
        "(lam (fn_0 $0 (_rconcat _e _k) _l))",
        "(lam (fn_0 $0 (_rconcat _f _k) _l))",
        "(lam (fn_0 $0 (_rconcat _b _y) _t))",
        "(lam (fn_2 _t _y $0))",
        "(lam (fn_0 $0 (_rconcat _d _y) _t))",
        "(lam (fn_0 $0 (_rconcat _e _y) _t))",
        "(lam (fn_0 $0 (_rconcat _f _y) _t))",
        "(lam (fn_1 $0 _i))",
        "(lam (_rflatten (cons _i (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 (fn_9 $0 (lam (_rconcat _a _v))) _b _a))",
        "(lam (fn_0 (fn_9 $0 (lam (_rconcat _a _v))) _c _a))",
        "(lam (fn_0 (fn_9 $0 (lam (_rconcat _a _v))) _d _a))",
        "(lam (fn_6 _a (fn_9 $0 (lam (_rconcat _a _v)))))",
        "(lam (fn_0 (fn_9 $0 (lam (_rconcat _a _v))) _f _a))",
        "(lam (fn_4 (_rrevcdr (fn_5 $0)) _t))",
        "(lam (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (fn_0 $0 (_rconcat _b _p) _p))",
        "(lam (fn_2 _p _p $0))",
        "(lam (fn_0 $0 (_rconcat _d _p) _p))",
        "(lam (fn_0 $0 (_rconcat _e _p) _p))",
        "(lam (fn_0 $0 (_rconcat _f _p) _p))",
        "(lam (fn_7 (fn_5 $0)))",
        "(lam (_rflatten (cons _c (fn_5 $0))))",
        "(lam (_rflatten (cons _d (fn_5 $0))))",
        "(lam (_rflatten (cons _e (fn_5 $0))))",
        "(lam (_rflatten (cons _f (fn_5 $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 _b _p))",
        "(lam (fn_0 $0 _c _p))",
        "(lam (fn_0 $0 _d _p))",
        "(lam (fn_6 _p $0))",
        "(lam (fn_0 $0 _f _p))",
        "(lam (fn_8 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _f $0))))",
        "(lam (_rflatten (if (_rmatch _t (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _r (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _a (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _e (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _o (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (fn_0 $0 (_rconcat _b _r) _r))",
        "(lam (fn_2 _r _r $0))",
        "(lam (fn_0 $0 (_rconcat _d _r) _r))",
        "(lam (fn_0 $0 (_rconcat _e _r) _r))",
        "(lam (fn_0 $0 (_rconcat _f _r) _r))",
        "(lam (fn_0 $0 (_rconcat _b _w) _t))",
        "(lam (fn_2 _t _w $0))",
        "(lam (fn_0 $0 (_rconcat _d _w) _t))",
        "(lam (fn_0 $0 (_rconcat _e _w) _t))",
        "(lam (fn_0 $0 (_rconcat _f _w) _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _f _v) _t) _b _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _f _v) _t) _c _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _f _v) _t) _d _t))",
        "(lam (fn_6 _t (fn_0 $0 (_rconcat _f _v) _t)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _f _v) _t) _f _t))",
        "(lam (fn_0 (fn_2 _o _g $0) _b _r))",
        "(lam (fn_0 (fn_2 _o _g $0) _c _r))",
        "(lam (fn_0 (fn_2 _o _g $0) _d _r))",
        "(lam (fn_6 _r (fn_2 _o _g $0)))",
        "(lam (fn_0 (fn_2 _o _g $0) _f _r))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_0 (_rflatten (fn_5 $0)) _rempty _m))",
        "(lam (_rflatten (fn_5 (fn_0 $0 _rempty _m))))",
        "(lam (fn_0 $0 (_rconcat _rempty _rempty) _m))",
        "(lam (fn_0 (_rflatten (_rsplit _t $0)) _rempty _m))",
        "(lam (fn_0 $0 (_rconcat _b _q) _l))",
        "(lam (fn_2 _l _q $0))",
        "(lam (fn_0 $0 (_rconcat _d _q) _l))",
        "(lam (fn_0 $0 (_rconcat _e _q) _l))",
        "(lam (fn_0 $0 (_rconcat _f _q) _l))",
        "(lam (fn_7 (cdr (fn_5 $0))))",
        "(lam (_rflatten (cons _c (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _d (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _e (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _f (cdr (fn_5 $0)))))",
        "(lam (fn_0 $0 (_rconcat _b _b) _c))",
        "(lam (fn_2 _c _b $0))",
        "(lam (fn_0 $0 (_rconcat _d _b) _c))",
        "(lam (fn_0 $0 (_rconcat _e _b) _c))",
        "(lam (fn_0 $0 (_rconcat _f _b) _c))",
        "(lam (fn_0 $0 _b _n))",
        "(lam (fn_0 $0 _c _n))",
        "(lam (fn_0 $0 _d _n))",
        "(lam (fn_6 _n $0))",
        "(lam (fn_0 $0 _f _n))",
        "(lam (fn_0 $0 (_rconcat _b _u) _e))",
        "(lam (fn_0 (_rflatten (fn_5 $0)) (_rconcat _b _u) _e))",
        "(lam (fn_2 _e _u $0))",
        "(lam (fn_2 _e _u (_rflatten (fn_5 $0))))",
        "(lam (fn_0 $0 (_rconcat _d _u) _e))",
        "(lam (fn_1 $0 _r))",
        "(lam (_rflatten (cons _r (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _a))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_1 $0 _d))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_1 $0 _f))",
        "(lam (fn_4 (fn_5 $0) _o))",
        "(lam (_rflatten (_rappend _o (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_8 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _f $0))))",
        "(lam (fn_1 $0 (car (fn_5 $0))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 _b _b))",
        "(lam (fn_0 $0 _c _b))",
        "(lam (fn_0 $0 _d _b))",
        "(lam (fn_6 _b $0))",
        "(lam (fn_0 $0 _f _b))",
        "(lam (fn_0 $0 (_rconcat _b _e) _n))",
        "(lam (fn_2 _n _e $0))",
        "(lam (fn_0 $0 (_rconcat _d _e) _n))",
        "(lam (fn_0 $0 (_rconcat _e _e) _n))",
        "(lam (fn_0 $0 (_rconcat _f _e) _n))",
        "(lam (fn_0 $0 (_rconcat _b _i) _d))",
        "(lam (fn_2 _d _i $0))",
        "(lam (fn_0 $0 (_rconcat _d _i) _d))",
        "(lam (fn_0 $0 (_rconcat _e _i) _d))",
        "(lam (fn_0 $0 (_rconcat _f _i) _d))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_7 (cdr (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _c (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _d (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _f (cdr (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _a))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_1 $0 _d))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_1 $0 _f))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 _b _m))",
        "(lam (fn_0 $0 _c _m))",
        "(lam (fn_0 $0 _d _m))",
        "(lam (fn_6 _m $0))",
        "(lam (fn_0 $0 _f _m))",
        "(lam (fn_4 (fn_5 $0) _y))",
        "(lam (_rflatten (_rappend _y (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _c) _c))",
        "(lam (fn_2 _c _c $0))",
        "(lam (fn_0 $0 (_rconcat _d _c) _c))",
        "(lam (fn_0 $0 (_rconcat _e _c) _c))",
        "(lam (fn_0 $0 (_rconcat _f _c) _c))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _c _t))",
        "(lam (fn_0 $0 _d _t))",
        "(lam (fn_6 _t $0))",
        "(lam (fn_0 $0 _f _t))",
        "(lam (fn_0 $0 (_rconcat _b _x) _s))",
        "(lam (fn_2 _s _x $0))",
        "(lam (fn_0 $0 (_rconcat _d _x) _s))",
        "(lam (fn_0 $0 (_rconcat _e _x) _s))",
        "(lam (fn_0 $0 (_rconcat _f _x) _s))",
        "(lam (fn_0 $0 (_rconcat _b _m) _e))",
        "(lam (fn_2 _e _m $0))",
        "(lam (fn_0 $0 (_rconcat _d _m) _e))",
        "(lam (fn_0 $0 (_rconcat _e _m) _e))",
        "(lam (fn_0 $0 (_rconcat _f _m) _e))",
        "(lam (fn_7 (fn_5 $0)))",
        "(lam (_rflatten (cons _c (fn_5 $0))))",
        "(lam (_rflatten (cons _d (fn_5 $0))))",
        "(lam (_rflatten (cons _e (fn_5 $0))))",
        "(lam (_rflatten (cons _f (fn_5 $0))))",
        "(lam (fn_1 $0 _k))",
        "(lam (_rflatten (cons _k (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _k (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _k (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _x))",
        "(lam (_rflatten (cons _x (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _l) _r))",
        "(lam (fn_2 _r _l $0))",
        "(lam (fn_0 $0 (_rconcat _d _l) _r))",
        "(lam (fn_0 $0 (_rconcat _e _l) _r))",
        "(lam (fn_0 $0 (_rconcat _f _l) _r))",
        "(lam (fn_0 $0 (_rconcat _b _d) _r))",
        "(lam (fn_2 _r _d $0))",
        "(lam (fn_0 $0 (_rconcat _d _d) _r))",
        "(lam (fn_0 $0 (_rconcat _e _d) _r))",
        "(lam (fn_0 $0 (_rconcat _f _d) _r))",
        "(lam (fn_0 $0 (_rconcat _b _e) _c))",
        "(lam (fn_2 _c _e $0))",
        "(lam (fn_0 $0 (_rconcat _d _e) _c))",
        "(lam (fn_0 $0 (_rconcat _e _e) _c))",
        "(lam (fn_0 $0 (_rconcat _f _e) _c))",
        "(lam (fn_1 $0 _m))",
        "(lam (_rflatten (cons _m (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _m (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _m (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_9 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _r $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _o $0))))",
        "(lam (fn_1 $0 _j))",
        "(lam (_rflatten (cons _j (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _j (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _j (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _q) _s))",
        "(lam (fn_2 _s _q $0))",
        "(lam (fn_0 $0 (_rconcat _d _q) _s))",
        "(lam (fn_0 $0 (_rconcat _e _q) _s))",
        "(lam (fn_0 $0 (_rconcat _f _q) _s))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 _b _n))",
        "(lam (fn_0 $0 _c _n))",
        "(lam (fn_0 $0 _d _n))",
        "(lam (fn_6 _n $0))",
        "(lam (fn_0 $0 _f _n))",
        "(lam (fn_4 (fn_5 $0) _m))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _a) _g))",
        "(lam (fn_2 _g _a $0))",
        "(lam (fn_0 $0 (_rconcat _d _a) _g))",
        "(lam (fn_0 $0 (_rconcat _e _a) _g))",
        "(lam (fn_0 $0 (_rconcat _f _a) _g))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 _b _h))",
        "(lam (fn_0 $0 _c _h))",
        "(lam (fn_0 $0 _d _h))",
        "(lam (fn_6 _h $0))",
        "(lam (fn_0 $0 _f _h))",
        "(lam (fn_1 $0 _r))",
        "(lam (_rflatten (cons _r (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 _b _g))",
        "(lam (fn_0 $0 _c _g))",
        "(lam (fn_0 $0 _d _g))",
        "(lam (fn_6 _g $0))",
        "(lam (fn_0 $0 _f _g))",
        "(lam (fn_1 $0 _e))",
        "(lam (_rflatten (cons _e (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _c _t))",
        "(lam (fn_0 $0 _d _t))",
        "(lam (fn_6 _t $0))",
        "(lam (fn_0 $0 _f _t))",
        "(lam (fn_7 (cdr (fn_5 $0))))",
        "(lam (_rflatten (cons _c (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _d (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _e (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _f (cdr (fn_5 $0)))))",
        "(lam (fn_0 $0 (_rconcat _b _p) _t))",
        "(lam (fn_2 _t _p $0))",
        "(lam (fn_0 $0 (_rconcat _d _p) _t))",
        "(lam (fn_0 $0 (_rconcat _e _p) _t))",
        "(lam (fn_0 $0 (_rconcat _f _p) _t))",
        "(lam (fn_4 (fn_5 $0) _g))",
        "(lam (_rflatten (_rappend _g (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _u _c) _a) _b _r))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _u _c) _a) _c _r))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _u _c) _a) _d _r))",
        "(lam (fn_6 _r (fn_0 $0 (_rconcat _u _c) _a)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _u _c) _a) _f _r))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 $0)) (if (_rmatch (_rtail (fn_5 $0)) _i) (_rrevcdr (fn_5 $0)) (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 $0)) (if (_rmatch _i (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 $0)) (if (_rmatch _z (_rtail (_rrevcdr (fn_5 $0)))) (_rrevcdr (fn_5 $0)) (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 $0)) (if (_rmatch (car (fn_5 $0)) (_rtail (fn_5 $0))) (_rrevcdr (fn_5 $0)) (fn_5 $0)))))",
        "(lam (fn_7 (cons _a (cdr (cdr (fn_5 $0))))))",
        "(lam (fn_7 (cons _b (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (cdr (fn_5 $0)))))))",
        "(lam (_rflatten (cons _c (cons _b (cdr (cdr (fn_5 $0)))))))",
        "(lam (_rflatten (cons _d (cons _a (cdr (cdr (fn_5 $0)))))))",
        "(lam (fn_8 $0 _t))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_2 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_1 $0 _i))",
        "(lam (_rflatten (cons _i (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _g))",
        "(lam (_rflatten (cons _g (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_0 $0 _c _i))",
        "(lam (fn_0 $0 _d _i))",
        "(lam (fn_6 _i $0))",
        "(lam (fn_0 $0 _f _i))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_0 $0 (_rconcat _b _u) _s))",
        "(lam (fn_2 _s _u $0))",
        "(lam (fn_0 $0 (_rconcat _d _u) _s))",
        "(lam (fn_0 $0 (_rconcat _e _u) _s))",
        "(lam (fn_0 $0 (_rconcat _f _u) _s))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 (fn_0 $0 _t _s))) (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 (fn_0 $0 _r _s))) (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 (fn_0 $0 _a _s))) (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 (fn_6 _s $0))) (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend (_rtail (fn_5 (fn_0 $0 _o _s))) (_rrevcdr (fn_5 $0)))))",
        "(lam (fn_0 $0 (_rconcat _b _t) _s))",
        "(lam (fn_2 _s _t $0))",
        "(lam (fn_0 $0 (_rconcat _d _t) _s))",
        "(lam (fn_0 $0 (_rconcat _e _t) _s))",
        "(lam (fn_0 $0 (_rconcat _f _t) _s))",
        "(lam (fn_0 $0 (_rconcat _b _w) _p))",
        "(lam (fn_2 _p _w $0))",
        "(lam (fn_0 $0 (_rconcat _d _w) _p))",
        "(lam (fn_0 $0 (_rconcat _e _w) _p))",
        "(lam (fn_0 $0 (_rconcat _f _w) _p))",
        "(lam (fn_0 $0 (_rconcat _b _f) _g))",
        "(lam (fn_2 _g _f $0))",
        "(lam (fn_0 $0 (_rconcat _d _f) _g))",
        "(lam (fn_0 $0 (_rconcat _e _f) _g))",
        "(lam (fn_0 $0 (_rconcat _f _f) _g))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_7 (cons _d (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _e (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _f (cdr (fn_5 $0)))))",
        "(lam (fn_1 $0 _c))",
        "(lam (fn_4 (fn_5 $0) _j))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_1 $0 (car (fn_5 $0))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons (car (fn_5 $0)) (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _x))",
        "(lam (_rflatten (cons _x (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_1 $0 _q))",
        "(lam (_rflatten (cons _q (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_4 (_rrevcdr (fn_5 $0)) _rempty))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (fn_5 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_5 $0)))))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _c _t))",
        "(lam (fn_0 $0 _d _t))",
        "(lam (fn_6 _t $0))",
        "(lam (fn_0 $0 _f _t))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_7 (cons _d (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _e (cdr (fn_5 $0)))))",
        "(lam (fn_7 (cons _f (cdr (fn_5 $0)))))",
        "(lam (fn_1 $0 _c))",
        "(lam (fn_0 $0 _b _s))",
        "(lam (fn_0 $0 _c _s))",
        "(lam (fn_0 $0 _d _s))",
        "(lam (fn_6 _s $0))",
        "(lam (fn_0 $0 _f _s))",
        "(lam (fn_0 $0 (_rconcat _b _q) _r))",
        "(lam (fn_2 _r _q $0))",
        "(lam (fn_0 $0 (_rconcat _d _q) _r))",
        "(lam (fn_0 $0 (_rconcat _e _q) _r))",
        "(lam (fn_0 $0 (_rconcat _f _q) _r))",
        "(lam (fn_0 $0 _b _u))",
        "(lam (fn_0 $0 _c _u))",
        "(lam (fn_0 $0 _d _u))",
        "(lam (fn_6 _u $0))",
        "(lam (fn_0 $0 _f _u))",
        "(lam (fn_1 (_rflatten (cdr (fn_5 $0))) _e))",
        "(lam (_rflatten (cons _e (cons _b (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (fn_0 $0 (_rconcat _b _a) _r))",
        "(lam (fn_2 _r _a $0))",
        "(lam (fn_0 $0 (_rconcat _d _a) _r))",
        "(lam (fn_0 $0 (_rconcat _e _a) _r))",
        "(lam (fn_0 $0 (_rconcat _f _a) _r))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_0 $0 _c _i))",
        "(lam (fn_0 $0 _d _i))",
        "(lam (fn_6 _i $0))",
        "(lam (fn_0 $0 _f _i))",
        "(lam (fn_9 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _r $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_9 $0 (lam (_rconcat _o $0))))",
        "(lam (fn_1 (_rflatten (cdr (fn_5 $0))) _f))",
        "(lam (_rflatten (cons _f (cons _b (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _f (cons _d (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _f (cons _e (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (_rflatten (cons _f (cons _f (cdr (fn_5 (_rflatten (cdr (fn_5 $0)))))))))",
        "(lam (fn_7 (cdr (cdr (fn_5 $0)))))",
        "(lam (_rflatten (cons _c (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _d (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _f (cdr (cdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_5 (fn_4 (_rrevcdr (fn_5 $0)) _rempty)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_5 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_5 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_5 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_5 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_5 (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_5 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_5 $0))))))))))))",
        "(lam (fn_4 (_rrevcdr (fn_5 $0)) _j))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (fn_5 $0)))))))",
        "(lam (fn_0 $0 (_rconcat _b _m) _c))",
        "(lam (fn_2 _c _m $0))",
        "(lam (fn_0 $0 (_rconcat _d _m) _c))",
        "(lam (fn_0 $0 (_rconcat _e _m) _c))",
        "(lam (fn_0 $0 (_rconcat _f _m) _c))",
        "(lam (fn_9 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_9 (_rflatten (fn_5 $0)) (lam (_rconcat $0 _b))))",
        "(lam (_rflatten (fn_5 (fn_9 $0 (lam (_rconcat $0 _b))))))",
        "(lam (_rflatten (_rsplit _t (fn_9 $0 (lam (_rconcat $0 _b))))))",
        "(lam (_rflatten (_rsplit _r (fn_9 $0 (lam (_rconcat $0 _b))))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _b _o))))",
        "(lam (fn_3 $0))",
        "(lam (fn_9 $0 (lam (_rconcat _d _o))))",
        "(lam (fn_9 $0 (lam (_rconcat _e _o))))",
        "(lam (fn_8 $0 _t))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (fn_4 (fn_5 $0) _s))",
        "(lam (_rflatten (_rappend _s (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _v) _d) _b _r))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _v) _d) _c _r))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _v) _d) _d _r))",
        "(lam (fn_6 _r (fn_0 $0 (_rconcat _a _v) _d)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _a _v) _d) _f _r))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_8 $0 _t))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _t (fn_5 $0))))",
        "(lam (_rflatten (_rappend _r (fn_5 $0))))",
        "(lam (_rflatten (_rappend _a (fn_5 $0))))",
        "(lam (_rflatten (_rappend _e (fn_5 $0))))",
        "(lam (_rflatten (_rappend _o (fn_5 $0))))",
        "(lam (fn_4 (fn_5 $0) _p))",
        "(lam (_rflatten (_rappend _p (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _f (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_0 $0 (_rconcat _b _o) _p))",
        "(lam (fn_2 _p _o $0))",
        "(lam (fn_0 $0 (_rconcat _d _o) _p))",
        "(lam (fn_0 $0 (_rconcat _e _o) _p))",
        "(lam (fn_0 $0 (_rconcat _f _o) _p))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_2 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_7 (_rsplit _a $0)))",
        "(lam (fn_7 (_rsplit _b $0)))",
        "(lam (_rflatten (cons _c (_rsplit _a $0))))",
        "(lam (_rflatten (cons _c (_rsplit _b $0))))",
        "(lam (_rflatten (cons _d (_rsplit _a $0))))",
        "(lam (fn_0 $0 _b _o))",
        "(lam (fn_0 $0 _c _o))",
        "(lam (fn_0 $0 _d _o))",
        "(lam (fn_6 _o $0))",
        "(lam (fn_0 $0 _f _o))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _c _t))",
        "(lam (fn_0 $0 _d _t))",
        "(lam (fn_6 _t $0))",
        "(lam (fn_0 $0 _f _t))",
        "(lam (fn_0 $0 (_rconcat _b _r) _s))",
        "(lam (fn_2 _s _r $0))",
        "(lam (fn_0 $0 (_rconcat _d _r) _s))",
        "(lam (fn_0 $0 (_rconcat _e _r) _s))",
        "(lam (fn_0 $0 (_rconcat _f _r) _s))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (fn_5 $0)))) (cdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _r (car (cdr (fn_5 $0)))) (cdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (fn_5 $0)))) (cdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _e (car (cdr (fn_5 $0)))) (cdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (_rflatten (if (_rmatch _o (car (cdr (fn_5 $0)))) (cdr (fn_5 $0)) (fn_5 $0))))",
        "(lam (fn_0 $0 (_rconcat _b _l) _l))",
        "(lam (fn_2 _l _l $0))",
        "(lam (fn_0 $0 (_rconcat _d _l) _l))",
        "(lam (fn_0 $0 (_rconcat _e _l) _l))",
        "(lam (fn_0 $0 (_rconcat _f _l) _l))",
        "(lam (fn_7 (fn_5 $0)))",
        "(lam (_rflatten (cons _c (fn_5 $0))))",
        "(lam (_rflatten (cons _d (fn_5 $0))))",
        "(lam (_rflatten (cons _e (fn_5 $0))))",
        "(lam (_rflatten (cons _f (fn_5 $0))))",
        "(lam (fn_7 (fn_5 $0)))",
        "(lam (_rflatten (cons _c (fn_5 $0))))",
        "(lam (_rflatten (cons _d (fn_5 $0))))",
        "(lam (_rflatten (cons _e (fn_5 $0))))",
        "(lam (_rflatten (cons _f (fn_5 $0))))",
        "(lam (fn_9 $0 (lam _l)))",
        "(lam (fn_9 (_rflatten (fn_5 $0)) (lam _l)))",
        "(lam (fn_9 $0 (lam (_rconcat _t _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _r _rempty))))",
        "(lam (fn_9 $0 (lam (_rconcat _a _rempty))))",
        "(lam (_rflatten (_rappend _t (_rappend _t (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _r (_rappend _t (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _r (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _a (_rappend _t (_rrevcdr (fn_5 $0))))))",
        "(lam (fn_4 (fn_5 $0) _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _q _a) _s) _b _q))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _q _a) _s) _c _q))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _q _a) _s) _d _q))",
        "(lam (fn_6 _q (fn_0 $0 (_rconcat _q _a) _s)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _q _a) _s) _f _q))",
        "(lam (fn_1 $0 _e))",
        "(lam (_rflatten (cons _e (cons _b (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (fn_5 $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (fn_5 $0))))))",
        "(lam (fn_4 (fn_5 $0) _v))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _d (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _e (_rrevcdr (fn_5 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _f (_rrevcdr (fn_5 $0))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _w))",
        "(lambda (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _d))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _b) _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _b _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _b) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t) _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t) _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t) _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t) _f _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _l))",
        "(lambda (_rflatten (cons _l (cons _b (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _l (cons _d (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _l (cons _e (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _l (cons _f (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _e) _e))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _e) _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _n))",
        "(lambda (_rflatten (cons _n (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _n (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _n (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _n (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _rempty))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _w) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _p _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _v))))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _t) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _i _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _t) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _t) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _t) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _u))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _u _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _u))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (_rflatten (cons _e (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _x) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _t _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _x) _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _y))",
        "(lambda (_rflatten (cons _y (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _y (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _y (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _y (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _c (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _c (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _a) _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _b _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _t _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (_rflatten (cons _q (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _t $0) _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _t $0) _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _t $0) _d _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _r (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _t $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _t $0) _f _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _g))",
        "(lambda (_rflatten (cons _g (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _g (cons _b (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (cons _g (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda _p)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _l)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _k)) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _k) _l))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _l _k $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _y) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _t _y $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _y) _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _i))",
        "(lambda (_rflatten (cons _i (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _v))) _b _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _v))) _c _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _v))) _d _a))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _a (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _v)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _v))) _f _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _p) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _p _p $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _p) _p))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _p))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _p $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _f $0))))",
        "(lambda (_rflatten (if (_rmatch _t (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _r (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _a (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _o (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _r) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _r _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _r) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _r) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _r) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _w) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _t _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _v) _t) _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _v) _t) _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _v) _t) _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _v) _t)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _v) _t) _f _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _g $0) _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _g $0) _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _g $0) _d _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _r (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _g $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _g $0) _f _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _rempty _m))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _t $0)) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _l))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _l _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _l))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _c (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _b) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _c _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _n))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _n $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _b _u) _e))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _e _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _e _u (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _d))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _o))",
        "(lambda (_rflatten (_rappend _o (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _b))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _e) _n))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _n _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _i) _d))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _d _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _i) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _i) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _i) _d))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _c (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _d (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _f (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _d))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _y))",
        "(lambda (_rflatten (_rappend _y (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _c) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _c _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _c) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _x) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _s _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _m) _e))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _e _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _m) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _m) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _m) _e))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _k))",
        "(lambda (_rflatten (cons _k (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _k (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _k (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _k (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _x))",
        "(lambda (_rflatten (cons _x (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _l) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _r _l $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _d) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _r _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _e) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _c _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _e) _c))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _m))",
        "(lambda (_rflatten (cons _m (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _m (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _m (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _m (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _j))",
        "(lambda (_rflatten (cons _j (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _j (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _j (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _j (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _s _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _n))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _n $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _n))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _a) _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _g _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _a) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _h))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _h $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _h))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _g))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _g $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (_rflatten (cons _e (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _t))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _c (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _p) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _t _p $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _p) _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _g))",
        "(lambda (_rflatten (_rappend _g (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a) _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a) _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a) _d _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a) _f _r))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) $0)) (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _i) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) $0)) (if (_rmatch _i (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) $0)) (if (_rmatch _z (_rtail (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) $0)) (if (_rmatch (car (#(lambda (_rsplit _rempty $0)) $0)) (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _c (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons _c (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons _d (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _i))",
        "(lambda (_rflatten (cons _i (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (_rflatten (cons _g (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _g (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _g (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _g (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _i))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _u) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _s _u $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _u) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _u) _s))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _s))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _s))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _s))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _s $0))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _s))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _t) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _s _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _w) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _p _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _f) _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _g _f $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _f) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _c))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rempty $0)) $0)) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _x))",
        "(lambda (_rflatten (cons _x (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _x (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (_rflatten (cons _q (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _rempty))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _s))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _s $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _r _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _u))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _u $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _u))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _e))",
        "(lambda (_rflatten (cons _e (cons _b (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _a) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _r _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _a) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _a) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _a) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _i))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _f))",
        "(lambda (_rflatten (cons _f (cons _b (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _f (cons _d (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _f (cons _e (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (cons _f (cons _f (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _c (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _d (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _f (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _rempty)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _m) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _c _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _m) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _o))))",
        "(lambda (#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _o))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _o))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _s))",
        "(lambda (_rflatten (_rappend _s (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _v) _d) _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _v) _d) _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _v) _d) _d _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _v) _d)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _v) _d) _f _r))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _t (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _r (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _o (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _p))",
        "(lambda (_rflatten (_rappend _p (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _p _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (_rsplit _a $0)))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (_rsplit _b $0)))",
        "(lambda (_rflatten (cons _c (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _c (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _d (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _o))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _f _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _r) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _s _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _r) _s))",
        "(lambda (_rflatten (if (_rmatch _t (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _r (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _a (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _e (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _o (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _l) _l))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2)))) _l _l $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _l) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _l) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _l) _l))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (_rflatten (cons _b $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _rempty))))",
        "(lambda (_rflatten (_rappend _t (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _r (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _a (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _s) _b _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _s) _c _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _s) _d _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1))) _q (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _s)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _s) _f _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (_rflatten (cons _e (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _v))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _e (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 53808,
            "final_cost": 125767,
            "compression_ratio": 1.4278387812383218,
            "cumulative_compression_ratio": 1.4278387812383218,
            "num_uses": 380,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _u _c) _a": "(_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))) _b _a": "(_rflatten (map (lam (if (_rmatch $0 _a) _b $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))) _c _a": "(_rflatten (map (lam (if (_rmatch $0 _a) _c $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))) _d _a": "(_rflatten (map (lam (if (_rmatch $0 _a) _d $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))) _e _a": "(_rflatten (map (lam (if (_rmatch $0 _a) _e $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))) _f _a": "(_rflatten (map (lam (if (_rmatch $0 _a) _f $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _a _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _c _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _c _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _d _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _d _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _e _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _e _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _f _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _f _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _v) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _b _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _t) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _e _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _f _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _c _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _c _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _c _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _d _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _d _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _e _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _e _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _f _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _f _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _b _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _d _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _e _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _f _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _l) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _l) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _l) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _l) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _l) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _rempty) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _t $0)) _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _t $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _d _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _f _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))) _b _q": "(_rflatten (map (lam (if (_rmatch $0 _q) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))) _c _q": "(_rflatten (map (lam (if (_rmatch $0 _q) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))) _d _q": "(_rflatten (map (lam (if (_rmatch $0 _q) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))) _e _q": "(_rflatten (map (lam (if (_rmatch $0 _q) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))) _f _q": "(_rflatten (map (lam (if (_rmatch $0 _q) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))) _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))) _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))) _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))) _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _c _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))) _c _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))) _c _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))) _c _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))) _c _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))) _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))) _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))) _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))) _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _e _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))) _e _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))) _e _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))) _e _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))) _e _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _f _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))) _f _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))) _f _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _a _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))) _f _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))) _f _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _a) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _v) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))) _b _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))) _b _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _c _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))) _c _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))) _c _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _c $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _d _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))) _d _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))) _d _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _e _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))) _e _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))) _e _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _e $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _f _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))) _f _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))) _f _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _f $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _v) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _d _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _e _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _f _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _f $0)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cons _a (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 19998,
            "final_cost": 105769,
            "compression_ratio": 1.1890724125216272,
            "cumulative_compression_ratio": 1.6978037042989913,
            "num_uses": 45,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a": "(_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b": "(_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c": "(_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d": "(_rflatten (cons _d (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _f": "(_rflatten (cons _f (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _f": "(_rflatten (cons _f (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _i": "(_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _j": "(_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _k": "(_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _l": "(_rflatten (cons _l (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _m": "(_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r": "(_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _x": "(_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _y": "(_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat _c #1) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c $1) $2))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 8686,
            "final_cost": 97083,
            "compression_ratio": 1.0894698350895626,
            "cumulative_compression_ratio": 1.8497059217370704,
            "num_uses": 52,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 _b _a $0": "(fn_0 $0 (_rconcat _c _a) _b)"
                },
                {
                    "fn_2 _g _a $0": "(fn_0 $0 (_rconcat _c _a) _g)"
                },
                {
                    "fn_2 _r _a $0": "(fn_0 $0 (_rconcat _c _a) _r)"
                },
                {
                    "fn_2 _b _b $0": "(fn_0 $0 (_rconcat _c _b) _b)"
                },
                {
                    "fn_2 _c _b $0": "(fn_0 $0 (_rconcat _c _b) _c)"
                },
                {
                    "fn_2 _c _c $0": "(fn_0 $0 (_rconcat _c _c) _c)"
                },
                {
                    "fn_2 _r _d $0": "(fn_0 $0 (_rconcat _c _d) _r)"
                },
                {
                    "fn_2 _c _e $0": "(fn_0 $0 (_rconcat _c _e) _c)"
                },
                {
                    "fn_2 _e _e $0": "(fn_0 $0 (_rconcat _c _e) _e)"
                },
                {
                    "fn_2 _n _e $0": "(fn_0 $0 (_rconcat _c _e) _n)"
                },
                {
                    "fn_2 _g _f $0": "(fn_0 $0 (_rconcat _c _f) _g)"
                },
                {
                    "fn_2 _o _g $0": "(fn_0 $0 (_rconcat _c _g) _o)"
                },
                {
                    "fn_2 _d _i $0": "(fn_0 $0 (_rconcat _c _i) _d)"
                },
                {
                    "fn_2 _l _k $0": "(fn_0 $0 (_rconcat _c _k) _l)"
                },
                {
                    "fn_2 _l _l $0": "(fn_0 $0 (_rconcat _c _l) _l)"
                },
                {
                    "fn_2 _r _l $0": "(fn_0 $0 (_rconcat _c _l) _r)"
                },
                {
                    "fn_2 _c _m $0": "(fn_0 $0 (_rconcat _c _m) _c)"
                },
                {
                    "fn_2 _e _m $0": "(fn_0 $0 (_rconcat _c _m) _e)"
                },
                {
                    "fn_2 _o _o $0": "(fn_0 $0 (_rconcat _c _o) _o)"
                },
                {
                    "fn_2 _p _o $0": "(fn_0 $0 (_rconcat _c _o) _p)"
                },
                {
                    "fn_2 _p _p $0": "(fn_0 $0 (_rconcat _c _p) _p)"
                },
                {
                    "fn_2 _t _p $0": "(fn_0 $0 (_rconcat _c _p) _t)"
                },
                {
                    "fn_2 _l _q $0": "(fn_0 $0 (_rconcat _c _q) _l)"
                },
                {
                    "fn_2 _r _q $0": "(fn_0 $0 (_rconcat _c _q) _r)"
                },
                {
                    "fn_2 _s _q $0": "(fn_0 $0 (_rconcat _c _q) _s)"
                },
                {
                    "fn_2 _t _q $0": "(fn_0 $0 (_rconcat _c _q) _t)"
                },
                {
                    "fn_2 _u _q $0": "(fn_0 $0 (_rconcat _c _q) _u)"
                },
                {
                    "fn_2 _r _r $0": "(fn_0 $0 (_rconcat _c _r) _r)"
                },
                {
                    "fn_2 _s _r $0": "(fn_0 $0 (_rconcat _c _r) _s)"
                },
                {
                    "fn_2 _d _t $0": "(fn_0 $0 (_rconcat _c _t) _d)"
                },
                {
                    "fn_2 _i _t $0": "(fn_0 $0 (_rconcat _c _t) _i)"
                },
                {
                    "fn_2 _s _t $0": "(fn_0 $0 (_rconcat _c _t) _s)"
                },
                {
                    "fn_2 _e _u $0": "(fn_0 $0 (_rconcat _c _u) _e)"
                },
                {
                    "fn_2 _s _u $0": "(fn_0 $0 (_rconcat _c _u) _s)"
                },
                {
                    "fn_2 _p _w $0": "(fn_0 $0 (_rconcat _c _w) _p)"
                },
                {
                    "fn_2 _t _w $0": "(fn_0 $0 (_rconcat _c _w) _t)"
                },
                {
                    "fn_2 _s _x $0": "(fn_0 $0 (_rconcat _c _x) _s)"
                },
                {
                    "fn_2 _t _x $0": "(fn_0 $0 (_rconcat _c _x) _t)"
                },
                {
                    "fn_2 _t _y $0": "(fn_0 $0 (_rconcat _c _y) _t)"
                },
                {
                    "fn_2 _e _u (_rflatten (_rsplit _rempty $0))": "(fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _c _u) _e)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (_rflatten (map (lambda (_rconcat _c _o)) (_rsplit _rempty $0))))",
            "arity": 1,
            "name": "fn_3",
            "utility": 7891,
            "final_cost": 89192,
            "compression_ratio": 1.088472060274464,
            "cumulative_compression_ratio": 2.0133532155350258,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0": "(_rflatten (map (lam (_rconcat _c _o)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _a (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1))))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 6060,
            "final_cost": 83132,
            "compression_ratio": 1.0728961170187172,
            "cumulative_compression_ratio": 2.1601188471346773,
            "num_uses": 15,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 (_rsplit _rempty $0) _g": "(_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _j": "(_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _j": "(_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _m": "(_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _p": "(_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _rempty": "(_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _s": "(_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _t": "(_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _t": "(_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _u": "(_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _v": "(_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _y": "(_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_5",
            "utility": 5858,
            "final_cost": 77274,
            "compression_ratio": 1.0758081631596657,
            "cumulative_compression_ratio": 2.3238734891425317,
            "num_uses": 475,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_5 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_5 (_rflatten (cdr (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam $0) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam _j) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam _k) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam _l) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (map (lam _p) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _a _s)": "(_rsplit _rempty (fn_0 $0 _a _s))"
                },
                {
                    "fn_5 (fn_0 $0 _e _s)": "(_rsplit _rempty (fn_0 $0 _e _s))"
                },
                {
                    "fn_5 (fn_0 $0 _o _s)": "(_rsplit _rempty (fn_0 $0 _o _s))"
                },
                {
                    "fn_5 (fn_0 $0 _r _s)": "(_rsplit _rempty (fn_0 $0 _r _s))"
                },
                {
                    "fn_5 (fn_0 $0 _rempty _m)": "(_rsplit _rempty (fn_0 $0 _rempty _m))"
                },
                {
                    "fn_5 (fn_0 $0 _t _s)": "(_rsplit _rempty (fn_0 $0 _t _s))"
                },
                {
                    "fn_5 (fn_4 (_rrevcdr (_rsplit _rempty $0)) _rempty)": "(_rsplit _rempty (fn_4 (_rrevcdr (_rsplit _rempty $0)) _rempty))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #1 _e #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _e $1)))",
            "arity": 2,
            "name": "fn_6",
            "utility": 2727,
            "final_cost": 74547,
            "compression_ratio": 1.0365809489315465,
            "cumulative_compression_ratio": 2.4088829865722294,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _b $0": "(fn_0 $0 _e _b)"
                },
                {
                    "fn_6 _d $0": "(fn_0 $0 _e _d)"
                },
                {
                    "fn_6 _g $0": "(fn_0 $0 _e _g)"
                },
                {
                    "fn_6 _h $0": "(fn_0 $0 _e _h)"
                },
                {
                    "fn_6 _i $0": "(fn_0 $0 _e _i)"
                },
                {
                    "fn_6 _m $0": "(fn_0 $0 _e _m)"
                },
                {
                    "fn_6 _n $0": "(fn_0 $0 _e _n)"
                },
                {
                    "fn_6 _o $0": "(fn_0 $0 _e _o)"
                },
                {
                    "fn_6 _p $0": "(fn_0 $0 _e _p)"
                },
                {
                    "fn_6 _r $0": "(fn_0 $0 _e _r)"
                },
                {
                    "fn_6 _s $0": "(fn_0 $0 _e _s)"
                },
                {
                    "fn_6 _t $0": "(fn_0 $0 _e _t)"
                },
                {
                    "fn_6 _u $0": "(fn_0 $0 _e _u)"
                },
                {
                    "fn_6 _a (_rflatten (map (lam (_rconcat _a _v)) (fn_5 $0)))": "(fn_0 (_rflatten (map (lam (_rconcat _a _v)) (fn_5 $0))) _e _a)"
                },
                {
                    "fn_6 _r (fn_0 $0 (_rconcat _a _v) _d)": "(fn_0 (fn_0 $0 (_rconcat _a _v) _d) _e _r)"
                },
                {
                    "fn_6 _t (fn_0 $0 (_rconcat _a _x) _t)": "(fn_0 (fn_0 $0 (_rconcat _a _x) _t) _e _t)"
                },
                {
                    "fn_6 _t (fn_0 $0 (_rconcat _f _v) _t)": "(fn_0 (fn_0 $0 (_rconcat _f _v) _t) _e _t)"
                },
                {
                    "fn_6 _q (fn_0 $0 (_rconcat _q _a) _s)": "(fn_0 (fn_0 $0 (_rconcat _q _a) _s) _e _q)"
                },
                {
                    "fn_6 _r (fn_0 $0 (_rconcat _u _c) _a)": "(fn_0 (fn_0 $0 (_rconcat _u _c) _a) _e _r)"
                },
                {
                    "fn_6 _r (fn_2 _d _t $0)": "(fn_0 (fn_2 _d _t $0) _e _r)"
                },
                {
                    "fn_6 _r (fn_2 _o _g $0)": "(fn_0 (fn_2 _o _g $0) _e _r)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _b #0))",
            "dreamcoder": "#(lambda (_rflatten (cons _b $0)))",
            "arity": 1,
            "name": "fn_7",
            "utility": 2424,
            "final_cost": 72123,
            "compression_ratio": 1.033609250863109,
            "cumulative_compression_ratio": 2.4898437391678105,
            "num_uses": 25,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 (_rsplit _a $0)": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_7 (_rsplit _b $0)": "(_rflatten (cons _b (_rsplit _b $0)))"
                },
                {
                    "fn_7 (cdr (cdr (fn_5 $0)))": "(_rflatten (cons _b (cdr (cdr (fn_5 $0)))))"
                },
                {
                    "fn_7 (cdr (fn_5 $0))": "(_rflatten (cons _b (cdr (fn_5 $0))))"
                },
                {
                    "fn_7 (cons _a (cdr (cdr (fn_5 $0))))": "(_rflatten (cons _b (cons _a (cdr (cdr (fn_5 $0))))))"
                },
                {
                    "fn_7 (cons _b (cdr (cdr (fn_5 $0))))": "(_rflatten (cons _b (cons _b (cdr (cdr (fn_5 $0))))))"
                },
                {
                    "fn_7 (cons _d (cdr (fn_5 $0)))": "(_rflatten (cons _b (cons _d (cdr (fn_5 $0)))))"
                },
                {
                    "fn_7 (cons _e (cdr (fn_5 $0)))": "(_rflatten (cons _b (cons _e (cdr (fn_5 $0)))))"
                },
                {
                    "fn_7 (cons _f (cdr (fn_5 $0)))": "(_rflatten (cons _b (cons _f (cdr (fn_5 $0)))))"
                },
                {
                    "fn_7 (fn_5 $0)": "(_rflatten (cons _b (fn_5 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _b #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 2121,
            "final_cost": 70002,
            "compression_ratio": 1.0302991343104482,
            "cumulative_compression_ratio": 2.565283849032885,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _f": "(_rflatten (_rappend _f (_rsplit _b $0)))"
                },
                {
                    "fn_8 $0 _p": "(_rflatten (_rappend _p (_rsplit _b $0)))"
                },
                {
                    "fn_8 $0 _t": "(_rflatten (_rappend _t (_rsplit _b $0)))"
                },
                {
                    "fn_8 $0 _w": "(_rflatten (_rappend _w (_rsplit _b $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (fn_5 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1818,
            "final_cost": 68184,
            "compression_ratio": 1.026663146779303,
            "cumulative_compression_ratio": 2.6336823888302243,
            "num_uses": 98,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 (lam $0)": "(_rflatten (map (lam $0) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (fn_5 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_5 $0)) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (fn_5 (_rflatten (fn_5 $0)))))"
                },
                {
                    "fn_9 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (fn_5 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_5 $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (fn_5 (_rflatten (fn_5 $0)))))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _a $0))": "(_rflatten (map (lam (_rconcat _a $0)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _a _o))": "(_rflatten (map (lam (_rconcat _a _o)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _a _rempty))": "(_rflatten (map (lam (_rconcat _a _rempty)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _a _v))": "(_rflatten (map (lam (_rconcat _a _v)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _b _o))": "(_rflatten (map (lam (_rconcat _b _o)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _d _o))": "(_rflatten (map (lam (_rconcat _d _o)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _e $0))": "(_rflatten (map (lam (_rconcat _e $0)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _e _o))": "(_rflatten (map (lam (_rconcat _e _o)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _o $0))": "(_rflatten (map (lam (_rconcat _o $0)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _r $0))": "(_rflatten (map (lam (_rconcat _r $0)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _r _rempty))": "(_rflatten (map (lam (_rconcat _r _rempty)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _t $0))": "(_rflatten (map (lam (_rconcat _t $0)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam (_rconcat _t _rempty))": "(_rflatten (map (lam (_rconcat _t _rempty)) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam _j)": "(_rflatten (map (lam _j) (fn_5 $0)))"
                },
                {
                    "fn_9 $0 (lam _k)": "(_rflatten (map (lam _k) (fn_5 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_5 $0)) (lam _k)": "(_rflatten (map (lam _k) (fn_5 (_rflatten (fn_5 $0)))))"
                },
                {
                    "fn_9 (_rflatten (map (lam $0) (fn_5 $0))) (lam _k)": "(_rflatten (map (lam _k) (fn_5 (_rflatten (map (lam $0) (fn_5 $0))))))"
                },
                {
                    "fn_9 $0 (lam _l)": "(_rflatten (map (lam _l) (fn_5 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_5 $0)) (lam _l)": "(_rflatten (map (lam _l) (fn_5 (_rflatten (fn_5 $0)))))"
                },
                {
                    "fn_9 $0 (lam _p)": "(_rflatten (map (lam _p) (fn_5 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_5 $0)) (lam _p)": "(_rflatten (map (lam _p) (fn_5 (_rflatten (fn_5 $0)))))"
                },
                {
                    "fn_9 (_rflatten (map (lam _k) (fn_5 $0))) (lam _p)": "(_rflatten (map (lam _p) (fn_5 (_rflatten (map (lam _k) (fn_5 $0))))))"
                },
                {
                    "fn_9 (_rflatten (map (lam _l) (fn_5 $0))) (lam _p)": "(_rflatten (map (lam _p) (fn_5 (_rflatten (map (lam _l) (fn_5 $0))))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}