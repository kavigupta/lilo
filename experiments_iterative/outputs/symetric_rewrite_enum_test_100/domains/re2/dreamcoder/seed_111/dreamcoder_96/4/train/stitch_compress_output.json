{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_enum_test_100 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 100 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 145010,
    "final_cost": 63036,
    "compression_ratio": 2.300431499460626,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _h $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _t _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _o _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _q _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _a _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0))))))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) _b $0)) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _t $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rempty $1)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _q (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rsplit _rempty $1))) _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rrevcdr (_rsplit _rempty $1)))) _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rsplit _d $1))) _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0))))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y (_rconcat _rempty _a)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (map (lam _e) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _v) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _k) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _o _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _q _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _t _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _o _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _q _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _h $0))))",
        "(lam (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _o _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _q _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _a _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _d (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _q (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _n _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _n _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _n _e) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat (_rtail (map (lam _n) (_rsplit _rempty $1))) _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rtail (map (lam _n) (_rsplit _rempty $1)))) (_rconcat _n _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat (_rconcat _rempty _d) _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _o (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _o _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _i _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _i _m) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _i _m) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (_rsplit _d $0))))",
        "(lam (_rflatten (cons _y (_rsplit _u $0))))",
        "(lam (_rflatten (cons _y (_rsplit _h $0))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _o _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _q _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _o _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _t _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _o _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _a _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _d (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _g (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) _b $0)) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _u)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j $0)) (_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat (_rconcat _rempty _p) _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p (_rtail (_rappend _t (_rsplit _rempty $1)))) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _p)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _p)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _c _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _q (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _h _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty _h) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _t (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _o (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _q (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty (_rconcat _v _a)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _f (cons _s (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _rempty (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _o (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d $0))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _o (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _t _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _o _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _q _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _t $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _o (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _q (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _b (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _d $0))))",
        "(lam (_rflatten (cons _a (_rsplit _u $0))))",
        "(lam (_rflatten (cons _a (_rsplit _h $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _l)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _v (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))"
    ],
    "rewritten": [
        "(lam (_rflatten (_rappend _w (fn_2 $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _rdot $0))))",
        "(lam (fn_9 $0 _w))",
        "(lam (_rflatten (_rappend _w (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _h $0))))",
        "(lam (fn_0 $0 _t _d))",
        "(lam (fn_0 $0 _o _d))",
        "(lam (fn_0 $0 _q _d))",
        "(lam (fn_0 $0 _a _d))",
        "(lam (fn_0 $0 _b _d))",
        "(lam (fn_0 $0 (_rconcat _t _b) _b))",
        "(lam (fn_0 $0 (_rconcat _o _b) _b))",
        "(lam (fn_0 $0 (_rconcat _q _b) _b))",
        "(lam (fn_0 $0 (_rconcat _a _b) _b))",
        "(lam (fn_3 _b _b $0))",
        "(lam (fn_1 $0 _u _r))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _u _r))",
        "(lam (fn_1 (_rflatten (_rsplit _d $0)) _u _r))",
        "(lam (fn_1 (fn_0 $0 _b _b) _u _r))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (fn_2 $0)))) _u _r))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _n _l))",
        "(lam (_rflatten (cons _l (cons _n (cdr (cdr (fn_2 $0)))))))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (cdr (fn_2 $0))))) _n _l))",
        "(lam (fn_3 _e _e $0))",
        "(lam (fn_0 $0 (_rconcat _c _e) _e))",
        "(lam (fn_0 $0 (_rconcat _d _e) _e))",
        "(lam (fn_0 $0 (_rconcat _e _e) _e))",
        "(lam (fn_0 $0 (_rconcat _f _e) _e))",
        "(lam (fn_6 _n $0))",
        "(lam (fn_1 $0 _c _n))",
        "(lam (fn_1 $0 _d _n))",
        "(lam (fn_1 $0 _e _n))",
        "(lam (fn_1 $0 _f _n))",
        "(lam (fn_7 $0 (lam _k)))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_4 (_rrevcdr (fn_2 $0)) _u))",
        "(lam (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (fn_9 $0 _t))",
        "(lam (_rflatten (_rappend _d (_rsplit _t $0))))",
        "(lam (fn_5 $0 _j))",
        "(lam (fn_7 $0 (lam (_rconcat _b _j))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _j))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _j))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _j))))",
        "(lam (fn_3 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _c _o) _o))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_3 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _c _o) _o))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_7 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (fn_7 $0 (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1))))))",
        "(lam (fn_7 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (fn_2 $1)) (fn_2 $0))))))",
        "(lam (fn_3 _u _q $0))",
        "(lam (fn_0 $0 (_rconcat _c _q) _u))",
        "(lam (fn_0 $0 (_rconcat _d _q) _u))",
        "(lam (fn_0 $0 (_rconcat _e _q) _u))",
        "(lam (fn_0 $0 (_rconcat _f _q) _u))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _m))",
        "(lam (fn_1 $0 _t _e))",
        "(lam (fn_1 $0 _o _e))",
        "(lam (fn_1 $0 _q _e))",
        "(lam (fn_1 $0 _a _e))",
        "(lam (fn_6 _e $0))",
        "(lam (fn_8 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _c (fn_2 $0))))",
        "(lam (_rflatten (cons _d (fn_2 $0))))",
        "(lam (_rflatten (cons _e (fn_2 $0))))",
        "(lam (fn_7 $0 (lam _j)))",
        "(lam (_rflatten (fn_2 (fn_7 $0 (lam _j)))))",
        "(lam (fn_7 $0 (lam (_rconcat _t _rempty))))",
        "(lam (fn_7 $0 (lam (_rconcat _o _rempty))))",
        "(lam (fn_7 $0 (lam (_rconcat _q _rempty))))",
        "(lam (fn_5 $0 _s))",
        "(lam (fn_7 $0 (lam (_rconcat _b _s))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _s))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _s))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _s))))",
        "(lam (fn_6 _a $0))",
        "(lam (fn_1 $0 _c _a))",
        "(lam (fn_1 $0 _d _a))",
        "(lam (fn_1 $0 _e _a))",
        "(lam (fn_1 $0 _f _a))",
        "(lam (fn_0 $0 _t _r))",
        "(lam (fn_0 $0 _o _r))",
        "(lam (fn_0 $0 _q _r))",
        "(lam (fn_0 $0 _a _r))",
        "(lam (fn_0 $0 _b _r))",
        "(lam (fn_0 $0 (_rconcat _t _x) _t))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _t _x) _t))",
        "(lam (fn_0 $0 (_rconcat (_rtail (_rappend _t (fn_2 $0))) _x) _t))",
        "(lam (fn_0 $0 (_rconcat (_rtail (_rappend _t (_rrevcdr (fn_2 $0)))) _x) _t))",
        "(lam (fn_0 $0 (_rconcat (_rtail (_rappend _t (_rsplit _d $0))) _x) _t))",
        "(lam (fn_6 _y $0))",
        "(lam (fn_1 $0 _c _y))",
        "(lam (fn_1 $0 _d _y))",
        "(lam (fn_1 $0 _e _y))",
        "(lam (fn_1 $0 _f _y))",
        "(lam (fn_1 $0 _v _c))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _v _c))",
        "(lam (fn_1 $0 _v _c))",
        "(lam (fn_1 (_rflatten (_rsplit _d $0)) _v _c))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (fn_2 $0)))) _v _c))",
        "(lam (fn_0 $0 (_rconcat _y _a) _b))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _y _a) _b))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _y _a) _b))))",
        "(lam (fn_0 $0 (_rconcat _y (_rconcat _rempty _a)) _b))",
        "(lam (fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _y _a) _b))",
        "(lam (fn_3 _t _q $0))",
        "(lam (fn_0 $0 (_rconcat _c _q) _t))",
        "(lam (fn_0 $0 (_rconcat _d _q) _t))",
        "(lam (fn_0 $0 (_rconcat _e _q) _t))",
        "(lam (fn_0 $0 (_rconcat _f _q) _t))",
        "(lam (fn_6 _q $0))",
        "(lam (fn_1 $0 _c _q))",
        "(lam (fn_1 $0 _d _q))",
        "(lam (fn_1 $0 _e _q))",
        "(lam (fn_1 $0 _f _q))",
        "(lam (fn_6 _g $0))",
        "(lam (fn_6 _g (_rflatten (fn_2 $0))))",
        "(lam (fn_1 $0 _c _g))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _c _g))",
        "(lam (fn_1 $0 _d _g))",
        "(lam (fn_7 $0 (lam _p)))",
        "(lam (_rflatten (map (lam _p) (map (lam _e) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _v) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _k) (fn_2 $0)))))",
        "(lam (fn_3 _l _k $0))",
        "(lam (fn_0 $0 (_rconcat _c _k) _l))",
        "(lam (fn_0 $0 (_rconcat _d _k) _l))",
        "(lam (fn_0 $0 (_rconcat _e _k) _l))",
        "(lam (fn_0 $0 (_rconcat _f _k) _l))",
        "(lam (fn_0 $0 (_rconcat _t _y) _t))",
        "(lam (fn_0 $0 (_rconcat _o _y) _t))",
        "(lam (fn_0 $0 (_rconcat _q _y) _t))",
        "(lam (fn_0 $0 (_rconcat _a _y) _t))",
        "(lam (fn_3 _t _y $0))",
        "(lam (fn_6 _i $0))",
        "(lam (fn_1 $0 _c _i))",
        "(lam (fn_1 $0 _d _i))",
        "(lam (fn_1 $0 _e _i))",
        "(lam (fn_1 $0 _f _i))",
        "(lam (_rflatten (map (lam (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_4 (_rrevcdr (fn_2 $0)) _t))",
        "(lam (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_0 $0 (_rconcat _t _p) _p))",
        "(lam (fn_0 $0 (_rconcat _o _p) _p))",
        "(lam (fn_0 $0 (_rconcat _q _p) _p))",
        "(lam (fn_0 $0 (_rconcat _a _p) _p))",
        "(lam (fn_3 _p _p $0))",
        "(lam (fn_8 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _c (fn_2 $0))))",
        "(lam (_rflatten (cons _d (fn_2 $0))))",
        "(lam (_rflatten (cons _e (fn_2 $0))))",
        "(lam (fn_5 $0 _n))",
        "(lam (fn_7 $0 (lam (_rconcat _b _n))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _n))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _n))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _n))))",
        "(lam (_rflatten (_rappend _p (fn_2 $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rdot $0))))",
        "(lam (fn_9 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _h $0))))",
        "(lam (_rflatten (if (_rmatch (_rtail (fn_2 $0)) _s) (_rrevcdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (fn_3 _r _r $0))",
        "(lam (fn_3 _t _w $0))",
        "(lam (fn_0 $0 (_rconcat _c _w) _t))",
        "(lam (fn_0 $0 (_rconcat _d _w) _t))",
        "(lam (fn_0 $0 (_rconcat _e _w) _t))",
        "(lam (fn_0 $0 (_rconcat _f _w) _t))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _rempty _m))",
        "(lam (_rflatten (fn_2 (fn_0 $0 _rempty _m))))",
        "(lam (fn_0 $0 (_rconcat _rempty _rempty) _m))",
        "(lam (fn_0 (_rflatten (_rsplit _d $0)) _rempty _m))",
        "(lam (fn_0 $0 (_rconcat _t _q) _l))",
        "(lam (fn_0 $0 (_rconcat _o _q) _l))",
        "(lam (fn_0 $0 (_rconcat _q _q) _l))",
        "(lam (fn_0 $0 (_rconcat _a _q) _l))",
        "(lam (fn_3 _l _q $0))",
        "(lam (fn_8 (cdr (fn_2 $0))))",
        "(lam (_rflatten (cons _b (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _c (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _d (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _e (cdr (fn_2 $0)))))",
        "(lam (fn_3 _c _b $0))",
        "(lam (fn_0 $0 (_rconcat _c _b) _c))",
        "(lam (fn_0 $0 (_rconcat _d _b) _c))",
        "(lam (fn_0 $0 (_rconcat _e _b) _c))",
        "(lam (fn_0 $0 (_rconcat _f _b) _c))",
        "(lam (fn_0 $0 _q _n))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _q _n))",
        "(lam (fn_0 $0 (_rconcat _q _rempty) _n))",
        "(lam (fn_0 $0 (_rconcat _rempty _q) _n))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _q _rempty) _n))",
        "(lam (fn_3 _e _u $0))",
        "(lam (fn_3 _e _u (_rflatten (fn_2 $0))))",
        "(lam (fn_0 $0 (_rconcat _c _u) _e))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _c _u) _e))",
        "(lam (fn_0 $0 (_rconcat _d _u) _e))",
        "(lam (fn_6 _r $0))",
        "(lam (fn_1 $0 _c _r))",
        "(lam (fn_1 $0 _d _r))",
        "(lam (fn_1 $0 _e _r))",
        "(lam (fn_1 $0 _f _r))",
        "(lam (fn_6 _b $0))",
        "(lam (fn_1 $0 _c _b))",
        "(lam (fn_1 $0 _d _b))",
        "(lam (fn_1 $0 _e _b))",
        "(lam (fn_1 $0 _f _b))",
        "(lam (_rflatten (_rappend _o (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _o))",
        "(lam (_rflatten (_rappend _f (fn_2 $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (fn_9 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lam (fn_1 $0 _t (car (fn_2 $0))))",
        "(lam (fn_1 $0 _o (car (fn_2 $0))))",
        "(lam (fn_1 $0 _q (car (fn_2 $0))))",
        "(lam (fn_1 $0 _a (car (fn_2 $0))))",
        "(lam (fn_6 (car (fn_2 $0)) $0))",
        "(lam (fn_0 $0 (_rconcat _n _e) _n))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _n _e) _n))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _n _e) _n))))",
        "(lam (fn_0 $0 (_rconcat (_rtail (map (lam _n) (fn_2 $0))) _e) _n))",
        "(lam (fn_0 $0 (_rconcat _n _e) (_rtail (map (lam _n) (fn_2 $0)))))",
        "(lam (fn_0 $0 (_rconcat _d _i) _d))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _d _i) _d))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _d _i) _d))))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _d) _i) _d))",
        "(lam (fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _d _i) _d))",
        "(lam (fn_6 _rempty $0))",
        "(lam (fn_1 $0 _c _rempty))",
        "(lam (fn_1 $0 _d _rempty))",
        "(lam (fn_1 $0 _e _rempty))",
        "(lam (fn_1 $0 _f _rempty))",
        "(lam (_rflatten (cons _t (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _o (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_8 (cdr (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _b (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_7 $0 (lam (_rconcat _y _t))))",
        "(lam (fn_7 $0 (lam (_rconcat _y _t))))",
        "(lam (fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat _y _t))))",
        "(lam (fn_7 (fn_7 $0 (lam _y)) (lam (_rconcat $0 _t))))",
        "(lam (fn_7 (fn_7 $0 (lam _j)) (lam (_rconcat _y _t))))",
        "(lam (fn_7 $0 (lam (_rconcat _t _i))))",
        "(lam (fn_7 $0 (lam (_rconcat _o _i))))",
        "(lam (fn_7 $0 (lam (_rconcat _q _i))))",
        "(lam (fn_5 $0 _i))",
        "(lam (fn_7 $0 (lam (_rconcat _b _i))))",
        "(lam (_rflatten (map (lam (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _t _m))",
        "(lam (fn_0 $0 _o _m))",
        "(lam (fn_0 $0 _q _m))",
        "(lam (fn_0 $0 _a _m))",
        "(lam (fn_0 $0 _b _m))",
        "(lam (_rflatten (_rappend _y (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _y))",
        "(lam (fn_3 _c _c $0))",
        "(lam (fn_0 $0 (_rconcat _c _c) _c))",
        "(lam (fn_0 $0 (_rconcat _d _c) _c))",
        "(lam (fn_0 $0 (_rconcat _e _c) _c))",
        "(lam (fn_0 $0 (_rconcat _f _c) _c))",
        "(lam (fn_5 $0 _e))",
        "(lam (fn_7 $0 (lam (_rconcat _b _e))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _e))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_0 $0 _q _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 (_rconcat _t _x) _s))",
        "(lam (fn_0 $0 (_rconcat _o _x) _s))",
        "(lam (fn_0 $0 (_rconcat _q _x) _s))",
        "(lam (fn_0 $0 (_rconcat _a _x) _s))",
        "(lam (fn_3 _s _x $0))",
        "(lam (fn_0 $0 (_rconcat _i _m) _e))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _i _m) _e))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _i _m) _e))))",
        "(lam (_rflatten (cons _y (fn_2 $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (_rsplit _d $0))))",
        "(lam (_rflatten (cons _y (_rsplit _u $0))))",
        "(lam (_rflatten (cons _y (_rsplit _h $0))))",
        "(lam (fn_6 _k $0))",
        "(lam (fn_1 $0 _c _k))",
        "(lam (fn_1 $0 _d _k))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (fn_1 $0 _f _k))",
        "(lam (fn_1 $0 _h _rempty))",
        "(lam (fn_1 $0 _rempty _h))",
        "(lam (_rflatten (cons _h (cdr (fn_2 $0)))))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _h _rempty))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _rempty _h))",
        "(lam (fn_6 _x $0))",
        "(lam (fn_1 $0 _c _x))",
        "(lam (fn_1 $0 _d _x))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (fn_1 $0 _f _x))",
        "(lam (fn_3 _r _l $0))",
        "(lam (fn_0 $0 (_rconcat _c _l) _r))",
        "(lam (fn_0 $0 (_rconcat _d _l) _r))",
        "(lam (fn_0 $0 (_rconcat _e _l) _r))",
        "(lam (fn_0 $0 (_rconcat _f _l) _r))",
        "(lam (fn_3 _r _d $0))",
        "(lam (fn_0 $0 (_rconcat _c _d) _r))",
        "(lam (fn_0 $0 (_rconcat _d _d) _r))",
        "(lam (fn_0 $0 (_rconcat _e _d) _r))",
        "(lam (fn_0 $0 (_rconcat _f _d) _r))",
        "(lam (fn_0 $0 (_rconcat _t _e) _c))",
        "(lam (fn_0 $0 (_rconcat _o _e) _c))",
        "(lam (fn_0 $0 (_rconcat _q _e) _c))",
        "(lam (fn_0 $0 (_rconcat _a _e) _c))",
        "(lam (fn_3 _c _e $0))",
        "(lam (fn_6 _m $0))",
        "(lam (fn_1 $0 _c _m))",
        "(lam (fn_1 $0 _d _m))",
        "(lam (fn_1 $0 _e _m))",
        "(lam (fn_1 $0 _f _m))",
        "(lam (fn_7 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _o $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 _j $0))",
        "(lam (fn_1 $0 _c _j))",
        "(lam (fn_1 $0 _d _j))",
        "(lam (fn_1 $0 _e _j))",
        "(lam (fn_1 $0 _f _j))",
        "(lam (fn_0 $0 (_rconcat _t _q) _s))",
        "(lam (fn_0 $0 (_rconcat _o _q) _s))",
        "(lam (fn_0 $0 (_rconcat _q _q) _s))",
        "(lam (fn_0 $0 (_rconcat _a _q) _s))",
        "(lam (fn_3 _s _q $0))",
        "(lam (fn_5 $0 _i))",
        "(lam (fn_7 $0 (lam (_rconcat _b _i))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _i))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _i))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _i))))",
        "(lam (fn_0 $0 _g _n))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _g _n))",
        "(lam (_rflatten (fn_2 (fn_0 $0 _g _n))))",
        "(lam (fn_0 $0 (_rconcat _g _rempty) _n))",
        "(lam (fn_0 $0 (_rconcat _rempty _g) _n))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _m))",
        "(lam (fn_0 $0 (_rconcat _t _a) _g))",
        "(lam (fn_0 $0 (_rconcat _o _a) _g))",
        "(lam (fn_0 $0 (_rconcat _q _a) _g))",
        "(lam (fn_0 $0 (_rconcat _a _a) _g))",
        "(lam (fn_3 _g _a $0))",
        "(lam (fn_5 $0 _x))",
        "(lam (fn_7 $0 (lam (_rconcat _b _x))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _x))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _x))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _x))))",
        "(lam (fn_6 _r $0))",
        "(lam (fn_1 $0 _c _r))",
        "(lam (fn_1 $0 _d _r))",
        "(lam (fn_1 $0 _e _r))",
        "(lam (fn_1 $0 _f _r))",
        "(lam (fn_0 $0 _t _g))",
        "(lam (fn_0 $0 _o _g))",
        "(lam (fn_0 $0 _q _g))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 _b _g))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_0 $0 _q _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_8 (cdr (fn_2 $0))))",
        "(lam (_rflatten (cons _b (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _c (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _d (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _e (cdr (fn_2 $0)))))",
        "(lam (fn_3 _t _p $0))",
        "(lam (fn_0 $0 (_rconcat _c _p) _t))",
        "(lam (fn_0 $0 (_rconcat _d _p) _t))",
        "(lam (fn_0 $0 (_rconcat _e _p) _t))",
        "(lam (fn_0 $0 (_rconcat _f _p) _t))",
        "(lam (_rflatten (_rappend _g (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _g))",
        "(lam (fn_8 (cons _a (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_8 (cons _b (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_8 (cons _t (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (cdr (fn_2 $0)))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (cdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (fn_9 $0 _t))",
        "(lam (fn_3 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _c _o) _o))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_1 $0 _s _i))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _s _i))",
        "(lam (fn_1 (_rflatten (_rsplit _d $0)) _s _i))",
        "(lam (fn_1 (fn_0 $0 _b _b) _s _i))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (fn_2 $0)))) _s _i))",
        "(lam (fn_1 $0 _l _g))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _l _g))",
        "(lam (fn_1 $0 (_rconcat _l _rempty) _g))",
        "(lam (fn_1 (_rflatten (_rsplit _d $0)) _l _g))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (fn_2 $0)))) _l _g))",
        "(lam (fn_1 $0 _m _rempty))",
        "(lam (fn_1 $0 _rempty _m))",
        "(lam (_rflatten (cons _m (cdr (fn_2 $0)))))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _m _rempty))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _rempty _m))",
        "(lam (fn_0 $0 _t _i))",
        "(lam (fn_0 $0 _o _i))",
        "(lam (fn_0 $0 _q _i))",
        "(lam (fn_0 $0 _a _i))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_7 $0 (lam (_rconcat _j _u))))",
        "(lam (fn_7 $0 (lam (_rconcat _j _u))))",
        "(lam (fn_7 (fn_7 $0 (lam _j)) (lam (_rconcat $0 _u))))",
        "(lam (fn_7 (fn_7 $0 (lam _u)) (lam (_rconcat _j $0))))",
        "(lam (fn_7 (fn_7 $0 (lam _j)) (lam (_rconcat _j _u))))",
        "(lam (fn_0 $0 (_rconcat _d _u) _s))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _d _u) _s))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _d _u) _s))))",
        "(lam (_rflatten (_rsplit _d (fn_0 $0 (_rconcat _d _u) _s))))",
        "(lam (fn_0 $0 (_rconcat _p _t) _s))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _p _t) _s))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _p _t) _s))))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _p) _t) _s))",
        "(lam (fn_0 $0 (_rconcat _p (_rtail (_rappend _t (fn_2 $0)))) _s))",
        "(lam (fn_3 _p _w $0))",
        "(lam (fn_0 $0 (_rconcat _c _w) _p))",
        "(lam (fn_0 $0 (_rconcat _d _w) _p))",
        "(lam (fn_0 $0 (_rconcat _e _w) _p))",
        "(lam (fn_0 $0 (_rconcat _f _w) _p))",
        "(lam (fn_6 _a $0))",
        "(lam (fn_1 $0 _c _a))",
        "(lam (fn_1 $0 _d _a))",
        "(lam (fn_1 $0 _e _a))",
        "(lam (fn_1 $0 _f _a))",
        "(lam (_rflatten (_rappend _j (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _j))",
        "(lam (fn_5 $0 _p))",
        "(lam (fn_5 (_rflatten (fn_2 $0)) _p))",
        "(lam (fn_7 $0 (lam (_rconcat _b _p))))",
        "(lam (fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat _b _p))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _p))))",
        "(lam (fn_7 $0 (lam (_rconcat _t _g))))",
        "(lam (fn_7 $0 (lam (_rconcat _o _g))))",
        "(lam (fn_7 $0 (lam (_rconcat _q _g))))",
        "(lam (fn_5 $0 _g))",
        "(lam (fn_7 $0 (lam (_rconcat _b _g))))",
        "(lam (fn_6 (car (fn_2 $0)) $0))",
        "(lam (fn_1 $0 _c (car (fn_2 $0))))",
        "(lam (fn_1 $0 _d (car (fn_2 $0))))",
        "(lam (fn_1 $0 _e (car (fn_2 $0))))",
        "(lam (fn_1 $0 _f (car (fn_2 $0))))",
        "(lam (fn_1 $0 _t _x))",
        "(lam (fn_1 $0 _o _x))",
        "(lam (fn_1 $0 _q _x))",
        "(lam (fn_1 $0 _a _x))",
        "(lam (fn_6 _x $0))",
        "(lam (fn_6 _q $0))",
        "(lam (fn_1 $0 _c _q))",
        "(lam (fn_1 $0 _d _q))",
        "(lam (fn_1 $0 _e _q))",
        "(lam (fn_1 $0 _f _q))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_4 (_rrevcdr (fn_2 $0)) _rempty))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _o (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_0 $0 _q _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_6 _a $0))",
        "(lam (fn_1 $0 _c _a))",
        "(lam (fn_1 $0 _d _a))",
        "(lam (fn_1 $0 _e _a))",
        "(lam (fn_1 $0 _f _a))",
        "(lam (fn_0 $0 _h _s))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _h _s))",
        "(lam (_rflatten (fn_2 (fn_0 $0 _h _s))))",
        "(lam (fn_0 $0 (_rconcat _h _rempty) _s))",
        "(lam (fn_0 $0 (_rconcat _rempty _h) _s))",
        "(lam (fn_0 $0 (_rconcat _r _q) _r))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _r _q) _r))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _r _q) _r))))",
        "(lam (fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lam (fn_0 $0 _t _u))",
        "(lam (fn_0 $0 _o _u))",
        "(lam (fn_0 $0 _q _u))",
        "(lam (fn_0 $0 _a _u))",
        "(lam (fn_0 $0 _b _u))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _t _e))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _o _e))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _q _e))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _a _e))",
        "(lam (fn_6 _e (_rflatten (cdr (fn_2 $0)))))",
        "(lam (fn_0 $0 (_rconcat _v _a) _r))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _v _a) _r))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _v _a) _r))))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _v _a)) _r))",
        "(lam (fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _v _a) _r))",
        "(lam (fn_0 $0 _t _i))",
        "(lam (fn_0 $0 _o _i))",
        "(lam (fn_0 $0 _q _i))",
        "(lam (fn_0 $0 _a _i))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_7 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _o $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_7 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _s _f))",
        "(lam (_rflatten (cons _f (cons _s (cdr (cdr (fn_2 $0)))))))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (cdr (fn_2 $0))))) _s _f))",
        "(lam (_rflatten (cons _q (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_1 (_rflatten (cdr (fn_2 $0))) _rempty _q))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_1 (_rflatten (cons _t (cdr (cdr (fn_2 $0))))) _rempty _q))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (fn_4 (_rrevcdr (fn_2 $0)) _rempty)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_4 (_rrevcdr (fn_2 $0)) _j))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (fn_3 _c _m $0))",
        "(lam (fn_0 $0 (_rconcat _c _m) _c))",
        "(lam (fn_0 $0 (_rconcat _d _m) _c))",
        "(lam (fn_0 $0 (_rconcat _e _m) _c))",
        "(lam (fn_0 $0 (_rconcat _f _m) _c))",
        "(lam (fn_7 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_7 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat $0 _b))))",
        "(lam (_rflatten (fn_2 (fn_7 $0 (lam (_rconcat $0 _b))))))",
        "(lam (_rflatten (_rsplit _d (fn_7 $0 (lam (_rconcat $0 _b))))))",
        "(lam (fn_5 $0 _r))",
        "(lam (fn_7 $0 (lam (_rconcat _b _r))))",
        "(lam (fn_7 $0 (lam (_rconcat _c _r))))",
        "(lam (fn_7 $0 (lam (_rconcat _d _r))))",
        "(lam (fn_7 $0 (lam (_rconcat _e _r))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (fn_9 $0 _t))",
        "(lam (_rflatten (_rappend _o (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _s))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (fn_2 $0)))))))",
        "(lam (_rflatten (fn_2 (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (fn_2 $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (fn_2 (_rflatten (fn_2 $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lam (fn_9 $0 _t))",
        "(lam (fn_6 _rempty $0))",
        "(lam (fn_1 $0 _c _rempty))",
        "(lam (fn_1 $0 _d _rempty))",
        "(lam (fn_1 $0 _e _rempty))",
        "(lam (fn_1 $0 _f _rempty))",
        "(lam (_rflatten (_rappend _t (fn_2 $0))))",
        "(lam (_rflatten (_rappend _o (fn_2 $0))))",
        "(lam (_rflatten (_rappend _q (fn_2 $0))))",
        "(lam (_rflatten (_rappend _a (fn_2 $0))))",
        "(lam (_rflatten (_rappend _b (fn_2 $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _p))",
        "(lam (fn_0 $0 (_rconcat _t _o) _p))",
        "(lam (fn_0 $0 (_rconcat _o _o) _p))",
        "(lam (fn_0 $0 (_rconcat _q _o) _p))",
        "(lam (fn_0 $0 (_rconcat _a _o) _p))",
        "(lam (fn_3 _p _o $0))",
        "(lam (fn_3 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _c _o) _o))",
        "(lam (fn_0 $0 (_rconcat _d _o) _o))",
        "(lam (fn_0 $0 (_rconcat _e _o) _o))",
        "(lam (fn_0 $0 (_rconcat _f _o) _o))",
        "(lam (fn_8 (_rsplit _a $0)))",
        "(lam (fn_8 (_rsplit _b $0)))",
        "(lam (fn_8 (_rsplit _t $0)))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (fn_0 $0 _t _o))",
        "(lam (fn_0 $0 _o _o))",
        "(lam (fn_0 $0 _q _o))",
        "(lam (fn_0 $0 _a _o))",
        "(lam (fn_0 $0 _b _o))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_0 $0 _q _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_3 _s _r $0))",
        "(lam (fn_0 $0 (_rconcat _c _r) _s))",
        "(lam (fn_0 $0 (_rconcat _d _r) _s))",
        "(lam (fn_0 $0 (_rconcat _e _r) _s))",
        "(lam (fn_0 $0 (_rconcat _f _r) _s))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _o (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _q (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _b (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (fn_8 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _c (fn_2 $0))))",
        "(lam (_rflatten (cons _d (fn_2 $0))))",
        "(lam (_rflatten (cons _e (fn_2 $0))))",
        "(lam (fn_8 (fn_2 $0)))",
        "(lam (fn_8 (_rsplit _rdot $0)))",
        "(lam (fn_8 (_rsplit _d $0)))",
        "(lam (fn_8 (_rsplit _u $0)))",
        "(lam (fn_8 (_rsplit _h $0)))",
        "(lam (fn_7 $0 (lam _l)))",
        "(lam (fn_7 $0 (lam _l)))",
        "(lam (fn_7 (_rflatten (fn_2 $0)) (lam _l)))",
        "(lam (fn_7 $0 (lam (_rconcat _rempty _l))))",
        "(lam (fn_7 $0 (lam (_rconcat _l _rempty))))",
        "(lam (_rflatten (_rappend _v (_rappend _t (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _o (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _q (_rrevcdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _a (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_4 (fn_2 $0) _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _w))",
        "(lambda (_rflatten (_rappend _w (_rsplit _u $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _b) _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _b _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _d $0)) _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _b) _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _n _l))",
        "(lambda (_rflatten (cons _l (cons _n (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))) _n _l))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _e) _e))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _n $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _k)))",
        "(lambda (_rflatten (map (lambda (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _o _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _d (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _j))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (car (map (lambda (_rconcat $1 _v)) (#(lambda (_rsplit _rempty $0)) $1))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rtail (map (lambda (_rconcat $1 _v)) (#(lambda (_rsplit _rempty $0)) $1))))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (car (map (lambda (#(lambda (_rsplit _rempty $0)) $1)) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _u _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _u))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _m (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _t _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _q _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _e))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _e $0))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _q _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _s))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _t _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rtail (_rappend _t (#(lambda (_rsplit _rempty $0)) $0))) _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rtail (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rtail (_rappend _t (_rsplit _d $0))) _x) _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _y $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _d $0)) _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _y _a) _b))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _a) _b))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y (_rconcat _rempty _a)) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _d $0)) (_rconcat _y _a) _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _t _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _q) _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _g $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _g (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _c _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _e) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _v) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _l _k $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _y) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _t _y $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _i))",
        "(lambda (_rflatten (map (lambda (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _p) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _p _p $0))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _n))))",
        "(lambda (_rflatten (_rappend _p (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _h $0))))",
        "(lambda (_rflatten (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _s) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _r _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _t _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _rempty _m))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _d $0)) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _q) _l))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _l _q $0))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _c (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _c _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _q _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _q) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _q _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _e _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _e _u (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _c _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _e))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _b))",
        "(lambda (_rflatten (_rappend _o (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _o))",
        "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _u $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _t (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _q (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) (car (#(lambda (_rsplit _rempty $0)) $0)) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _n _e) _n))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _e) _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rtail (map (lambda _n) (#(lambda (_rsplit _rempty $0)) $0))) _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _e) (_rtail (map (lambda _n) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _i) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _d _i) _d))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _i) _d))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _d) _i) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _d $0)) (_rconcat _d _i) _d))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (_rflatten (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _o (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _y _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _y _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat _y _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _y)) (lambda (_rconcat $0 _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)) (lambda (_rconcat _y _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _q _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _i))))",
        "(lambda (_rflatten (map (lambda (_rconcat _t _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _o _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _m))",
        "(lambda (_rflatten (_rappend _y (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _c _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _c) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _s _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _m) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _i _m) _e))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _m) _e))))",
        "(lambda (_rflatten (cons _y (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _d $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _u $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _k $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _h))",
        "(lambda (_rflatten (cons _h (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _rempty _h))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _x))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _r _l $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _l) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _r _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _e) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _c _e $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _j $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _q) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _s _q $0))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _i))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _g _n))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _g _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _g) _n))",
        "(lambda (_rflatten (_rappend _m (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _a) _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _g _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _x))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _x))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _c (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _d (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _t _p $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _p) _t))",
        "(lambda (_rflatten (_rappend _g (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _g))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _b (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons _b (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _d $0)) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _b) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _l _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _d $0)) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _m _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _m))",
        "(lambda (_rflatten (cons _m (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _m _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _j _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _j _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)) (lambda (_rconcat $0 _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _u)) (lambda (_rconcat _j $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)) (lambda (_rconcat _j _u))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _d _u) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _s))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _u) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _p _t) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _t) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _p) _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p (_rtail (_rappend _t (#(lambda (_rsplit _rempty $0)) $0)))) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _p _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _p))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _a))",
        "(lambda (_rflatten (_rappend _j (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _p))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat _b _p))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _p))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _g))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o _g))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _q _g))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _g))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) (car (#(lambda (_rsplit _rempty $0)) $0)) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _t _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _q _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _x))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _x $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _q))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _rempty))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _h _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _h _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _h _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _h _rempty) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _h) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _r _q) _r))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _r))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _t _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _o _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _q _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _a _e))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _e (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _a) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _v _a) _r))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _a) _r))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _v _a)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _d $0)) (_rconcat _v _a) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _o $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _s _f))",
        "(lambda (_rflatten (cons _f (cons _s (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))) _s _f))",
        "(lambda (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _rempty _q))",
        "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))) _rempty _q))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _rempty)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _c _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _m) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _c _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _d _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _e _r))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _t))",
        "(lambda (_rflatten (_rappend _o (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _s (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _s))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1))))) $0 _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1))) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (_rflatten (_rappend _t (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _o (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _p (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _o) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _p _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _o) _o))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _a $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _b $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _t $0)))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2)))) _s _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _r) _s))",
        "(lambda (_rflatten (if (_rmatch _t (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _o (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _q (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _a (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _b (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _c (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _rdot $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _d $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _u $0)))",
        "(lambda (#(lambda (_rflatten (cons _a $0))) (_rsplit _h $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _rempty _l))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _l _rempty))))",
        "(lambda (_rflatten (_rappend _v (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1)))))) (#(lambda (_rsplit _rempty $0)) $0) _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 37524,
            "final_cost": 107486,
            "compression_ratio": 1.3491059300746144,
            "cumulative_compression_ratio": 1.3491059300746144,
            "num_uses": 259,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _n _e) (_rtail (map (lam _n) (_rsplit _rempty $0)))": "(_rflatten (map (lam (if (_rmatch $0 (_rtail (map (lam _n) (_rsplit _rempty $1)))) (_rconcat _n _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _a _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _b _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _o _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _q _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _t _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y (_rconcat _rempty _a)) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y (_rconcat _rempty _a)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _y _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _y _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _f _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _o _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _q _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _d) _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat (_rconcat _rempty _d) _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _d _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _i) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _d _i) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _c _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _f _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _i _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _i _m) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _i _m) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _a _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _b _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _o _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _t _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _a _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _f _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _o _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _q _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _rempty) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _d $0)) _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _t _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rtail (map (lam _n) (_rsplit _rempty $0))) _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat (_rtail (map (lam _n) (_rsplit _rempty $1))) _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _g _rempty) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _n _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _n _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _n _e) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _n _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _q _rempty) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _q _rempty) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _g) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _q) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _d _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _e _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _f _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _o _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _o _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _q _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _q _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _t _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _t _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _f _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _r _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _v _a)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty (_rconcat _v _a)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _d $0)) (_rconcat _v _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _v _a) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _v _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _p) _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat (_rconcat _rempty _p) _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _e _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _f _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _h _rempty) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _h _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _o _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _o _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p (_rtail (_rappend _t (_rsplit _rempty $0)))) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p (_rtail (_rappend _t (_rsplit _rempty $1)))) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _q _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _q _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _h) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty _h) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _h _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _h _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rtail (_rappend _t (_rrevcdr (_rsplit _rempty $0)))) _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rrevcdr (_rsplit _rempty $1)))) _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rtail (_rappend _t (_rsplit _d $0))) _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rsplit _d $1))) _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rtail (_rappend _t (_rsplit _rempty $0))) _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rtail (_rappend _t (_rsplit _rempty $1))) _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _f _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _o _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _q _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _t _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _f _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _t $0)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 14645,
            "final_cost": 92841,
            "compression_ratio": 1.157742807595782,
            "cumulative_compression_ratio": 1.5619176872287028,
            "num_uses": 149,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _a (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _q (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _q (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _t (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _t (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _a": "(_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _a": "(_rflatten (cons _a (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _a": "(_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _a": "(_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _a": "(_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _b": "(_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _b": "(_rflatten (cons _b (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _b": "(_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _b": "(_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _b": "(_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (_rsplit _rempty $0)))) _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _a _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _a _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _b _e": "(_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _b _e": "(_rflatten (cons _e (cons _b (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _o _e": "(_rflatten (cons _e (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _o _e": "(_rflatten (cons _e (cons _o (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _q _e": "(_rflatten (cons _e (cons _q (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _q _e": "(_rflatten (cons _e (cons _q (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _t _e": "(_rflatten (cons _e (cons _t (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _t _e": "(_rflatten (cons _e (cons _t (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _s _f": "(_rflatten (cons _f (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))) _s _f": "(_rflatten (cons _f (cons _s (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _l _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _c _g": "(_rflatten (cons _g (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _c _g": "(_rflatten (cons _g (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _d _g": "(_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (_rsplit _rempty $0)))) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _rempty _h": "(_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _rempty _h": "(_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _b _i": "(_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _i": "(_rflatten (cons _i (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _i": "(_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _i": "(_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _i": "(_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (_rsplit _rempty $0)))) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (fn_0 $0 _b _b) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (fn_0 $0 _b _b))))))"
                },
                {
                    "fn_1 $0 _b _j": "(_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _j": "(_rflatten (cons _j (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _j": "(_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _j": "(_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _j": "(_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _k": "(_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _k": "(_rflatten (cons _k (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _k": "(_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _k": "(_rflatten (cons _k (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _b _m": "(_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _m": "(_rflatten (cons _m (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _m": "(_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _m": "(_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _m": "(_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _m": "(_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _rempty _m": "(_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _b _n": "(_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _n": "(_rflatten (cons _n (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _n": "(_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _n": "(_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _n": "(_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _q": "(_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _q": "(_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _q": "(_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _q": "(_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _q": "(_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _rempty _q": "(_rflatten (cons _q (cons _rempty (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))) _rempty _q": "(_rflatten (cons _q (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _b _r": "(_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _r": "(_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _r": "(_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _r": "(_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _r": "(_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (_rsplit _d $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _t (cdr (_rsplit _rempty $0)))) _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (fn_0 $0 _b _b) _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty (fn_0 $0 _b _b))))))"
                },
                {
                    "fn_1 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _rempty": "(_rflatten (cons _rempty (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _rempty": "(_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _rempty": "(_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _h _rempty": "(_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _h _rempty": "(_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _m _rempty": "(_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _m _rempty": "(_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _a _x": "(_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _x": "(_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _x": "(_rflatten (cons _x (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _x": "(_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _x": "(_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _x": "(_rflatten (cons _x (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _q _x": "(_rflatten (cons _x (cons _q (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _t _x": "(_rflatten (cons _x (cons _t (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _y": "(_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d _y": "(_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _y": "(_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _f _y": "(_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_2",
            "utility": 6464,
            "final_cost": 86377,
            "compression_ratio": 1.07483473609873,
            "cumulative_compression_ratio": 1.6788033851604014,
            "num_uses": 342,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_2 $1": "(_rsplit _rempty $1)"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _u) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _y) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _d _i) _d)": "(_rsplit _rempty (fn_0 $0 (_rconcat _d _i) _d))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _d _u) _s)": "(_rsplit _rempty (fn_0 $0 (_rconcat _d _u) _s))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _i _m) _e)": "(_rsplit _rempty (fn_0 $0 (_rconcat _i _m) _e))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _n _e) _n)": "(_rsplit _rempty (fn_0 $0 (_rconcat _n _e) _n))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _p _t) _s)": "(_rsplit _rempty (fn_0 $0 (_rconcat _p _t) _s))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _r _q) _r)": "(_rsplit _rempty (fn_0 $0 (_rconcat _r _q) _r))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _v _a) _r)": "(_rsplit _rempty (fn_0 $0 (_rconcat _v _a) _r))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _y _a) _b)": "(_rsplit _rempty (fn_0 $0 (_rconcat _y _a) _b))"
                },
                {
                    "fn_2 (fn_0 $0 _g _n)": "(_rsplit _rempty (fn_0 $0 _g _n))"
                },
                {
                    "fn_2 (fn_0 $0 _h _s)": "(_rsplit _rempty (fn_0 $0 _h _s))"
                },
                {
                    "fn_2 (fn_0 $0 _rempty _m)": "(_rsplit _rempty (fn_0 $0 _rempty _m))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat _b #1) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b $1) $2))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 5656,
            "final_cost": 80721,
            "compression_ratio": 1.0700685075754761,
            "cumulative_compression_ratio": 1.796434632871248,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 _g _a $0": "(fn_0 $0 (_rconcat _b _a) _g)"
                },
                {
                    "fn_3 _b _b $0": "(fn_0 $0 (_rconcat _b _b) _b)"
                },
                {
                    "fn_3 _c _b $0": "(fn_0 $0 (_rconcat _b _b) _c)"
                },
                {
                    "fn_3 _c _c $0": "(fn_0 $0 (_rconcat _b _c) _c)"
                },
                {
                    "fn_3 _r _d $0": "(fn_0 $0 (_rconcat _b _d) _r)"
                },
                {
                    "fn_3 _c _e $0": "(fn_0 $0 (_rconcat _b _e) _c)"
                },
                {
                    "fn_3 _e _e $0": "(fn_0 $0 (_rconcat _b _e) _e)"
                },
                {
                    "fn_3 _l _k $0": "(fn_0 $0 (_rconcat _b _k) _l)"
                },
                {
                    "fn_3 _r _l $0": "(fn_0 $0 (_rconcat _b _l) _r)"
                },
                {
                    "fn_3 _c _m $0": "(fn_0 $0 (_rconcat _b _m) _c)"
                },
                {
                    "fn_3 _o _o $0": "(fn_0 $0 (_rconcat _b _o) _o)"
                },
                {
                    "fn_3 _p _o $0": "(fn_0 $0 (_rconcat _b _o) _p)"
                },
                {
                    "fn_3 _p _p $0": "(fn_0 $0 (_rconcat _b _p) _p)"
                },
                {
                    "fn_3 _t _p $0": "(fn_0 $0 (_rconcat _b _p) _t)"
                },
                {
                    "fn_3 _l _q $0": "(fn_0 $0 (_rconcat _b _q) _l)"
                },
                {
                    "fn_3 _s _q $0": "(fn_0 $0 (_rconcat _b _q) _s)"
                },
                {
                    "fn_3 _t _q $0": "(fn_0 $0 (_rconcat _b _q) _t)"
                },
                {
                    "fn_3 _u _q $0": "(fn_0 $0 (_rconcat _b _q) _u)"
                },
                {
                    "fn_3 _r _r $0": "(fn_0 $0 (_rconcat _b _r) _r)"
                },
                {
                    "fn_3 _s _r $0": "(fn_0 $0 (_rconcat _b _r) _s)"
                },
                {
                    "fn_3 _e _u $0": "(fn_0 $0 (_rconcat _b _u) _e)"
                },
                {
                    "fn_3 _p _w $0": "(fn_0 $0 (_rconcat _b _w) _p)"
                },
                {
                    "fn_3 _t _w $0": "(fn_0 $0 (_rconcat _b _w) _t)"
                },
                {
                    "fn_3 _s _x $0": "(fn_0 $0 (_rconcat _b _x) _s)"
                },
                {
                    "fn_3 _t _y $0": "(fn_0 $0 (_rconcat _b _y) _t)"
                },
                {
                    "fn_3 _e _u (_rflatten (fn_2 $0))": "(fn_0 (_rflatten (fn_2 $0)) (_rconcat _b _u) _e)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _b (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr $1))))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 5656,
            "final_cost": 75065,
            "compression_ratio": 1.075348031705855,
            "cumulative_compression_ratio": 1.9317924465463265,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 (fn_2 $0) _g": "(_rflatten (_rappend _g (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (fn_2 $0)) _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_4 (fn_2 $0) _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (fn_2 $0) _m": "(_rflatten (_rappend _m (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (fn_2 $0) _o": "(_rflatten (_rappend _o (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (fn_2 $0) _p": "(_rflatten (_rappend _p (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (fn_2 $0)) _rempty": "(_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_4 (fn_2 $0) _s": "(_rflatten (_rappend _s (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (fn_2 $0)) _t": "(_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_4 (_rrevcdr (fn_2 $0)) _u": "(_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_4 (fn_2 $0) _v": "(_rflatten (_rappend _v (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_4 (fn_2 $0) _y": "(_rflatten (_rappend _y (_rappend _b (_rrevcdr (fn_2 $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat _a #1)) (fn_2 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map (lambda (_rconcat _a $1)) (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 4050,
            "final_cost": 71015,
            "compression_ratio": 1.0570302048862916,
            "cumulative_compression_ratio": 2.041962965570654,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 #0": "(_rflatten (map (lam (_rconcat _a $0)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _e": "(_rflatten (map (lam (_rconcat _a _e)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _g": "(_rflatten (map (lam (_rconcat _a _g)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (map (lam (_rconcat _a _i)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _j": "(_rflatten (map (lam (_rconcat _a _j)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _n": "(_rflatten (map (lam (_rconcat _a _n)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _p": "(_rflatten (map (lam (_rconcat _a _p)) (fn_2 $0)))"
                },
                {
                    "fn_5 (_rflatten (fn_2 $0)) _p": "(_rflatten (map (lam (_rconcat _a _p)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_5 $0 _r": "(_rflatten (map (lam (_rconcat _a _r)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (map (lam (_rconcat _a _s)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _x": "(_rflatten (map (lam (_rconcat _a _x)) (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #1 _b #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b $1)))",
            "arity": 2,
            "name": "fn_6",
            "utility": 2323,
            "final_cost": 68692,
            "compression_ratio": 1.0338176206836314,
            "cumulative_compression_ratio": 2.1110172945903454,
            "num_uses": 24,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 (car (fn_2 $0)) $0": "(fn_1 $0 _b (car (fn_2 $0)))"
                },
                {
                    "fn_6 _a $0": "(fn_1 $0 _b _a)"
                },
                {
                    "fn_6 _b $0": "(fn_1 $0 _b _b)"
                },
                {
                    "fn_6 _e $0": "(fn_1 $0 _b _e)"
                },
                {
                    "fn_6 _g $0": "(fn_1 $0 _b _g)"
                },
                {
                    "fn_6 _i $0": "(fn_1 $0 _b _i)"
                },
                {
                    "fn_6 _j $0": "(fn_1 $0 _b _j)"
                },
                {
                    "fn_6 _k $0": "(fn_1 $0 _b _k)"
                },
                {
                    "fn_6 _m $0": "(fn_1 $0 _b _m)"
                },
                {
                    "fn_6 _n $0": "(fn_1 $0 _b _n)"
                },
                {
                    "fn_6 _q $0": "(fn_1 $0 _b _q)"
                },
                {
                    "fn_6 _r $0": "(fn_1 $0 _b _r)"
                },
                {
                    "fn_6 _rempty $0": "(fn_1 $0 _b _rempty)"
                },
                {
                    "fn_6 _x $0": "(fn_1 $0 _b _x)"
                },
                {
                    "fn_6 _y $0": "(fn_1 $0 _b _y)"
                },
                {
                    "fn_6 _e (_rflatten (cdr (fn_2 $0)))": "(fn_1 (_rflatten (cdr (fn_2 $0))) _b _e)"
                },
                {
                    "fn_6 _g (_rflatten (fn_2 $0))": "(fn_1 (_rflatten (fn_2 $0)) _b _g)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (fn_2 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 2020,
            "final_cost": 66672,
            "compression_ratio": 1.0302975761939044,
            "cumulative_compression_ratio": 2.1749760019198465,
            "num_uses": 84,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _y) (fn_2 $0))) (lam (_rconcat $0 _t))": "(_rflatten (map (lam (_rconcat $0 _t)) (fn_2 (_rflatten (map (lam _y) (fn_2 $0))))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (fn_2 $0))) (lam (_rconcat $0 _u))": "(_rflatten (map (lam (_rconcat $0 _u)) (fn_2 (_rflatten (map (lam _j) (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _a $0))": "(_rflatten (map (lam (_rconcat _a $0)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b $0))": "(_rflatten (map (lam (_rconcat _b $0)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _e))": "(_rflatten (map (lam (_rconcat _b _e)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _g))": "(_rflatten (map (lam (_rconcat _b _g)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _i))": "(_rflatten (map (lam (_rconcat _b _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _j))": "(_rflatten (map (lam (_rconcat _b _j)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _n))": "(_rflatten (map (lam (_rconcat _b _n)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _p))": "(_rflatten (map (lam (_rconcat _b _p)) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat _b _p))": "(_rflatten (map (lam (_rconcat _b _p)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _r))": "(_rflatten (map (lam (_rconcat _b _r)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _s))": "(_rflatten (map (lam (_rconcat _b _s)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _b _x))": "(_rflatten (map (lam (_rconcat _b _x)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _e))": "(_rflatten (map (lam (_rconcat _c _e)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _i))": "(_rflatten (map (lam (_rconcat _c _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _j))": "(_rflatten (map (lam (_rconcat _c _j)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _n))": "(_rflatten (map (lam (_rconcat _c _n)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _p))": "(_rflatten (map (lam (_rconcat _c _p)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _r))": "(_rflatten (map (lam (_rconcat _c _r)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _s))": "(_rflatten (map (lam (_rconcat _c _s)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _c _x))": "(_rflatten (map (lam (_rconcat _c _x)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _e))": "(_rflatten (map (lam (_rconcat _d _e)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _i))": "(_rflatten (map (lam (_rconcat _d _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _j))": "(_rflatten (map (lam (_rconcat _d _j)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _n))": "(_rflatten (map (lam (_rconcat _d _n)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _r))": "(_rflatten (map (lam (_rconcat _d _r)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _s))": "(_rflatten (map (lam (_rconcat _d _s)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _d _x))": "(_rflatten (map (lam (_rconcat _d _x)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _e))": "(_rflatten (map (lam (_rconcat _e _e)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _i))": "(_rflatten (map (lam (_rconcat _e _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _j))": "(_rflatten (map (lam (_rconcat _e _j)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _n))": "(_rflatten (map (lam (_rconcat _e _n)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _r))": "(_rflatten (map (lam (_rconcat _e _r)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _s))": "(_rflatten (map (lam (_rconcat _e _s)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _e _x))": "(_rflatten (map (lam (_rconcat _e _x)) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (map (lam _u) (fn_2 $0))) (lam (_rconcat _j $0))": "(_rflatten (map (lam (_rconcat _j $0)) (fn_2 (_rflatten (map (lam _u) (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _j _u))": "(_rflatten (map (lam (_rconcat _j _u)) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (fn_2 $0))) (lam (_rconcat _j _u))": "(_rflatten (map (lam (_rconcat _j _u)) (fn_2 (_rflatten (map (lam _j) (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _l _rempty))": "(_rflatten (map (lam (_rconcat _l _rempty)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _o $0))": "(_rflatten (map (lam (_rconcat _o $0)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _o _g))": "(_rflatten (map (lam (_rconcat _o _g)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _o _i))": "(_rflatten (map (lam (_rconcat _o _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _o _rempty))": "(_rflatten (map (lam (_rconcat _o _rempty)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q _g))": "(_rflatten (map (lam (_rconcat _q _g)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q _i))": "(_rflatten (map (lam (_rconcat _q _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q _rempty))": "(_rflatten (map (lam (_rconcat _q _rempty)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _rempty _l))": "(_rflatten (map (lam (_rconcat _rempty _l)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _t $0))": "(_rflatten (map (lam (_rconcat _t $0)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _t _g))": "(_rflatten (map (lam (_rconcat _t _g)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _t _i))": "(_rflatten (map (lam (_rconcat _t _i)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _t _rempty))": "(_rflatten (map (lam (_rconcat _t _rempty)) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (fn_2 $0))) (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (fn_2 (_rflatten (map (lam _j) (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1))))": "(_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1)))) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1)))) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam _j)": "(_rflatten (map (lam _j) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam _k)": "(_rflatten (map (lam _k) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam _l)": "(_rflatten (map (lam _l) (fn_2 $0)))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) (lam _l)": "(_rflatten (map (lam _l) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_7 $0 (lam _p)": "(_rflatten (map (lam _p) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam _u)": "(_rflatten (map (lam _u) (fn_2 $0)))"
                },
                {
                    "fn_7 $0 (lam _y)": "(_rflatten (map (lam _y) (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _a #0))",
            "dreamcoder": "#(lambda (_rflatten (cons _a $0)))",
            "arity": 1,
            "name": "fn_8",
            "utility": 1818,
            "final_cost": 64854,
            "compression_ratio": 1.0280321953927283,
            "cumulative_compression_ratio": 2.2359453541801586,
            "num_uses": 17,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 (_rsplit _a $0)": "(_rflatten (cons _a (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rsplit _b $0)": "(_rflatten (cons _a (_rsplit _b $0)))"
                },
                {
                    "fn_8 (_rsplit _d $0)": "(_rflatten (cons _a (_rsplit _d $0)))"
                },
                {
                    "fn_8 (_rsplit _h $0)": "(_rflatten (cons _a (_rsplit _h $0)))"
                },
                {
                    "fn_8 (_rsplit _rdot $0)": "(_rflatten (cons _a (_rsplit _rdot $0)))"
                },
                {
                    "fn_8 (_rsplit _t $0)": "(_rflatten (cons _a (_rsplit _t $0)))"
                },
                {
                    "fn_8 (_rsplit _u $0)": "(_rflatten (cons _a (_rsplit _u $0)))"
                },
                {
                    "fn_8 (cdr (cdr (fn_2 $0)))": "(_rflatten (cons _a (cdr (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 (cdr (fn_2 $0))": "(_rflatten (cons _a (cdr (fn_2 $0))))"
                },
                {
                    "fn_8 (cons _a (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _a (cons _a (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_8 (cons _b (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _a (cons _b (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_8 (cons _t (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _a (cons _t (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_8 (fn_2 $0)": "(_rflatten (cons _a (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _d #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _d $1)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1818,
            "final_cost": 63036,
            "compression_ratio": 1.0288406624785837,
            "cumulative_compression_ratio": 2.300431499460626,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _f": "(_rflatten (_rappend _f (_rsplit _d $0)))"
                },
                {
                    "fn_9 $0 _p": "(_rflatten (_rappend _p (_rsplit _d $0)))"
                },
                {
                    "fn_9 $0 _t": "(_rflatten (_rappend _t (_rsplit _d $0)))"
                },
                {
                    "fn_9 $0 _w": "(_rflatten (_rappend _w (_rsplit _d $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}