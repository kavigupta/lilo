{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_enum_test_100 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 100 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 112369,
    "final_cost": 50409,
    "compression_ratio": 2.2291455890813148,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _n (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _t _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _a _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _i _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _t _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _a _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _i _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rempty $1)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _a _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _t (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (map (lam _e) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _v) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _k) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _a _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _t (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rrevcdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rrevcdr (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n (_rconcat _i _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _i _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _r _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _s)) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _a _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _t _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _a _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _i _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k (_rconcat _a _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _t _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _t (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _r _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _t (cons _t (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _t (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _t (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _t (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _t _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _a _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _i _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _i _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _r _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _t _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lam (_rflatten (cons _rempty (cons _t (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _a $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _t _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _a _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _i _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _t (_rsplit _t $0))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (_rflatten (cons _t (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _t $0))))",
        "(lam (_rflatten (cons _t (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _b (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _i (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (if (_rmatch _r (car (cdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _t (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _y _d))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _y _d))",
        "(lam (_rflatten (fn_2 (fn_0 $0 _y _d))))",
        "(lam (fn_0 $0 (_rconcat _y _rempty) _d))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 _y _d))))",
        "(lam (fn_0 $0 (_rconcat _k _b) _b))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _k _b) _b))))",
        "(lam (fn_4 _e _e $0))",
        "(lam (fn_0 $0 (_rconcat _b _e) _e))",
        "(lam (fn_0 $0 (_rconcat _c _e) _e))",
        "(lam (fn_0 $0 (_rconcat _d _e) _e))",
        "(lam (fn_0 $0 (_rconcat _e _e) _e))",
        "(lam (fn_8 $0 _t _n))",
        "(lam (fn_8 $0 _b _n))",
        "(lam (fn_1 $0 _n))",
        "(lam (fn_8 $0 _i _n))",
        "(lam (fn_8 $0 _r _n))",
        "(lam (fn_6 $0 (lam _k)))",
        "(lam (_rflatten (map (lam (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _a _u))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _c _u))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _d _u))",
        "(lam (fn_7 _u $0))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _f _u))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _t _j))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _j))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _j))))",
        "(lam (fn_5 $0 _j))",
        "(lam (fn_6 $0 (lam (_rconcat _r _j))))",
        "(lam (fn_0 $0 (_rconcat _t _o) _o))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_4 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _i _o) _o))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (fn_0 $0 (_rconcat _t _o) _o))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_4 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _i _o) _o))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (fn_6 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (fn_6 $0 (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1))))))",
        "(lam (fn_6 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (fn_2 $1)) (fn_2 $0))))))",
        "(lam (fn_4 _u _q $0))",
        "(lam (fn_0 $0 (_rconcat _b _q) _u))",
        "(lam (fn_0 $0 (_rconcat _c _q) _u))",
        "(lam (fn_0 $0 (_rconcat _d _q) _u))",
        "(lam (fn_0 $0 (_rconcat _e _q) _u))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_3 (fn_2 $0) _t _m))",
        "(lam (_rflatten (fn_2 (fn_3 (fn_2 $0) _t _m))))",
        "(lam (fn_3 (_rsplit _rdot $0) _t _m))",
        "(lam (fn_3 (fn_2 $0) _t _m))",
        "(lam (fn_3 (fn_2 $0) _t _m))",
        "(lam (fn_8 $0 _e _e))",
        "(lam (fn_8 (_rflatten (fn_2 $0)) _e _e))",
        "(lam (_rflatten (fn_2 (fn_8 $0 _e _e))))",
        "(lam (fn_8 $0 (_rconcat _e _e) _rempty))",
        "(lam (fn_8 $0 (_rconcat _e _rempty) _e))",
        "(lam (fn_9 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _a (fn_2 $0))))",
        "(lam (_rflatten (cons _i (fn_2 $0))))",
        "(lam (_rflatten (cons _r (fn_2 $0))))",
        "(lam (fn_6 $0 (lam _j)))",
        "(lam (fn_6 $0 (lam _j)))",
        "(lam (_rflatten (fn_2 (fn_6 $0 (lam _j)))))",
        "(lam (fn_6 $0 (lam (_rconcat _j _rempty))))",
        "(lam (fn_6 $0 (lam (_rconcat _rempty _j))))",
        "(lam (fn_6 $0 (lam (_rconcat _t _s))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _s))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _s))))",
        "(lam (fn_5 $0 _s))",
        "(lam (fn_6 $0 (lam (_rconcat _r _s))))",
        "(lam (fn_8 $0 _t _a))",
        "(lam (fn_8 $0 _b _a))",
        "(lam (fn_1 $0 _a))",
        "(lam (fn_8 $0 _t _w))",
        "(lam (fn_8 $0 _i _a))",
        "(lam (fn_0 $0 _t _r))",
        "(lam (fn_0 $0 _b _r))",
        "(lam (fn_0 $0 _a _r))",
        "(lam (fn_0 $0 _i _r))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_8 $0 _t _y))",
        "(lam (fn_8 $0 _b _y))",
        "(lam (fn_1 $0 _y))",
        "(lam (fn_8 $0 _i _y))",
        "(lam (fn_8 $0 _r _y))",
        "(lam (fn_0 $0 (_rconcat _t _q) _t))",
        "(lam (fn_0 $0 (_rconcat _b _q) _t))",
        "(lam (fn_4 _t _q $0))",
        "(lam (fn_0 $0 (_rconcat _i _q) _t))",
        "(lam (fn_0 $0 (_rconcat _r _q) _t))",
        "(lam (fn_8 $0 _t _q))",
        "(lam (fn_8 $0 _b _q))",
        "(lam (fn_1 $0 _q))",
        "(lam (fn_8 $0 _i _q))",
        "(lam (fn_8 $0 _r _q))",
        "(lam (fn_1 $0 _g))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _g))",
        "(lam (_rflatten (fn_2 (fn_1 $0 _g))))",
        "(lam (fn_1 $0 _g))",
        "(lam (fn_8 $0 (_rconcat _a _rempty) _g))",
        "(lam (fn_6 $0 (lam _p)))",
        "(lam (_rflatten (map (lam _p) (map (lam _e) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _v) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam _p) (map (lam _k) (fn_2 $0)))))",
        "(lam (fn_4 _l _k $0))",
        "(lam (fn_0 $0 (_rconcat _b _k) _l))",
        "(lam (fn_0 $0 (_rconcat _c _k) _l))",
        "(lam (fn_0 $0 (_rconcat _d _k) _l))",
        "(lam (fn_0 $0 (_rconcat _e _k) _l))",
        "(lam (fn_0 $0 (_rconcat _t _y) _t))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _t _y) _t))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _t _y) _t))))",
        "(lam (fn_0 $0 (_rconcat _t _y) _t))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _t _y) _t))))",
        "(lam (fn_8 $0 _t _i))",
        "(lam (fn_8 $0 _b _i))",
        "(lam (fn_1 $0 _i))",
        "(lam (fn_8 $0 _i _i))",
        "(lam (fn_8 $0 _r _i))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _a _t))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _c _t))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _d _t))",
        "(lam (fn_7 _t $0))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _f _t))",
        "(lam (fn_0 $0 (_rconcat _p _p) _p))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _p _p) _p))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _p _p) _p))))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _p) _p) _p))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _p _p) _p))))",
        "(lam (fn_9 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _a (fn_2 $0))))",
        "(lam (_rflatten (cons _i (fn_2 $0))))",
        "(lam (_rflatten (cons _r (fn_2 $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _t _n))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _n))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _n))))",
        "(lam (fn_5 $0 _n))",
        "(lam (fn_6 $0 (lam (_rconcat _r _n))))",
        "(lam (_rflatten (if (_rmatch (_rtail (fn_2 $0)) _s) (_rrevcdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (fn_4 _t _w $0))",
        "(lam (fn_0 $0 (_rconcat _b _w) _t))",
        "(lam (fn_0 $0 (_rconcat _c _w) _t))",
        "(lam (fn_0 $0 (_rconcat _d _w) _t))",
        "(lam (fn_0 $0 (_rconcat _e _w) _t))",
        "(lam (fn_0 $0 (_rconcat _v _q) _l))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _v _q) _l))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _v _q) _l))))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _v _q) _l))))",
        "(lam (_rflatten (_rsplit _q (fn_0 $0 (_rconcat _v _q) _l))))",
        "(lam (fn_9 (cdr (fn_2 $0))))",
        "(lam (_rflatten (cons _b (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _a (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _i (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _r (cdr (fn_2 $0)))))",
        "(lam (fn_4 _c _b $0))",
        "(lam (fn_0 $0 (_rconcat _b _b) _c))",
        "(lam (fn_0 $0 (_rconcat _c _b) _c))",
        "(lam (fn_0 $0 (_rconcat _d _b) _c))",
        "(lam (fn_0 $0 (_rconcat _e _b) _c))",
        "(lam (fn_4 _e _u $0))",
        "(lam (fn_4 _e _u (_rflatten (fn_2 $0))))",
        "(lam (fn_0 $0 (_rconcat _b _u) _e))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _b _u) _e))",
        "(lam (fn_0 $0 (_rconcat _c _u) _e))",
        "(lam (fn_8 $0 _t _r))",
        "(lam (fn_8 $0 _b _r))",
        "(lam (fn_1 $0 _r))",
        "(lam (fn_8 $0 _i _r))",
        "(lam (fn_8 $0 _r _r))",
        "(lam (fn_8 $0 _t _b))",
        "(lam (fn_8 $0 _b _b))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_8 $0 _i _b))",
        "(lam (fn_8 $0 _r _b))",
        "(lam (fn_3 (fn_2 $0) _t _o))",
        "(lam (fn_3 (fn_2 $0) _b _o))",
        "(lam (fn_3 (fn_2 $0) _a _o))",
        "(lam (fn_3 (fn_2 $0) _i _o))",
        "(lam (fn_3 (fn_2 $0) _r _o))",
        "(lam (fn_8 $0 _d (car (fn_2 $0))))",
        "(lam (fn_8 $0 _d (car (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_8 $0 _d (car (fn_2 (_rflatten (fn_2 $0))))))",
        "(lam (fn_8 $0 _d (car (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 _d (car (fn_2 $0))))",
        "(lam (fn_8 $0 _t _rempty))",
        "(lam (fn_8 $0 _b _rempty))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (fn_8 $0 _i _rempty))",
        "(lam (fn_8 $0 _r _rempty))",
        "(lam (_rflatten (cons _w (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_8 (_rflatten (cdr (fn_2 $0))) _w _rempty))",
        "(lam (_rflatten (fn_2 (_rflatten (cons _w (cdr (cdr (fn_2 $0))))))))",
        "(lam (_rflatten (cons _w (cdr (fn_2 (_rflatten (cdr (fn_2 $0))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (fn_2 (_rflatten (fn_2 $0))))))))",
        "(lam (fn_6 $0 (lam (_rconcat _n _i))))",
        "(lam (fn_6 (_rflatten (fn_2 $0)) (lam (_rconcat _n _i))))",
        "(lam (_rflatten (fn_2 (fn_6 $0 (lam (_rconcat _n _i))))))",
        "(lam (_rflatten (_rsplit _t (fn_6 $0 (lam (_rconcat _n _i))))))",
        "(lam (fn_6 $0 (lam (_rconcat _n (_rconcat _i _rempty)))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _t _m))",
        "(lam (fn_0 $0 _b _m))",
        "(lam (fn_0 $0 _a _m))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_0 $0 _r _m))",
        "(lam (fn_3 (fn_2 $0) _t _y))",
        "(lam (fn_3 (fn_2 $0) _b _y))",
        "(lam (fn_3 (fn_2 $0) _a _y))",
        "(lam (fn_3 (fn_2 $0) _i _y))",
        "(lam (fn_3 (fn_2 $0) _r _y))",
        "(lam (fn_0 $0 (_rconcat _t _c) _c))",
        "(lam (fn_0 $0 (_rconcat _b _c) _c))",
        "(lam (fn_4 _c _c $0))",
        "(lam (fn_0 $0 (_rconcat _i _c) _c))",
        "(lam (fn_0 $0 (_rconcat _r _c) _c))",
        "(lam (fn_6 $0 (lam (_rconcat _t _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_5 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _r _e))))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_0 $0 _r _t))",
        "(lam (fn_0 $0 (_rconcat _s _x) _s))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _s _x) _s))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _s _x) _s))))",
        "(lam (fn_0 $0 (_rconcat _s _x) (_rconcat _rempty _s)))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _s _x) _s))))",
        "(lam (fn_8 $0 _t _k))",
        "(lam (fn_8 $0 _b _k))",
        "(lam (fn_1 $0 _k))",
        "(lam (fn_8 $0 _i _k))",
        "(lam (fn_8 $0 _r _k))",
        "(lam (fn_8 $0 _t _x))",
        "(lam (fn_8 $0 _b _x))",
        "(lam (fn_1 $0 _x))",
        "(lam (fn_8 $0 _i _x))",
        "(lam (fn_8 $0 _r _x))",
        "(lam (fn_4 _r _l $0))",
        "(lam (fn_0 $0 (_rconcat _b _l) _r))",
        "(lam (fn_0 $0 (_rconcat _c _l) _r))",
        "(lam (fn_0 $0 (_rconcat _d _l) _r))",
        "(lam (fn_0 $0 (_rconcat _e _l) _r))",
        "(lam (fn_0 $0 (_rconcat _t _d) _r))",
        "(lam (fn_0 $0 (_rconcat _b _d) _r))",
        "(lam (fn_4 _r _d $0))",
        "(lam (fn_0 $0 (_rconcat _i _d) _r))",
        "(lam (fn_0 $0 (_rconcat _r _d) _r))",
        "(lam (fn_0 $0 (_rconcat _c _e) _c))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _c _e) _c))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _c _e) _c))))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _c _e) _c))))",
        "(lam (_rflatten (_rsplit _q (fn_0 $0 (_rconcat _c _e) _c))))",
        "(lam (fn_8 $0 _t _m))",
        "(lam (fn_8 $0 _b _m))",
        "(lam (fn_1 $0 _m))",
        "(lam (fn_8 $0 _i _m))",
        "(lam (fn_8 $0 _r _m))",
        "(lam (fn_6 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _i $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _r $0))))",
        "(lam (fn_8 $0 _t _j))",
        "(lam (fn_8 $0 _b _j))",
        "(lam (fn_1 $0 _j))",
        "(lam (fn_8 $0 _i _j))",
        "(lam (fn_8 $0 _r _j))",
        "(lam (fn_0 $0 (_rconcat _t _q) _s))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _t _q) _s))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _t _q) _s))))",
        "(lam (fn_0 $0 (_rconcat _t _q) _s))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _t _q) _s))))",
        "(lam (fn_6 $0 (lam (_rconcat _t _i))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _i))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _i))))",
        "(lam (fn_5 $0 _i))",
        "(lam (fn_6 $0 (lam (_rconcat _r _i))))",
        "(lam (fn_3 (fn_2 $0) _t _m))",
        "(lam (fn_3 (fn_2 $0) _b _m))",
        "(lam (fn_3 (fn_2 $0) _a _m))",
        "(lam (fn_3 (fn_2 $0) _i _m))",
        "(lam (fn_3 (fn_2 $0) _r _m))",
        "(lam (fn_0 $0 (_rconcat _k _a) _g))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _k _a) _g))))",
        "(lam (fn_0 $0 (_rconcat _k (_rconcat _a _rempty)) _g))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _k _a) _g))))",
        "(lam (fn_6 $0 (lam (_rconcat _t _x))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _x))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _x))))",
        "(lam (fn_5 $0 _x))",
        "(lam (fn_6 $0 (lam (_rconcat _r _x))))",
        "(lam (fn_8 $0 _t _r))",
        "(lam (fn_8 $0 _b _r))",
        "(lam (fn_1 $0 _r))",
        "(lam (fn_8 $0 _i _r))",
        "(lam (fn_8 $0 _r _r))",
        "(lam (fn_0 $0 _t _g))",
        "(lam (fn_0 $0 _b _g))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 _i _g))",
        "(lam (fn_0 $0 _r _g))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_0 $0 _r _t))",
        "(lam (fn_9 (cdr (fn_2 $0))))",
        "(lam (_rflatten (cons _b (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _a (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _i (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _r (cdr (fn_2 $0)))))",
        "(lam (fn_0 $0 (_rconcat _t _p) _t))",
        "(lam (fn_0 $0 (_rconcat _b _p) _t))",
        "(lam (fn_4 _t _p $0))",
        "(lam (fn_0 $0 (_rconcat _i _p) _t))",
        "(lam (fn_0 $0 (_rconcat _r _p) _t))",
        "(lam (fn_3 (fn_2 $0) _o _g))",
        "(lam (_rflatten (fn_2 (fn_3 (fn_2 $0) _o _g))))",
        "(lam (fn_3 (_rsplit _rdot $0) _o _g))",
        "(lam (fn_3 (fn_2 $0) _o _g))",
        "(lam (fn_3 (fn_2 $0) _o _g))",
        "(lam (fn_9 (cons _t (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _b (cons _t (cdr (cdr (fn_2 $0)))))))",
        "(lam (fn_9 (cons _b (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _a (cons _t (cdr (cdr (fn_2 $0)))))))",
        "(lam (fn_9 (cons _a (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (fn_0 $0 (_rconcat _t _o) _o))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_4 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _i _o) _o))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (fn_0 $0 _t _i))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_0 $0 _a _i))",
        "(lam (fn_0 $0 _i _i))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_4 _p _w $0))",
        "(lam (fn_0 $0 (_rconcat _b _w) _p))",
        "(lam (fn_0 $0 (_rconcat _c _w) _p))",
        "(lam (fn_0 $0 (_rconcat _d _w) _p))",
        "(lam (fn_0 $0 (_rconcat _e _w) _p))",
        "(lam (fn_8 $0 _t _a))",
        "(lam (fn_8 $0 _b _a))",
        "(lam (fn_1 $0 _a))",
        "(lam (fn_8 $0 _i _a))",
        "(lam (fn_8 $0 _r _a))",
        "(lam (fn_3 (fn_2 $0) _r _j))",
        "(lam (_rflatten (fn_2 (fn_3 (fn_2 $0) _r _j))))",
        "(lam (fn_3 (fn_2 $0) _r _j))",
        "(lam (fn_3 (fn_2 $0) _r _j))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_5 $0 _p))",
        "(lam (fn_5 (_rflatten (fn_2 $0)) _p))",
        "(lam (_rflatten (fn_2 (fn_5 $0 _p))))",
        "(lam (fn_6 (fn_6 $0 (lam _p)) (lam (_rconcat _i $0))))",
        "(lam (_rflatten (_rsplit _t (fn_5 $0 _p))))",
        "(lam (fn_6 $0 (lam (_rconcat _n _g))))",
        "(lam (fn_6 (_rflatten (fn_2 $0)) (lam (_rconcat _n _g))))",
        "(lam (_rflatten (fn_2 (fn_6 $0 (lam (_rconcat _n _g))))))",
        "(lam (_rflatten (_rsplit _t (fn_6 $0 (lam (_rconcat _n _g))))))",
        "(lam (fn_6 (fn_6 $0 (lam _p)) (lam (_rconcat _n _g))))",
        "(lam (fn_8 $0 _t (car (fn_2 $0))))",
        "(lam (fn_8 $0 _b (car (fn_2 $0))))",
        "(lam (fn_1 $0 (car (fn_2 $0))))",
        "(lam (fn_8 $0 _i (car (fn_2 $0))))",
        "(lam (fn_8 $0 _r (car (fn_2 $0))))",
        "(lam (fn_8 $0 _i _x))",
        "(lam (fn_8 (_rflatten (fn_2 $0)) _i _x))",
        "(lam (_rflatten (fn_2 (fn_8 $0 _i _x))))",
        "(lam (fn_8 $0 (_rconcat _i _rempty) _x))",
        "(lam (fn_8 $0 (_rconcat _x _i) _rempty))",
        "(lam (fn_8 $0 _t _q))",
        "(lam (fn_8 $0 _b _q))",
        "(lam (fn_1 $0 _q))",
        "(lam (fn_8 $0 _i _q))",
        "(lam (fn_8 $0 _r _q))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _a _rempty))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _c _rempty))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _d _rempty))",
        "(lam (fn_7 _rempty $0))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _f _rempty))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_0 $0 _r _t))",
        "(lam (fn_8 $0 _t _a))",
        "(lam (fn_8 $0 _b _a))",
        "(lam (fn_1 $0 _a))",
        "(lam (fn_8 $0 _t _e))",
        "(lam (fn_8 $0 _i _a))",
        "(lam (fn_0 $0 _b _u))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _b _u))",
        "(lam (_rflatten (fn_2 (fn_0 $0 _b _u))))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 _b _u))))",
        "(lam (_rflatten (_rsplit _q (fn_0 $0 _b _u))))",
        "(lam (fn_8 (_rflatten (cdr (fn_2 $0))) _s _e))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_8 (fn_8 $0 _rempty _rempty) _s _e))",
        "(lam (fn_8 (_rflatten (cons _rempty (cdr (fn_2 $0)))) _s _e))",
        "(lam (fn_8 (_rflatten (cons _b (cdr (cdr (fn_2 $0))))) _s _e))",
        "(lam (fn_0 $0 _t _i))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_0 $0 _a _i))",
        "(lam (fn_0 $0 _i _i))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_6 $0 (lam (_rconcat _t $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _i $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _r $0))))",
        "(lam (fn_3 (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _a _rempty)) _r _q))",
        "(lam (fn_3 (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _c _rempty)) _r _q))",
        "(lam (fn_3 (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _d _rempty)) _r _q))",
        "(lam (fn_3 (fn_2 (fn_7 _rempty $0)) _r _q))",
        "(lam (fn_3 (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _f _rempty)) _r _q))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _a _j))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _c _j))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _d _j))",
        "(lam (fn_7 _j $0))",
        "(lam (fn_3 (_rrevcdr (fn_2 $0)) _f _j))",
        "(lam (fn_0 $0 (_rconcat _t _m) _c))",
        "(lam (fn_0 $0 (_rconcat _b _m) _c))",
        "(lam (fn_4 _c _m $0))",
        "(lam (fn_0 $0 (_rconcat _i _m) _c))",
        "(lam (fn_0 $0 (_rconcat _r _m) _c))",
        "(lam (fn_6 $0 (lam (_rconcat _t _r))))",
        "(lam (fn_6 $0 (lam (_rconcat _b _r))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _r))))",
        "(lam (fn_5 $0 _r))",
        "(lam (fn_6 $0 (lam (_rconcat _r _r))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (fn_3 (fn_2 $0) _t _s))",
        "(lam (fn_3 (fn_2 $0) _b _s))",
        "(lam (fn_3 (fn_2 $0) _a _s))",
        "(lam (fn_3 (fn_2 $0) _i _s))",
        "(lam (fn_3 (fn_2 $0) _r _s))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lam (fn_8 $0 _t _rempty))",
        "(lam (fn_8 $0 _b _rempty))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (fn_8 $0 _i _rempty))",
        "(lam (fn_8 $0 _r _rempty))",
        "(lam (_rflatten (_rappend _u (fn_2 $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a (_rflatten (fn_2 $0))))))",
        "(lam (_rflatten (fn_2 (_rflatten (_rappend _u (_rsplit _a $0))))))",
        "(lam (fn_3 (fn_2 $0) _x _p))",
        "(lam (_rflatten (fn_2 (fn_3 (fn_2 $0) _x _p))))",
        "(lam (fn_3 (_rsplit _rdot $0) _x _p))",
        "(lam (fn_3 (fn_2 $0) _x _p))",
        "(lam (fn_3 (fn_2 $0) _x _p))",
        "(lam (fn_0 $0 (_rconcat _p _o) _p))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) (_rconcat _p _o) _p))",
        "(lam (_rflatten (fn_2 (fn_0 $0 (_rconcat _p _o) _p))))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _p _o) _p))))",
        "(lam (_rflatten (_rsplit _q (fn_0 $0 (_rconcat _p _o) _p))))",
        "(lam (fn_0 $0 (_rconcat _t _o) _o))",
        "(lam (fn_0 $0 (_rconcat _b _o) _o))",
        "(lam (fn_4 _o _o $0))",
        "(lam (fn_0 $0 (_rconcat _i _o) _o))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (fn_9 (_rsplit _t $0)))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (fn_9 (_rsplit _b $0)))",
        "(lam (_rflatten (cons _a (_rsplit _t $0))))",
        "(lam (fn_9 (_rsplit _a $0)))",
        "(lam (fn_0 $0 _t _o))",
        "(lam (fn_0 $0 _b _o))",
        "(lam (fn_0 $0 _a _o))",
        "(lam (fn_0 $0 _i _o))",
        "(lam (fn_0 $0 _r _o))",
        "(lam (fn_0 $0 _t _t))",
        "(lam (fn_0 $0 _b _t))",
        "(lam (fn_0 $0 _a _t))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_0 $0 _r _t))",
        "(lam (fn_4 _s _r $0))",
        "(lam (fn_0 $0 (_rconcat _b _r) _s))",
        "(lam (fn_0 $0 (_rconcat _c _r) _s))",
        "(lam (fn_0 $0 (_rconcat _d _r) _s))",
        "(lam (fn_0 $0 (_rconcat _e _r) _s))",
        "(lam (_rflatten (if (_rmatch _t (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _b (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _a (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _i (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (_rflatten (if (_rmatch _r (car (cdr (fn_2 $0)))) (cdr (fn_2 $0)) (fn_2 $0))))",
        "(lam (fn_9 (fn_2 $0)))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _a (fn_2 $0))))",
        "(lam (_rflatten (cons _i (fn_2 $0))))",
        "(lam (_rflatten (cons _r (fn_2 $0))))",
        "(lam (fn_3 (fn_2 $0) _c _v))",
        "(lam (_rflatten (fn_2 (fn_3 (fn_2 $0) _c _v))))",
        "(lam (fn_3 (_rsplit _rdot $0) _c _v))",
        "(lam (fn_3 (fn_2 $0) _c _v))",
        "(lam (fn_3 (fn_2 $0) _c _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _y _d))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _rempty) _d))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _b))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _b))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _k)))",
        "(lambda (_rflatten (map (lambda (_rconcat _t _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _b _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _i _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _a _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _c _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _d _u))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1))) _u $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _f _u))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (car (map (lambda (_rconcat $1 _v)) (#(lambda (_rsplit _rempty $0)) $1))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rtail (map (lambda (_rconcat $1 _v)) (#(lambda (_rsplit _rempty $0)) $1))))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (car (map (lambda (#(lambda (_rsplit _rempty $0)) $1)) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _u _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _q) _u))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _m))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _e _e))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _e _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 (_rconcat _e _e) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 (_rconcat _e _rempty) _e))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _i (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _r (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _j)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _j _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _rempty _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _q) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _t _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _g))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _g))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 (_rconcat _a _rempty) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _e) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _v) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda _p) (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _l _k $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _t _y) _t))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _i))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _c _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _d _t))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1))) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _f _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _p) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _p _p) _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _p) _p))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _p) _p) _p))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _p) _p))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _i (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _r (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _n))))",
        "(lambda (_rflatten (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _s) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _t _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _v _q) _l))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _c _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _b) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _e _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _e _u (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _b _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _b _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _d (car (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _d (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _rempty))",
        "(lambda (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _w _rempty))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (cons _w (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat _n _i))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _i))))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _i))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n (_rconcat _i _rempty)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _a _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _b _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _c _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _d _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _e _t)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _b _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _a _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _c) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _c _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _c) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _s _x) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) (_rconcat _rempty _s)))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _x))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _r _l $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _d) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _r _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _c _e) _c))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _i $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _t _q) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _i))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _b _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _a _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k (_rconcat _a _rempty)) _g))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _x))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _x))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _t))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (cdr (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _p) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _t _p $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _g))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _g))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _b (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _a (cons _t (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _p _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _j))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _j))",
        "(lambda (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _p))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)) (lambda (_rconcat _i $0))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _p))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _g))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (lambda (_rconcat _n _g))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _g))))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _n _g))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda _p)) (lambda (_rconcat _n _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _x))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _x))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 (_rconcat _i _rempty) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 (_rconcat _x _i) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _c _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _d _rempty))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1))) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _f _rempty))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _b _u))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _s _e))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _rempty _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (cons _rempty (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) (_rflatten (cons _b (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _i $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _a _rempty)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _c _rempty)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _d _rempty)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1))) _rempty $0)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _f _rempty)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _a _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _c _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _d _j))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1))) _j $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _f _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _m) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _c _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _m) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _m) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _t _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _b _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _a _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 (lambda (_rconcat _r _r))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _t _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _a _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _r _s))",
        "(lambda (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _t _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2)))))))) $0 _r _rempty))",
        "(lambda (_rflatten (_rappend _u (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _u (_rsplit _a $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _p))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _p _o) _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _o _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _o) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (_rsplit _t $0)))",
        "(lambda (_rflatten (cons _b (_rsplit _t $0))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (_rsplit _b $0)))",
        "(lambda (_rflatten (cons _a (_rsplit _t $0))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (_rsplit _a $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _t _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _a _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _r _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2)))) _s _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _r) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _r) _s))",
        "(lambda (_rflatten (if (_rmatch _t (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _b (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _a (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _i (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (if (_rmatch _r (car (cdr (#(lambda (_rsplit _rempty $0)) $0)))) (cdr (#(lambda (_rsplit _rempty $0)) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (_rflatten (cons _t $0))) (#(lambda (_rsplit _rempty $0)) $0)))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _i (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _r (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _c _v))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _c _v))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _c _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 27612,
            "final_cost": 84757,
            "compression_ratio": 1.3257784017839234,
            "cumulative_compression_ratio": 1.3257784017839234,
            "num_uses": 191,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _s _x) (_rconcat _rempty _s)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _s)) (_rconcat _s _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _a _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _b _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _e _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _i _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _i _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _r _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _r _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _t _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y _rempty) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _a _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _a _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _b _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _b _u) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _c _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _d _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k (_rconcat _a _rempty)) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k (_rconcat _a _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _a _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _b _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _c _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _d _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _e _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _a _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _b _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _i _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _t _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _p) _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _a _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _a _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _c _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _d _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _i _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _t _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _a _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _a _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _c _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _d _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _r) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _e _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _b _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _c _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _r _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _r _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _r _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _t _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _t $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _a _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _c _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _q) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _e _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cons _a (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 11514,
            "final_cost": 73243,
            "compression_ratio": 1.1572027360976476,
            "cumulative_compression_ratio": 1.5341943940035225,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a": "(_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b": "(_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _i": "(_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _j": "(_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _k": "(_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _m": "(_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r": "(_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _x": "(_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _y": "(_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_2",
            "utility": 5454,
            "final_cost": 67789,
            "compression_ratio": 1.0804555311333697,
            "cumulative_compression_ratio": 1.6576288188349142,
            "num_uses": 372,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_2 $1": "(_rsplit _rempty $1)"
                },
                {
                    "fn_2 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rsplit _a $0)))": "(_rsplit _rempty (_rflatten (_rappend _u (_rsplit _a $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (cdr (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (cons _b (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))": "(_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _p) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _c _e) _c)": "(_rsplit _rempty (fn_0 $0 (_rconcat _c _e) _c))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _k _a) _g)": "(_rsplit _rempty (fn_0 $0 (_rconcat _k _a) _g))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _k _b) _b)": "(_rsplit _rempty (fn_0 $0 (_rconcat _k _b) _b))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _p _o) _p)": "(_rsplit _rempty (fn_0 $0 (_rconcat _p _o) _p))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _p _p) _p)": "(_rsplit _rempty (fn_0 $0 (_rconcat _p _p) _p))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _s _x) _s)": "(_rsplit _rempty (fn_0 $0 (_rconcat _s _x) _s))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _t _q) _s)": "(_rsplit _rempty (fn_0 $0 (_rconcat _t _q) _s))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _t _y) _t)": "(_rsplit _rempty (fn_0 $0 (_rconcat _t _y) _t))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _v _q) _l)": "(_rsplit _rempty (fn_0 $0 (_rconcat _v _q) _l))"
                },
                {
                    "fn_2 (fn_0 $0 _b _u)": "(_rsplit _rempty (fn_0 $0 _b _u))"
                },
                {
                    "fn_2 (fn_0 $0 _y _d)": "(_rsplit _rempty (fn_0 $0 _y _d))"
                },
                {
                    "fn_2 (fn_1 $0 _g)": "(_rsplit _rempty (fn_1 $0 _g))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2)))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 4545,
            "final_cost": 63244,
            "compression_ratio": 1.071864524697995,
            "cumulative_compression_ratio": 1.7767535260261842,
            "num_uses": 74,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 (_rsplit _rdot $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _a _j": "(_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _c _j": "(_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _d _j": "(_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _e _j": "(_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _f _j": "(_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _a _m": "(_rflatten (_rappend _m (_rappend _a (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _b _m": "(_rflatten (_rappend _m (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _i _m": "(_rflatten (_rappend _m (_rappend _i (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _m": "(_rflatten (_rappend _m (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _b _o": "(_rflatten (_rappend _o (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _i _o": "(_rflatten (_rappend _o (_rappend _i (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _o": "(_rflatten (_rappend _o (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _t _o": "(_rflatten (_rappend _o (_rappend _t (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0)))))))))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0)))))))))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0)))))))))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0)))))))))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (fn_2 (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0)))))))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _a _rempty": "(_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _c _rempty": "(_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _d _rempty": "(_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _e _rempty": "(_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _f _rempty": "(_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 $0) _a _s": "(_rflatten (_rappend _s (_rappend _a (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _b _s": "(_rflatten (_rappend _s (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _i _s": "(_rflatten (_rappend _s (_rappend _i (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _s": "(_rflatten (_rappend _s (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _t _s": "(_rflatten (_rappend _s (_rappend _t (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _a _t": "(_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _c _t": "(_rflatten (_rappend _t (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _e _t": "(_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _f _t": "(_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _a _u": "(_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _c _u": "(_rflatten (_rappend _u (_rappend _c (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _d _u": "(_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _e _u": "(_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _f _u": "(_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _a _y": "(_rflatten (_rappend _y (_rappend _a (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _b _y": "(_rflatten (_rappend _y (_rappend _b (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _y": "(_rflatten (_rappend _y (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _t _y": "(_rflatten (_rappend _y (_rappend _t (_rrevcdr (fn_2 $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat _a #1) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a $1) $2))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 3636,
            "final_cost": 59608,
            "compression_ratio": 1.0609985236880957,
            "cumulative_compression_ratio": 1.8851328680714,
            "num_uses": 19,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 _c _b $0": "(fn_0 $0 (_rconcat _a _b) _c)"
                },
                {
                    "fn_4 _c _c $0": "(fn_0 $0 (_rconcat _a _c) _c)"
                },
                {
                    "fn_4 _r _d $0": "(fn_0 $0 (_rconcat _a _d) _r)"
                },
                {
                    "fn_4 _e _e $0": "(fn_0 $0 (_rconcat _a _e) _e)"
                },
                {
                    "fn_4 _l _k $0": "(fn_0 $0 (_rconcat _a _k) _l)"
                },
                {
                    "fn_4 _r _l $0": "(fn_0 $0 (_rconcat _a _l) _r)"
                },
                {
                    "fn_4 _c _m $0": "(fn_0 $0 (_rconcat _a _m) _c)"
                },
                {
                    "fn_4 _o _o $0": "(fn_0 $0 (_rconcat _a _o) _o)"
                },
                {
                    "fn_4 _t _p $0": "(fn_0 $0 (_rconcat _a _p) _t)"
                },
                {
                    "fn_4 _t _q $0": "(fn_0 $0 (_rconcat _a _q) _t)"
                },
                {
                    "fn_4 _u _q $0": "(fn_0 $0 (_rconcat _a _q) _u)"
                },
                {
                    "fn_4 _s _r $0": "(fn_0 $0 (_rconcat _a _r) _s)"
                },
                {
                    "fn_4 _e _u $0": "(fn_0 $0 (_rconcat _a _u) _e)"
                },
                {
                    "fn_4 _p _w $0": "(fn_0 $0 (_rconcat _a _w) _p)"
                },
                {
                    "fn_4 _t _w $0": "(fn_0 $0 (_rconcat _a _w) _t)"
                },
                {
                    "fn_4 _e _u (_rflatten (fn_2 $0))": "(fn_0 (_rflatten (fn_2 $0)) (_rconcat _a _u) _e)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat _i #1)) (fn_2 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map (lambda (_rconcat _i $1)) (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 3240,
            "final_cost": 56368,
            "compression_ratio": 1.0574794209480556,
            "cumulative_compression_ratio": 1.9934892137382911,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 #0": "(_rflatten (map (lam (_rconcat _i $0)) (fn_2 $0)))"
                },
                {
                    "fn_5 (_rflatten (map (lam _p) (fn_2 $0))) #0": "(_rflatten (map (lam (_rconcat _i $0)) (fn_2 (_rflatten (map (lam _p) (fn_2 $0))))))"
                },
                {
                    "fn_5 $0 _e": "(_rflatten (map (lam (_rconcat _i _e)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (map (lam (_rconcat _i _i)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _j": "(_rflatten (map (lam (_rconcat _i _j)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _n": "(_rflatten (map (lam (_rconcat _i _n)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _p": "(_rflatten (map (lam (_rconcat _i _p)) (fn_2 $0)))"
                },
                {
                    "fn_5 (_rflatten (fn_2 $0)) _p": "(_rflatten (map (lam (_rconcat _i _p)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_5 $0 _r": "(_rflatten (map (lam (_rconcat _i _r)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (map (lam (_rconcat _i _s)) (fn_2 $0)))"
                },
                {
                    "fn_5 $0 _x": "(_rflatten (map (lam (_rconcat _i _x)) (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (fn_2 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1616,
            "final_cost": 54752,
            "compression_ratio": 1.0295149035651665,
            "cumulative_compression_ratio": 2.0523268556399765,
            "num_uses": 61,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a $0))": "(_rflatten (map (lam (_rconcat _a $0)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _e))": "(_rflatten (map (lam (_rconcat _a _e)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _i))": "(_rflatten (map (lam (_rconcat _a _i)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _j))": "(_rflatten (map (lam (_rconcat _a _j)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _n))": "(_rflatten (map (lam (_rconcat _a _n)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _r))": "(_rflatten (map (lam (_rconcat _a _r)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _s))": "(_rflatten (map (lam (_rconcat _a _s)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _x))": "(_rflatten (map (lam (_rconcat _a _x)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b $0))": "(_rflatten (map (lam (_rconcat _b $0)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _e))": "(_rflatten (map (lam (_rconcat _b _e)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _i))": "(_rflatten (map (lam (_rconcat _b _i)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _j))": "(_rflatten (map (lam (_rconcat _b _j)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _n))": "(_rflatten (map (lam (_rconcat _b _n)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _r))": "(_rflatten (map (lam (_rconcat _b _r)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _s))": "(_rflatten (map (lam (_rconcat _b _s)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b _x))": "(_rflatten (map (lam (_rconcat _b _x)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _i $0))": "(_rflatten (map (lam (_rconcat _i $0)) (fn_2 $0)))"
                },
                {
                    "fn_6 (_rflatten (map (lam _p) (fn_2 $0))) (lam (_rconcat _i $0))": "(_rflatten (map (lam (_rconcat _i $0)) (fn_2 (_rflatten (map (lam _p) (fn_2 $0))))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _j _rempty))": "(_rflatten (map (lam (_rconcat _j _rempty)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _n (_rconcat _i _rempty)))": "(_rflatten (map (lam (_rconcat _n (_rconcat _i _rempty))) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (fn_2 $0)))"
                },
                {
                    "fn_6 (_rflatten (fn_2 $0)) (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_6 (_rflatten (map (lam _p) (fn_2 $0))) (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (fn_2 (_rflatten (map (lam _p) (fn_2 $0))))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (fn_2 $0)))"
                },
                {
                    "fn_6 (_rflatten (fn_2 $0)) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (fn_2 (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r $0))": "(_rflatten (map (lam (_rconcat _r $0)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _e))": "(_rflatten (map (lam (_rconcat _r _e)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _i))": "(_rflatten (map (lam (_rconcat _r _i)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _j))": "(_rflatten (map (lam (_rconcat _r _j)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _n))": "(_rflatten (map (lam (_rconcat _r _n)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _r))": "(_rflatten (map (lam (_rconcat _r _r)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _s))": "(_rflatten (map (lam (_rconcat _r _s)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r _x))": "(_rflatten (map (lam (_rconcat _r _x)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _rempty _j))": "(_rflatten (map (lam (_rconcat _rempty _j)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t $0))": "(_rflatten (map (lam (_rconcat _t $0)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _e))": "(_rflatten (map (lam (_rconcat _t _e)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _i))": "(_rflatten (map (lam (_rconcat _t _i)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _j))": "(_rflatten (map (lam (_rconcat _t _j)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _n))": "(_rflatten (map (lam (_rconcat _t _n)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _r))": "(_rflatten (map (lam (_rconcat _t _r)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _s))": "(_rflatten (map (lam (_rconcat _t _s)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _t _x))": "(_rflatten (map (lam (_rconcat _t _x)) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1))))": "(_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (fn_2 $1)))) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (fn_2 $1)))) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam _j)": "(_rflatten (map (lam _j) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam _k)": "(_rflatten (map (lam _k) (fn_2 $0)))"
                },
                {
                    "fn_6 $0 (lam _p)": "(_rflatten (map (lam _p) (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_3 (_rrevcdr (fn_2 #1)) _e #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) _e $1)))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1515,
            "final_cost": 53237,
            "compression_ratio": 1.0284576516332626,
            "cumulative_compression_ratio": 2.110731258335368,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 _j $0": "(fn_3 (_rrevcdr (fn_2 $0)) _e _j)"
                },
                {
                    "fn_7 _rempty $0": "(fn_3 (_rrevcdr (fn_2 $0)) _e _rempty)"
                },
                {
                    "fn_7 _t $0": "(fn_3 (_rrevcdr (fn_2 $0)) _e _t)"
                },
                {
                    "fn_7 _u $0": "(fn_3 (_rrevcdr (fn_2 $0)) _e _u)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (fn_2 #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (#(lambda (_rsplit _rempty $0)) $2))))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 1414,
            "final_cost": 51823,
            "compression_ratio": 1.0272851822549833,
            "cumulative_compression_ratio": 2.168322945410339,
            "num_uses": 94,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _d (car (_rrevcdr (fn_2 $0)))": "(_rflatten (cons (car (_rrevcdr (fn_2 $0))) (cons _d (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _d (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b (car (fn_2 $0))": "(_rflatten (cons (car (fn_2 $0)) (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _d (car (fn_2 $0))": "(_rflatten (cons (car (fn_2 $0)) (cons _d (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i (car (fn_2 $0))": "(_rflatten (cons (car (fn_2 $0)) (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r (car (fn_2 $0))": "(_rflatten (cons (car (fn_2 $0)) (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t (car (fn_2 $0))": "(_rflatten (cons (car (fn_2 $0)) (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _d (car (fn_2 (_rflatten (fn_2 $0))))": "(_rflatten (cons (car (fn_2 (_rflatten (fn_2 $0)))) (cons _d (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _a": "(_rflatten (cons _a (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _a": "(_rflatten (cons _a (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _a": "(_rflatten (cons _a (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _a": "(_rflatten (cons _a (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _b": "(_rflatten (cons _b (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _b": "(_rflatten (cons _b (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _b": "(_rflatten (cons _b (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _b": "(_rflatten (cons _b (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 (_rconcat _e _rempty) _e": "(_rflatten (cons _e (cons (_rconcat _e _rempty) (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 (_rflatten (fn_2 $0)) _e _e": "(_rflatten (cons _e (cons _e (cdr (fn_2 (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cdr (fn_2 $0))) _s _e": "(_rflatten (cons _e (cons _s (cdr (fn_2 (_rflatten (cdr (fn_2 $0))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _b (cdr (cdr (fn_2 $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (fn_2 (_rflatten (cons _b (cdr (cdr (fn_2 $0))))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _rempty (cdr (fn_2 $0)))) _s _e": "(_rflatten (cons _e (cons _s (cdr (fn_2 (_rflatten (cons _rempty (cdr (fn_2 $0)))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _rempty (cons _rempty (cdr (fn_2 $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (fn_2 (_rflatten (cons _rempty (cons _rempty (cdr (fn_2 $0))))))))))"
                },
                {
                    "fn_8 $0 _t _e": "(_rflatten (cons _e (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 (_rconcat _a _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _i": "(_rflatten (cons _i (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _i": "(_rflatten (cons _i (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _i": "(_rflatten (cons _i (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _j": "(_rflatten (cons _j (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _j": "(_rflatten (cons _j (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _j": "(_rflatten (cons _j (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _j": "(_rflatten (cons _j (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _k": "(_rflatten (cons _k (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _k": "(_rflatten (cons _k (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _k": "(_rflatten (cons _k (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _k": "(_rflatten (cons _k (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _m": "(_rflatten (cons _m (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _m": "(_rflatten (cons _m (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _m": "(_rflatten (cons _m (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _n": "(_rflatten (cons _n (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _n": "(_rflatten (cons _n (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _n": "(_rflatten (cons _n (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _n": "(_rflatten (cons _n (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _q": "(_rflatten (cons _q (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _q": "(_rflatten (cons _q (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _q": "(_rflatten (cons _q (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _r": "(_rflatten (cons _r (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _r": "(_rflatten (cons _r (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _r": "(_rflatten (cons _r (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 (_rconcat _e _e) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _e _e) (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 (_rconcat _x _i) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _x _i) (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _rempty": "(_rflatten (cons _rempty (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _rempty": "(_rflatten (cons _rempty (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 (_rflatten (cdr (fn_2 $0))) _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (fn_2 (_rflatten (cdr (fn_2 $0))))))))"
                },
                {
                    "fn_8 $0 _t _w": "(_rflatten (cons _w (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 (_rconcat _i _rempty) _x": "(_rflatten (cons _x (cons (_rconcat _i _rempty) (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _x": "(_rflatten (cons _x (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 (_rflatten (fn_2 $0)) _i _x": "(_rflatten (cons _x (cons _i (cdr (fn_2 (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_8 $0 _r _x": "(_rflatten (cons _x (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _x": "(_rflatten (cons _x (cons _t (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _b _y": "(_rflatten (cons _y (cons _b (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _i _y": "(_rflatten (cons _y (cons _i (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _r _y": "(_rflatten (cons _y (cons _r (cdr (fn_2 $0)))))"
                },
                {
                    "fn_8 $0 _t _y": "(_rflatten (cons _y (cons _t (cdr (fn_2 $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _t #0))",
            "dreamcoder": "#(lambda (_rflatten (cons _t $0)))",
            "arity": 1,
            "name": "fn_9",
            "utility": 1414,
            "final_cost": 50409,
            "compression_ratio": 1.0280505465293897,
            "cumulative_compression_ratio": 2.2291455890813148,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 (_rsplit _a $0)": "(_rflatten (cons _t (_rsplit _a $0)))"
                },
                {
                    "fn_9 (_rsplit _b $0)": "(_rflatten (cons _t (_rsplit _b $0)))"
                },
                {
                    "fn_9 (_rsplit _t $0)": "(_rflatten (cons _t (_rsplit _t $0)))"
                },
                {
                    "fn_9 (cdr (fn_2 $0))": "(_rflatten (cons _t (cdr (fn_2 $0))))"
                },
                {
                    "fn_9 (cons _a (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _t (cons _a (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_9 (cons _b (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _t (cons _b (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_9 (cons _t (cdr (cdr (fn_2 $0))))": "(_rflatten (cons _t (cons _t (cdr (cdr (fn_2 $0))))))"
                },
                {
                    "fn_9 (fn_2 $0)": "(_rflatten (cons _t (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}