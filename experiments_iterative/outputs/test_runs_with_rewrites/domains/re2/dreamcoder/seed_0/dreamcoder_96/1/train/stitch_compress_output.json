{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_with_rewrites --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --syMetricMethod Rewrite --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 32129,
    "final_cost": 14245,
    "compression_ratio": 2.2554580554580554,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _b) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (cdr (_rsplit _rdot (_rflatten (cons _a (_rsplit _c $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rappend _u (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _g (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rsplit _a $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _g $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _rempty (_rsplit _c (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rdot (_rflatten (cons _i (cons _i (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _a (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (_rsplit _c (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _a (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _w (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _a (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _a $0)))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (cons _rempty (_rsplit _c $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _w $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _c (_rflatten (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _a $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _m $0))))",
        "(lam (_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _s (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _y (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _a (_rflatten (_rappend _i (_rappend (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rdot (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rtail (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _a (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _c (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _c (_rflatten (cons _o (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _c (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _e) (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _a $0))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _e) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _c (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _c (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _e (cdr (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (cons _b (_rsplit _u $0))))",
        "(lam (_rflatten (cons _b (_rsplit _w $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (cons _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _k $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rdot (_rflatten (cons _rdot (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit (_rnot _g) $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit (_rnot _f) $0))))))"
    ],
    "rewritten": [
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _r)) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _b)) (lam _k)))",
        "(lam (fn_1 (fn_4 (cdr (_rsplit _rdot $0)) _o _k) (lam _k)))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_5 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r))",
        "(lam (fn_2 $0 _rempty _r))",
        "(lam (fn_9 _r (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0))",
        "(lam (fn_5 (_rflatten (_rrevcdr (cdr (_rsplit _rdot (fn_7 $0 _a))))) _r))",
        "(lam (fn_9 _u _o $0))",
        "(lam (fn_4 (_rrevcdr (_rsplit _rempty $0)) _o _u))",
        "(lam (fn_4 (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _o _u))",
        "(lam (fn_4 (_rrevcdr (_rappend _u (_rrevcdr (_rsplit _rdot $0)))) _o _u))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_2 $0 _t _m))",
        "(lam (fn_9 _m _t (fn_5 $0 _u)))",
        "(lam (fn_9 _m _t (fn_5 $0 _g)))",
        "(lam (fn_9 _m _t (fn_5 $0 _l)))",
        "(lam (fn_9 _m _t (fn_5 $0 _m)))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_7 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _g $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (fn_1 $0 (lam _j)))",
        "(lam (fn_7 (fn_1 $0 (lam _j)) _rempty))",
        "(lam (fn_1 (fn_1 $0 (lam _j)) (lam _j)))",
        "(lam (fn_1 (fn_1 $0 (lam _m)) (lam _j)))",
        "(lam (fn_1 (_rflatten (_rsplit _e $0)) (lam _j)))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rdot (fn_0 $0 _i _i))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (fn_5 (fn_0 $0 _a _q) _rempty))",
        "(lam (fn_7 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _a _q))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _a _q))))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_5 (fn_0 $0 _a _g) _rempty))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _a _g))))",
        "(lam (_rflatten (_rsplit _w (fn_0 $0 _a _g))))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _r _i))",
        "(lam (fn_5 (fn_0 $0 _r _i) _rempty))",
        "(lam (fn_0 (fn_5 $0 _rempty) _r _i))",
        "(lam (fn_0 (fn_7 $0 _rempty) _r _i))",
        "(lam (fn_6 $0 _v _r))",
        "(lam (fn_1 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_9 _t _d $0))",
        "(lam (fn_4 (_rrevcdr (_rsplit _rempty $0)) _d _t))",
        "(lam (fn_4 (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _d _t))",
        "(lam (fn_4 (_rrevcdr (_rappend _d (_rrevcdr (_rsplit _rdot $0)))) _d _t))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_5 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _w $0))))",
        "(lam (fn_8 _rempty _m $0))",
        "(lam (fn_0 $0 _b _rempty))",
        "(lam (fn_0 $0 _rempty _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_7 (_rflatten (cdr (_rsplit _rdot $0))) _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_5 $0 _rempty))))))",
        "(lam (fn_8 _q _n $0))",
        "(lam (fn_1 $0 (lam (if (_rmatch _n $0) _q $0))))",
        "(lam (fn_5 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _m $0))))",
        "(lam (fn_5 $0 (_rconcat _f _rempty)))",
        "(lam (fn_6 $0 _i _n))",
        "(lam (fn_1 $0 (lam (_rconcat _n _i))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 $0 _t _w))",
        "(lam (fn_1 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_9 _y _i (fn_5 $0 _e)))",
        "(lam (fn_2 $0 _i _y))",
        "(lam (fn_9 _y _i (fn_5 $0 _s)))",
        "(lam (fn_9 _y _i (fn_5 $0 _y)))",
        "(lam (fn_5 (fn_9 _i (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0) _y))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rdot (fn_0 $0 _e _e))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _e))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 (lam (_rconcat _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (_rtail (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lam (fn_1 $0 (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_5 (fn_0 $0 _o _j) _rempty))",
        "(lam (fn_7 (fn_0 $0 _o _rempty) _j))",
        "(lam (fn_7 (fn_0 $0 _rempty _o) _j))",
        "(lam (fn_7 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_4 (_rsplit _rempty $0) _o _g))",
        "(lam (fn_4 (_rsplit _rdot $0) _o _g))",
        "(lam (fn_4 (_rappend _g (_rrevcdr (_rsplit _rdot $0))) _o _g))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (fn_3 $0 _a))",
        "(lam (fn_3 (fn_1 $0 (lam $0)) _a))",
        "(lam (fn_3 (_rflatten (cons (_rconcat _rempty _e) (cdr (_rsplit _rdot $0)))) _a))",
        "(lam (fn_3 (fn_5 $0 _rempty) _a))",
        "(lam (fn_3 (fn_3 $0 _s) _a))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (fn_6 $0 _u _j))",
        "(lam (fn_6 (fn_1 $0 (lam $0)) _u _j))",
        "(lam (fn_6 (fn_1 $0 (lam _e)) _u _j))",
        "(lam (fn_6 (fn_1 $0 (lam _u)) _u _j))",
        "(lam (fn_6 (fn_1 $0 (lam _n)) _u _j))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_7 (fn_0 $0 _rempty _w) _a))",
        "(lam (fn_7 (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _a))",
        "(lam (fn_0 $0 (_rconcat _w _rempty) _a))",
        "(lam (fn_3 $0 _s))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (fn_3 $0 _s))))))",
        "(lam (fn_0 (_rflatten (cons _e (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_0 (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_5 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (fn_7 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (cons _b (_rsplit _u $0))))",
        "(lam (_rflatten (cons _b (_rsplit _w $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (fn_7 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _k $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (fn_1 $0 (lam _l)))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (fn_4 (_rsplit _rempty $0) _o _j))",
        "(lam (fn_4 (_rsplit _rdot $0) _o _j))",
        "(lam (fn_4 (cdr (_rsplit _rdot (fn_7 $0 _rdot))) _o _j))",
        "(lam (fn_4 (_rsplit (_rnot _g) $0) _o _j))",
        "(lam (fn_4 (_rsplit (_rnot _f) $0) _o _j))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _r)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _b)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rdot $0)) _o _k) (lambda _k)))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $2)))))))))))) $0 _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _r (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (_rflatten (_rrevcdr (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _a))))) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rappend _u (_rrevcdr (_rsplit _rdot $0)))) _o _u))",
        "(lambda (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $2)))))))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _u)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _g)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _l)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _m)))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _k $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _g $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _m)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _e $0)) (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _w (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _i))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _a _q))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g) _rempty))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))))",
        "(lambda (_rflatten (_rsplit _w (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _rempty) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _t _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rappend _d (_rrevcdr (_rsplit _rdot $0)))) _d _t))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _r $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _u $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _w $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _rempty _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (_rflatten (cdr (_rsplit _rdot $0))) _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _q _n $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _n $0) _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _h $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _m $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 (_rconcat _f _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) $0 _i _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $2)))))))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _s)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _y)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2)))) _i (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0) _y))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (cons _k (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))))))",
        "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
        "(lambda (_rflatten (cons _x (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rtail (map (lambda (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (car (map (lambda (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (car (map (lambda (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _o) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rempty $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _g (_rrevcdr (_rsplit _rdot $0))) _o _g))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) (_rflatten (cons (_rconcat _rempty _e) (cdr (_rsplit _rdot $0)))) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) $0 _s) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) $0 _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _e)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _u)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _w) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _rempty) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) $0 _s))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))) $0 _s))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _e (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _k $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _r $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _u $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _w $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _k $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l)))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _b) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rempty $0) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1))))) $0 _rdot))) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _g) $0) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _f) $0) _o _j))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 5353,
            "final_cost": 26776,
            "compression_ratio": 1.1999178368688377,
            "cumulative_compression_ratio": 1.1999178368688377,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _w _rempty) _a": "(_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty _b": "(_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _e (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _e (cdr (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _i": "(_rflatten (cons _i (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _a $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _a $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (_rsplit _c $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (cons _rempty (_rsplit _c $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty _o": "(_rflatten (cons _o (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o _rempty": "(_rflatten (cons _rempty (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 2727,
            "final_cost": 24049,
            "compression_ratio": 1.1133934882947316,
            "cumulative_compression_ratio": 1.3359807060584639,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rtail (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (_rtail (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _m) _rempty $0))": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _n) _q $0))": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _n $0) _q $0))": "(_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _b)": "(_rflatten (map (lam _b) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _e $0)) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _j) (_rsplit _rdot $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _m) (_rsplit _rdot $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rdot $0)))))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _b) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _b) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _r) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _m)": "(_rflatten (map (lam _m) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _n)": "(_rflatten (map (lam _n) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _r)": "(_rflatten (map (lam _r) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _u)": "(_rflatten (map (lam _u) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a #0)))))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $2))))))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 2525,
            "final_cost": 21524,
            "compression_ratio": 1.11731090875302,
            "cumulative_compression_ratio": 1.4927058167626834,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                },
                {
                    "fn_2 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                },
                {
                    "fn_2 $0 _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _e (cons #1 (cdr (cdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rdot $1))))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 1414,
            "final_cost": 20110,
            "compression_ratio": 1.0703132769766286,
            "cumulative_compression_ratio": 1.5976628543013427,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _a $0))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _a $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (cons (_rconcat _rempty _e) (cdr (_rsplit _rdot $0)))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _e) (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0))))))))))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam $0)) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (fn_1 $0 (lam $0))))))))"
                },
                {
                    "fn_3 $0 _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2)))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 1212,
            "final_cost": 18898,
            "compression_ratio": 1.0641337707693936,
            "cumulative_compression_ratio": 1.70012699756588,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 (_rappend _g (_rrevcdr (_rsplit _rdot $0))) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rsplit _rdot $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _i": "(_rflatten (_rappend _i (_rappend (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rsplit (_rnot _f) $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit (_rnot _f) $0)))))"
                },
                {
                    "fn_4 (_rsplit (_rnot _g) $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit (_rnot _g) $0)))))"
                },
                {
                    "fn_4 (_rsplit _rdot $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 (_rsplit _rempty $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (cdr (_rsplit _rdot (_rflatten (cons _rdot (_rsplit _c $0))))) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rdot (_rflatten (cons _rdot (_rsplit _c $0)))))))))"
                },
                {
                    "fn_4 (cdr (_rsplit _rdot $0)) _o _k": "(_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _g (_rsplit _a $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _g (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _a $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rsplit _a $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rsplit _a $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rappend (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rappend _d (_rrevcdr (_rsplit _rdot $0)))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rappend _u (_rrevcdr (_rsplit _rdot $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rappend _u (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rempty $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rsplit _a $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _s (_rsplit _a $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _s (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _y (_rsplit _a $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _y (_rsplit _a $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1212,
            "final_cost": 17686,
            "compression_ratio": 1.068528779825851,
            "cumulative_compression_ratio": 1.8166346262580573,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _f _rempty)": "(_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _e": "(_rflatten (_rappend _e (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (_rappend _f (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _g": "(_rflatten (_rappend _g (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _l": "(_rflatten (_rappend _l (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _m": "(_rflatten (_rappend _m (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _p": "(_rflatten (_rappend _p (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _a $0)))"
                },
                {
                    "fn_5 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r": "(_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rrevcdr (cdr (_rsplit _rdot (_rflatten (cons _a (_rsplit _c $0))))))) _r": "(_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (cdr (_rsplit _rdot (_rflatten (cons _a (_rsplit _c $0))))))))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_0 $0 _a _g) _rempty": "(_rflatten (_rappend _rempty (_rsplit _a (fn_0 $0 _a _g))))"
                },
                {
                    "fn_5 (fn_0 $0 _a _q) _rempty": "(_rflatten (_rappend _rempty (_rsplit _a (fn_0 $0 _a _q))))"
                },
                {
                    "fn_5 (fn_0 $0 _o _j) _rempty": "(_rflatten (_rappend _rempty (_rsplit _a (fn_0 $0 _o _j))))"
                },
                {
                    "fn_5 (fn_0 $0 _r _i) _rempty": "(_rflatten (_rappend _rempty (_rsplit _a (fn_0 $0 _r _i))))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (_rappend _s (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _u": "(_rflatten (_rappend _u (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _y": "(_rflatten (_rappend _y (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _i) _y": "(_rflatten (_rappend _y (_rsplit _a (fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (map (lam (_rconcat #2 #1)) (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1116,
            "final_cost": 16570,
            "compression_ratio": 1.067350633675317,
            "cumulative_compression_ratio": 1.9389861194930598,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam $0)) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _e)) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (fn_1 $0 (lam _e))))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _n)) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (fn_1 $0 (lam _n))))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _u)) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (map (lam (_rconcat _j _u)) (_rsplit _rdot (fn_1 $0 (lam _u))))))"
                },
                {
                    "fn_6 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 909,
            "final_cost": 15661,
            "compression_ratio": 1.058042270608518,
            "cumulative_compression_ratio": 2.051529276546836,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _a": "(_rflatten (cons _a (_rsplit _c $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _a": "(_rflatten (cons _a (_rsplit _c (_rflatten (cons _w (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 (fn_0 $0 _rempty _w) _a": "(_rflatten (cons _a (_rsplit _c (fn_0 $0 _rempty _w))))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _c $0)))"
                },
                {
                    "fn_7 (_rflatten (cdr (_rsplit _rdot $0))) _b": "(_rflatten (cons _b (_rsplit _c (_rflatten (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_7 $0 _j": "(_rflatten (cons _j (_rsplit _c $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j": "(_rflatten (cons _j (_rsplit _c (_rflatten (cons _o (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 (fn_0 $0 _o _rempty) _j": "(_rflatten (cons _j (_rsplit _c (fn_0 $0 _o _rempty))))"
                },
                {
                    "fn_7 (fn_0 $0 _rempty _o) _j": "(_rflatten (cons _j (_rsplit _c (fn_0 $0 _rempty _o))))"
                },
                {
                    "fn_7 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q": "(_rflatten (cons _q (_rsplit _c (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 $0 _rdot": "(_rflatten (cons _rdot (_rsplit _c $0)))"
                },
                {
                    "fn_7 $0 _rempty": "(_rflatten (cons _rempty (_rsplit _c $0)))"
                },
                {
                    "fn_7 (fn_1 $0 (lam _j)) _rempty": "(_rflatten (cons _rempty (_rsplit _c (fn_1 $0 (lam _j)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch $0 #1) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 810,
            "final_cost": 14851,
            "compression_ratio": 1.0545417816982021,
            "cumulative_compression_ratio": 2.163423338495724,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 _rempty _m $0": "(fn_1 $0 (lam (if (_rmatch $0 _m) _rempty $0)))"
                },
                {
                    "fn_8 _q _n $0": "(fn_1 $0 (lam (if (_rmatch $0 _n) _q $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 (_rrevcdr (_rsplit _rdot #2)) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) $1 $2))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 606,
            "final_cost": 14245,
            "compression_ratio": 1.0425412425412426,
            "cumulative_compression_ratio": 2.2554580554580554,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _i (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0": "(fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _i)"
                },
                {
                    "fn_9 _r (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) $0": "(fn_4 (_rrevcdr (_rsplit _rdot $0)) (_rtail (_rrevcdr (cdr (_rsplit _rdot $0)))) _r)"
                },
                {
                    "fn_9 _t _d $0": "(fn_4 (_rrevcdr (_rsplit _rdot $0)) _d _t)"
                },
                {
                    "fn_9 _u _o $0": "(fn_4 (_rrevcdr (_rsplit _rdot $0)) _o _u)"
                },
                {
                    "fn_9 _y _i (fn_5 $0 _e)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _e))) _i _y)"
                },
                {
                    "fn_9 _m _t (fn_5 $0 _g)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _g))) _t _m)"
                },
                {
                    "fn_9 _m _t (fn_5 $0 _l)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _l))) _t _m)"
                },
                {
                    "fn_9 _m _t (fn_5 $0 _m)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _m))) _t _m)"
                },
                {
                    "fn_9 _y _i (fn_5 $0 _s)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _s))) _i _y)"
                },
                {
                    "fn_9 _m _t (fn_5 $0 _u)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _u))) _t _m)"
                },
                {
                    "fn_9 _y _i (fn_5 $0 _y)": "(fn_4 (_rrevcdr (_rsplit _rdot (fn_5 $0 _y))) _i _y)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}