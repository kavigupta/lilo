{
    "DSL": {
        "logVariable": -0.7004732206520181,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -2.079441541679836
            },
            {
                "expression": "_rempty",
                "logProbability": -1.580450375560848
            },
            {
                "expression": "_a",
                "logProbability": -1.6545583477145702
            },
            {
                "expression": "_b",
                "logProbability": -1.7346010553881066
            },
            {
                "expression": "_c",
                "logProbability": -2.140066163496271
            },
            {
                "expression": "_d",
                "logProbability": -2.022283127839888
            },
            {
                "expression": "_e",
                "logProbability": -1.673976433571672
            },
            {
                "expression": "_f",
                "logProbability": -2.022283127839888
            },
            {
                "expression": "_g",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_h",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_i",
                "logProbability": -1.8922299995916898
            },
            {
                "expression": "_j",
                "logProbability": -2.0504540048065842
            },
            {
                "expression": "_k",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_l",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_m",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_n",
                "logProbability": -2.0504540048065842
            },
            {
                "expression": "_o",
                "logProbability": -1.9169226121820615
            },
            {
                "expression": "_p",
                "logProbability": -2.0504540048065842
            },
            {
                "expression": "_q",
                "logProbability": -1.9948841536517734
            },
            {
                "expression": "_r",
                "logProbability": -2.0504540048065842
            },
            {
                "expression": "_s",
                "logProbability": -2.022283127839888
            },
            {
                "expression": "_t",
                "logProbability": -2.0504540048065842
            },
            {
                "expression": "_u",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_v",
                "logProbability": -1.7556544645859393
            },
            {
                "expression": "_w",
                "logProbability": -1.9169226121820615
            },
            {
                "expression": "_x",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_y",
                "logProbability": -2.1718148618108515
            },
            {
                "expression": "_z",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_rnot",
                "logProbability": -1.8681324480126293
            },
            {
                "expression": "_ror",
                "logProbability": -2.2046046846338423
            },
            {
                "expression": "_rconcat",
                "logProbability": -1.5984688810635266
            },
            {
                "expression": "_rmatch",
                "logProbability": -0.10008345855698275
            },
            {
                "expression": "_rsplit",
                "logProbability": -0.9409833444645272
            },
            {
                "expression": "_rflatten",
                "logProbability": -1.0775588794702777
            },
            {
                "expression": "_rtail",
                "logProbability": -1.968215906569612
            },
            {
                "expression": "_rappend",
                "logProbability": -1.2976582884032588
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -1.4518089682305173
            },
            {
                "expression": "if",
                "logProbability": -2.8424584022002675
            },
            {
                "expression": "cons",
                "logProbability": -1.334025932574134
            },
            {
                "expression": "car",
                "logProbability": -3.0788471802644977
            },
            {
                "expression": "cdr",
                "logProbability": -1.3527180655862865
            },
            {
                "expression": "map",
                "logProbability": -1.6341305250244722
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (map (lambda _k) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _d $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_41_if_there_is_any_letter_add_v_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))"
                }
            ]
        },
        {
            "task": "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (cons _a (cdr (_rsplit _rempty $0))))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (cons _q (cdr (_rsplit _rempty $0))))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _rdot (_rflatten (cons _r (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _q (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _w (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _f (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _v (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_230_if_there_is_m_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) _l $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _a (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _f (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _e $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _e $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _y $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))) _e) (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) (_rflatten (_rappend _m (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (cdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_343_if_the_word_ends_with_consonant_replace_that_with_v_c",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty (_rflatten (_rappend (_rtail (_rsplit _rdot (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _v (_rsplit _rempty $0)))))) (_rrevcdr (_rsplit _rempty $0)))))) _e) (_rflatten (_rappend (_rtail (_rsplit _rdot (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _v (_rsplit _rempty $0)))))) (_rrevcdr (_rsplit _rempty $0)))) (_rflatten (_rappend _c (_rsplit _rempty (_rflatten (_rappend (_rtail (_rsplit _rdot (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _v (_rsplit _rempty $0)))))) (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _d $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _h $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _m $0))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (cons _w (cons _w (cdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rappend (_rtail (_rsplit _rdot $0)) (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _k (_rrevcdr (_rappend _b (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _k (_rrevcdr (_rappend _l (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _v $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _h $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _u $0))))"
                }
            ]
        },
        {
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _f $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_473_if_there_is_o_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))))"
                }
            ]
        }
    ]
}