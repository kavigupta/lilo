{
    "cmd": "python run_iterative_experiment.py --experiment_name test_runs_32 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 5 --global_batch_sizes 32 --enumeration_timeout 300 --recognition_train_steps 100 --random_seeds 111 222 333 --verbose --syMetricMethod Rewrite",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 9798,
    "final_cost": 4445,
    "compression_ratio": 2.2042744656917885,
    "num_abstractions": 9,
    "original": [
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _p $0))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _c (cons _e (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons (car (_rsplit _rdot $0)) (cons _e (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _c (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _c (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _c (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons _c (cons _r (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons (car (_rsplit _rdot $0)) (cons _r (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _g (cdr (_rsplit _rdot (_rflatten (cons _c (cons _l (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _g (cdr (_rsplit _rdot (_rflatten (cons (car (_rsplit _rdot $0)) (cons _l (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (_rsplit _e $0)))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _v (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _p $0))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (cons (car (_rsplit _rdot $0)) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (cdr (_rsplit _rdot (_rflatten (cons _rdot (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _v (cdr (_rsplit _rdot (_rflatten (cons _h (_rsplit _rdot $0))))))))"
    ],
    "rewritten": [
        "(lam (fn_7 (_rsplit _c $0) _d))",
        "(lam (fn_7 (fn_1 $0) _d))",
        "(lam (fn_7 (_rsplit _a $0) _d))",
        "(lam (fn_3 $0 _d))",
        "(lam (fn_7 (_rsplit _p $0) _d))",
        "(lam (fn_5 _e $0))",
        "(lam (fn_2 $0 (_rconcat _e _e)))",
        "(lam (fn_2 (fn_0 $0 _e _c) _e))",
        "(lam (fn_0 $0 _rempty (_rconcat _e _e)))",
        "(lam (fn_2 (fn_4 $0 _e) _e))",
        "(lam (fn_5 _c $0))",
        "(lam (fn_0 $0 _v _c))",
        "(lam (fn_0 $0 _a _c))",
        "(lam (fn_0 $0 _b _c))",
        "(lam (fn_0 $0 _o _c))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (fn_1 $0))))",
        "(lam (fn_5 _r $0))",
        "(lam (fn_2 $0 (_rconcat _r _r)))",
        "(lam (fn_2 (fn_0 $0 _r _c) _r))",
        "(lam (fn_0 $0 _rempty (_rconcat _r _r)))",
        "(lam (fn_2 (fn_4 $0 _r) _r))",
        "(lam (fn_0 $0 _l _g))",
        "(lam (fn_2 $0 (_rconcat _g _l)))",
        "(lam (fn_2 (fn_0 $0 _l _c) _g))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _l _g))",
        "(lam (fn_2 (fn_4 $0 _l) _g))",
        "(lam (fn_2 $0 _m))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_2 (_rflatten (fn_1 $0)) _m))",
        "(lam (fn_2 (fn_8 $0) _m))",
        "(lam (fn_2 (_rflatten (_rsplit _e $0)) _m))",
        "(lam (fn_4 $0 _c))",
        "(lam (fn_4 $0 _v))",
        "(lam (fn_4 $0 _a))",
        "(lam (fn_4 $0 _b))",
        "(lam (fn_4 $0 _o))",
        "(lam (fn_8 $0))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_6 (cdr (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_7 (_rsplit _c $0) _u))",
        "(lam (fn_7 (fn_1 $0) _u))",
        "(lam (fn_7 (_rsplit _a $0) _u))",
        "(lam (fn_3 $0 _u))",
        "(lam (fn_7 (_rsplit _p $0) _u))",
        "(lam (fn_7 (_rrevcdr (fn_1 $0)) (_rconcat _x _p)))",
        "(lam (fn_7 (_rappend _x (_rrevcdr (fn_1 $0))) _p))",
        "(lam (fn_6 (fn_1 $0)))",
        "(lam (fn_6 (_rsplit _e $0)))",
        "(lam (fn_0 $0 (car (fn_1 $0)) _v))",
        "(lam (fn_2 (_rflatten (cons _rdot (fn_1 $0))) _v))",
        "(lam (fn_2 (_rflatten (cons _h (fn_1 $0))) _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _c $0) _d))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (#(lambda (_rsplit _rdot $0)) $0) _d))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _a $0) _d))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _p $0) _d))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 $1 $1))) _e $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _e _e)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _c) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _e _e)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _e) _e))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 $1 $1))) _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _c))",
        "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 $1 $1))) _r $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _r)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _c) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _r _r)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _r) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _g _l)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _c) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _l) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a)) $0) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _e $0)) _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _c))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _v))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1))))) $0 _o))",
        "(lambda (#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a)) $0))",
        "(lambda (_rflatten (cons _c (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (_rflatten (cons _v $0))) (cdr (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _c $0) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (#(lambda (_rsplit _rdot $0)) $0) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _a $0) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rsplit _p $0) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 $1)))) (_rappend _x (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _p))",
        "(lambda (#(lambda (_rflatten (cons _v $0))) (#(lambda (_rsplit _rdot $0)) $0)))",
        "(lambda (#(lambda (_rflatten (cons _v $0))) (_rsplit _e $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (cons _rdot (#(lambda (_rsplit _rdot $0)) $0))) _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) $0))) _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 2828,
            "final_cost": 6970,
            "compression_ratio": 1.405738880918221,
            "cumulative_compression_ratio": 1.405738880918221,
            "num_uses": 24,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _rempty (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _b (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _c (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _c (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _l (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _l (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _v (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _v (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _c": "(_rflatten (cons _c (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _b _c": "(_rflatten (cons _c (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _c _c": "(_rflatten (cons _c (cons _c (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _c": "(_rflatten (cons _c (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _l _c": "(_rflatten (cons _c (cons _l (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o _c": "(_rflatten (cons _c (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _c": "(_rflatten (cons _c (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (cons _m (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (car (_rsplit _rdot $0)) _v": "(_rflatten (cons _v (cons (car (_rsplit _rdot $0)) (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rdot #0)",
            "dreamcoder": "#(lambda (_rsplit _rdot $0))",
            "arity": 1,
            "name": "fn_1",
            "utility": 707,
            "final_cost": 6263,
            "compression_ratio": 1.112885198786524,
            "cumulative_compression_ratio": 1.5644259939326202,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0": "(_rsplit _rdot $0)"
                },
                {
                    "fn_1 (_rflatten (_rsplit _e $0))": "(_rsplit _rdot (_rflatten (_rsplit _e $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0))": "(_rsplit _rdot (_rflatten (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _a (cdr (_rsplit _rdot $0))))": "(_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _h (_rsplit _rdot $0)))": "(_rsplit _rdot (_rflatten (cons _h (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (cons _rdot (_rsplit _rdot $0)))": "(_rsplit _rdot (_rflatten (cons _rdot (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (fn_0 $0 _e (car (_rsplit _rdot $0)))": "(_rsplit _rdot (fn_0 $0 _e (car (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (fn_0 $0 _e _c)": "(_rsplit _rdot (fn_0 $0 _e _c))"
                },
                {
                    "fn_1 (fn_0 $0 _l (car (_rsplit _rdot $0)))": "(_rsplit _rdot (fn_0 $0 _l (car (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (fn_0 $0 _l _c)": "(_rsplit _rdot (fn_0 $0 _l _c))"
                },
                {
                    "fn_1 (fn_0 $0 _r (car (_rsplit _rdot $0)))": "(_rsplit _rdot (fn_0 $0 _r (car (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (fn_0 $0 _r _c)": "(_rsplit _rdot (fn_0 $0 _r _c))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (fn_1 #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 404,
            "final_cost": 5859,
            "compression_ratio": 1.0689537463731011,
            "cumulative_compression_ratio": 1.6722990271377367,
            "num_uses": 17,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (fn_1 $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _g _l)": "(_rflatten (cons (_rconcat _g _l) (cdr (fn_1 $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (fn_1 $0))))"
                },
                {
                    "fn_2 $0 _a": "(_rflatten (cons _a (cdr (fn_1 $0))))"
                },
                {
                    "fn_2 (fn_0 $0 _e (car (fn_1 $0))) _e": "(_rflatten (cons _e (cdr (fn_1 (fn_0 $0 _e (car (fn_1 $0)))))))"
                },
                {
                    "fn_2 (fn_0 $0 _e _c) _e": "(_rflatten (cons _e (cdr (fn_1 (fn_0 $0 _e _c)))))"
                },
                {
                    "fn_2 (fn_0 $0 _l (car (fn_1 $0))) _g": "(_rflatten (cons _g (cdr (fn_1 (fn_0 $0 _l (car (fn_1 $0)))))))"
                },
                {
                    "fn_2 (fn_0 $0 _l _c) _g": "(_rflatten (cons _g (cdr (fn_1 (fn_0 $0 _l _c)))))"
                },
                {
                    "fn_2 $0 _m": "(_rflatten (cons _m (cdr (fn_1 $0))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _e $0)) _m": "(_rflatten (cons _m (cdr (fn_1 (_rflatten (_rsplit _e $0))))))"
                },
                {
                    "fn_2 (_rflatten (cons _a (cdr (fn_1 $0)))) _m": "(_rflatten (cons _m (cdr (fn_1 (_rflatten (cons _a (cdr (fn_1 $0))))))))"
                },
                {
                    "fn_2 (_rflatten (fn_1 $0)) _m": "(_rflatten (cons _m (cdr (fn_1 (_rflatten (fn_1 $0))))))"
                },
                {
                    "fn_2 (fn_0 $0 _r (car (fn_1 $0))) _r": "(_rflatten (cons _r (cdr (fn_1 (fn_0 $0 _r (car (fn_1 $0)))))))"
                },
                {
                    "fn_2 (fn_0 $0 _r _c) _r": "(_rflatten (cons _r (cdr (fn_1 (fn_0 $0 _r _c)))))"
                },
                {
                    "fn_2 (_rflatten (cons _h (fn_1 $0))) _v": "(_rflatten (cons _v (cdr (fn_1 (_rflatten (cons _h (fn_1 $0)))))))"
                },
                {
                    "fn_2 (_rflatten (cons _rdot (fn_1 $0))) _v": "(_rflatten (cons _v (cdr (fn_1 (_rflatten (cons _rdot (fn_1 $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _e #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 404,
            "final_cost": 5455,
            "compression_ratio": 1.0740604949587533,
            "cumulative_compression_ratio": 1.7961503208065994,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _d": "(_rflatten (_rappend _d (_rsplit _e $0)))"
                },
                {
                    "fn_3 $0 _u": "(_rflatten (_rappend _u (_rsplit _e $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #0 #1 (car (fn_1 #0)))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $1 $0 (car (#(lambda (_rsplit _rdot $0)) $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 303,
            "final_cost": 5152,
            "compression_ratio": 1.0588121118012421,
            "cumulative_compression_ratio": 1.9017857142857142,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _a": "(fn_0 $0 _a (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _b": "(fn_0 $0 _b (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _c": "(fn_0 $0 _c (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _e": "(fn_0 $0 _e (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _l": "(fn_0 $0 _l (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _o": "(fn_0 $0 _o (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _r": "(fn_0 $0 _r (car (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _v": "(fn_0 $0 _v (car (fn_1 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #1 #0 #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 $1 $1)))",
            "arity": 2,
            "name": "fn_5",
            "utility": 303,
            "final_cost": 4849,
            "compression_ratio": 1.0624871107444833,
            "cumulative_compression_ratio": 2.020622808826562,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 _c $0": "(fn_0 $0 _c _c)"
                },
                {
                    "fn_5 _e $0": "(fn_0 $0 _e _e)"
                },
                {
                    "fn_5 _r $0": "(fn_0 $0 _r _r)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _v #0))",
            "dreamcoder": "#(lambda (_rflatten (cons _v $0)))",
            "arity": 1,
            "name": "fn_6",
            "utility": 202,
            "final_cost": 4647,
            "compression_ratio": 1.0434689046696795,
            "cumulative_compression_ratio": 2.108457069076824,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 (_rsplit _e $0)": "(_rflatten (cons _v (_rsplit _e $0)))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty $0))": "(_rflatten (cons _v (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_6 (fn_1 $0)": "(_rflatten (cons _v (fn_1 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 #0))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 $1))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 101,
            "final_cost": 4546,
            "compression_ratio": 1.0222173339199296,
            "cumulative_compression_ratio": 2.15530136383634,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 (_rrevcdr (fn_1 $0)) (_rconcat _x _p)": "(_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (fn_1 $0))))"
                },
                {
                    "fn_7 (_rsplit _a $0) _d": "(_rflatten (_rappend _d (_rsplit _a $0)))"
                },
                {
                    "fn_7 (_rsplit _c $0) _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_7 (_rsplit _p $0) _d": "(_rflatten (_rappend _d (_rsplit _p $0)))"
                },
                {
                    "fn_7 (fn_1 $0) _d": "(_rflatten (_rappend _d (fn_1 $0)))"
                },
                {
                    "fn_7 (_rappend _x (_rrevcdr (fn_1 $0))) _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_7 (_rsplit _a $0) _u": "(_rflatten (_rappend _u (_rsplit _a $0)))"
                },
                {
                    "fn_7 (_rsplit _c $0) _u": "(_rflatten (_rappend _u (_rsplit _c $0)))"
                },
                {
                    "fn_7 (_rsplit _p $0) _u": "(_rflatten (_rappend _u (_rsplit _p $0)))"
                },
                {
                    "fn_7 (fn_1 $0) _u": "(_rflatten (_rappend _u (fn_1 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 #0 _a)",
            "dreamcoder": "#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))",
            "arity": 1,
            "name": "fn_8",
            "utility": 101,
            "final_cost": 4445,
            "compression_ratio": 1.0227221597300338,
            "cumulative_compression_ratio": 2.2042744656917885,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0": "(fn_2 $0 _a)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}