{
    "DSL": {
        "logVariable": -0.763256746746972,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -2.3611534471451128
            },
            {
                "expression": "_rempty",
                "logProbability": -2.085447565740047
            },
            {
                "expression": "_a",
                "logProbability": -2.6756467770475503
            },
            {
                "expression": "_b",
                "logProbability": -2.9207692350805354
            },
            {
                "expression": "_c",
                "logProbability": -2.654140571826587
            },
            {
                "expression": "_d",
                "logProbability": -2.5922651681084994
            },
            {
                "expression": "_e",
                "logProbability": -2.22762205452059
            },
            {
                "expression": "_f",
                "logProbability": -2.9207692350805354
            },
            {
                "expression": "_g",
                "logProbability": -2.6976256837663257
            },
            {
                "expression": "_h",
                "logProbability": -2.9207692350805354
            },
            {
                "expression": "_i",
                "logProbability": -2.22762205452059
            },
            {
                "expression": "_j",
                "logProbability": -2.6976256837663257
            },
            {
                "expression": "_k",
                "logProbability": -2.766618555253277
            },
            {
                "expression": "_l",
                "logProbability": -2.6976256837663257
            },
            {
                "expression": "_m",
                "logProbability": -2.9207692350805354
            },
            {
                "expression": "_n",
                "logProbability": -2.633087162628754
            },
            {
                "expression": "_o",
                "logProbability": -2.553044454955218
            },
            {
                "expression": "_p",
                "logProbability": -2.7907161068323374
            },
            {
                "expression": "_q",
                "logProbability": -2.515304126972371
            },
            {
                "expression": "_r",
                "logProbability": -2.3771537884915537
            },
            {
                "expression": "_s",
                "logProbability": -2.6756467770475503
            },
            {
                "expression": "_t",
                "logProbability": -2.5339962599845234
            },
            {
                "expression": "_u",
                "logProbability": -2.4267507296309256
            },
            {
                "expression": "_v",
                "logProbability": -2.815408719422709
            },
            {
                "expression": "_w",
                "logProbability": -2.5724625408123196
            },
            {
                "expression": "_x",
                "logProbability": -2.9207692350805354
            },
            {
                "expression": "_y",
                "logProbability": -3.10309079187449
            },
            {
                "expression": "_z",
                "logProbability": -3.070300969051499
            },
            {
                "expression": "_rnot",
                "logProbability": -3.10309079187449
            },
            {
                "expression": "_ror",
                "logProbability": -3.007780612070165
            },
            {
                "expression": "_rconcat",
                "logProbability": -2.0383800548820616
            },
            {
                "expression": "_rmatch",
                "logProbability": 0.0
            },
            {
                "expression": "_rsplit",
                "logProbability": -0.9147146874186891
            },
            {
                "expression": "_rflatten",
                "logProbability": -1.5791595531278393
            },
            {
                "expression": "_rtail",
                "logProbability": -3.070300969051499
            },
            {
                "expression": "_rappend",
                "logProbability": -1.5056411187524565
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -1.6411866107486803
            },
            {
                "expression": "if",
                "logProbability": -3.720997008004045
            },
            {
                "expression": "cons",
                "logProbability": -1.3988731433267505
            },
            {
                "expression": "car",
                "logProbability": -3.590943879755847
            },
            {
                "expression": "cdr",
                "logProbability": -1.7252697279592217
            },
            {
                "expression": "map",
                "logProbability": -2.0071208801002096
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _i (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_39_if_there_is_c_add_d_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch (_ror _c _rempty) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch (_ror _c _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch (_ror _z _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cons _rempty (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _m $0))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (_rsplit _i (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (_rsplit _i (_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda _g) (_rsplit _rdot $0))))))) (cons _a (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_118_if_there_is_l_replace_that_with_n_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _i (_rflatten (cons _rempty (cons _r (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _i (_rflatten (cons _r (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda _i) (_rsplit _rdot $0))))))) (cons _r (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r $0)) (_rsplit _rdot (_rflatten (map (lambda _v) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_133_if_there_is_p_add_p_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat (_rconcat _rempty _p) _p) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_152_if_there_is_r_add_b_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _b _r) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _b _r) $0)) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_155_if_there_is_t_replace_that_with_x_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _x _w) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_159_if_there_is_t_replace_that_with_f_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _i $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (_rsplit _i (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_162_if_there_is_m_remove_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat _rempty _rempty) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rempty _m) $0) _rempty $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_167_if_there_is_l_replace_that_with_v_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _i (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (_rappend _f (_rsplit _i $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (_rsplit _i (_rflatten (_rappend _f (_rsplit _i $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rrevcdr (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) (cons _d (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))) (cons _d (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_199_if_there_is_d_add_i_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_223_if_there_is_any_letter_replace_that_with_n_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n $0)) (_rsplit _rdot (_rflatten (map (lambda _i) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _i)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot (_rflatten (map (lambda _l) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _w _t) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (_rsplit _rdot (_rflatten (map (lambda _t) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _i $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _i $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _i $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _i $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (_rsplit _i (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_280_if_there_is_any_letter_add_q_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (car (map (lambda (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (car (map (lambda (_rsplit _rdot $1)) (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cons (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cons _rempty (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i (_rflatten (cons _o (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_325_if_there_is_t_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) _i $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _t $0) _i $0)) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _i _rempty) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _rempty _i) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) _i $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_330_if_there_is_t_replace_that_with_l_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _u $0))))"
                }
            ]
        },
        {
            "task": "re2_train_360_if_there_is_s_replace_that_with_d_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d (_rtail (map (lambda _u) (_rsplit _rempty $1)))) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cons _rempty (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rdot $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_397_if_there_is_s_replace_that_with_h",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _m $0))))"
                }
            ]
        },
        {
            "task": "re2_train_477_if_there_is_s_replace_that_with_i_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _u $0))))"
                }
            ]
        },
        {
            "task": "re2_train_490_if_there_is_any_letter_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _l)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_493_if_there_is_s_replace_that_with_r_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _rdot $0))))"
                }
            ]
        }
    ]
}