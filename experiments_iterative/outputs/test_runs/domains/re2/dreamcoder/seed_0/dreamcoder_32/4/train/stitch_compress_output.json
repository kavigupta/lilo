{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 5 --global_batch_sizes 32 --enumeration_timeout 300 --recognition_train_steps 100 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 40162,
    "final_cost": 16725,
    "compression_ratio": 2.4013153961136022,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot (_rflatten (cons _rempty (_rsplit _i $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_ror _c _rempty) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_ror _c _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_ror _z _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _c (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rsplit _i $0))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _j (_rsplit _i $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _m $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _rdot $0) _j $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _rempty (_rsplit _i (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (_rsplit _i (_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _g (_rsplit _i (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _g (_rsplit _i (_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rdot $0))))))) (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _i (_rsplit _i (_rflatten (cons _rempty (cons _r (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _i (_rsplit _i (_rflatten (cons _r (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rdot $0))))))) (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rdot (_rflatten (map (lam _v) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty _p) _p) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _i $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _i $0))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (_rappend _p (_rsplit _i $0))))))",
        "(lam (_rflatten (_rsplit _u (_rflatten (_rappend _p (_rsplit _i $0))))))",
        "(lam (_rflatten (_rsplit _m (_rflatten (_rappend _p (_rsplit _i $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) (_rconcat _b _r) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _r $0) (_rconcat _b _r) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _x _w) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _i $0)))))))",
        "(lam (_rflatten (cons _rempty (_rsplit _i (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) (_rconcat _rempty _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _rempty _m) $0) _rempty $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _rempty _q) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _q _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _i (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _i (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _f (_rsplit _i $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _i $0))))",
        "(lam (_rflatten (cons _rempty (_rsplit _i (_rflatten (_rappend _f (_rsplit _i $0)))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rrevcdr (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) (cons _d (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))) (cons _d (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _n _e) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rdot (_rflatten (map (lam _i) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _i)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _rdot $0) (_rconcat _w _t) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w $0)) (_rsplit _rdot (_rflatten (map (lam _t) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) (_rconcat _l _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _m _rempty) $0) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _i (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _i $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _i $0))))))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _x (_rsplit _i (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _i (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _i (_rflatten (cons _o (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _j (cons (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _rempty _i) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _i _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _i $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _t $0) _i $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _i $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _a $0) (_rconcat _u _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _u $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d (_rtail (map (lam _u) (_rsplit _rempty $1)))) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _g $0) (_rconcat _u _f) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _i (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _i (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) (_rconcat _v _a) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _m $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _a (_rsplit _i $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _u $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _l)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _rdot $0))))"
    ],
    "rewritten": [
        "(lam (fn_5 _b _k $0))",
        "(lam (fn_4 (fn_5 _b _k $0) (lam $0)))",
        "(lam (fn_5 _b _k (fn_4 $0 (lam $0))))",
        "(lam (fn_5 _b _k (fn_7 $0 _rempty)))",
        "(lam (fn_5 _b _k $0))",
        "(lam (fn_4 $0 (lam _k)))",
        "(lam (fn_4 $0 (lam (_rconcat _rempty _k))))",
        "(lam (fn_4 $0 (lam (_rconcat _k _rempty))))",
        "(lam (fn_2 $0 _o _u))",
        "(lam (fn_4 (fn_2 $0 _o _u) (lam $0)))",
        "(lam (fn_3 (fn_2 $0 _o _rempty) _u))",
        "(lam (fn_2 (_rflatten (_rsplit _rempty $0)) _o _u))",
        "(lam (_rflatten (_rsplit _rempty (fn_2 $0 _o _u))))",
        "(lam (fn_5 _c _d $0))",
        "(lam (fn_5 _c _d (_rflatten (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 (_rconcat _d _c) (_ror _c _rempty)))",
        "(lam (fn_0 $0 (_rconcat _d _c) (_ror _c _c)))",
        "(lam (fn_0 $0 (_rconcat _d _c) (_ror _z _c)))",
        "(lam (fn_2 (fn_3 $0 _u) _t _m))",
        "(lam (fn_2 (fn_3 $0 _q) _t _m))",
        "(lam (fn_2 (fn_3 $0 _t) _t _m))",
        "(lam (fn_2 (fn_3 $0 _c) _t _m))",
        "(lam (fn_2 (fn_3 $0 _y) _t _m))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_7 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _m $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (fn_4 $0 (lam _j)))",
        "(lam (fn_0 $0 _j _rdot))",
        "(lam (fn_7 (fn_4 $0 (lam _j)) _rempty))",
        "(lam (fn_4 (fn_4 $0 (lam _l)) (lam _j)))",
        "(lam (fn_4 (fn_4 $0 (lam _k)) (lam _j)))",
        "(lam (fn_1 $0 _i _w))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_1 $0 _a _q))",
        "(lam (fn_1 $0 (_rconcat _q _a) _rempty))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _q))",
        "(lam (fn_1 $0 _rempty (_rconcat _q _a)))",
        "(lam (fn_7 (fn_1 $0 _rempty _a) _q))",
        "(lam (fn_1 $0 _a _g))",
        "(lam (fn_4 (fn_1 $0 _a _g) (lam $0)))",
        "(lam (fn_7 (fn_1 $0 _a _rempty) _g))",
        "(lam (fn_7 (fn_1 $0 _rempty _a) _g))",
        "(lam (fn_1 $0 _a (car (_rappend _o (_rrevcdr (_rsplit _rempty (fn_4 $0 (lam _g))))))))",
        "(lam (fn_0 $0 (_rconcat _n _k) _l))",
        "(lam (fn_1 $0 _r _i))",
        "(lam (fn_4 (fn_1 $0 _r _i) (lam $0)))",
        "(lam (fn_7 (fn_1 $0 _r _rempty) _i))",
        "(lam (fn_7 (fn_1 $0 _rempty _r) _i))",
        "(lam (fn_1 $0 _r (car (_rappend _o (_rrevcdr (_rsplit _rempty (fn_4 $0 (lam _i))))))))",
        "(lam (fn_4 $0 (lam (_rconcat _r _v))))",
        "(lam (fn_4 (fn_4 $0 (lam _v)) (lam (_rconcat _r $0))))",
        "(lam (fn_4 (fn_4 $0 (lam _n)) (lam (_rconcat _r _v))))",
        "(lam (fn_4 (fn_4 $0 (lam _f)) (lam (_rconcat _r _v))))",
        "(lam (fn_4 (_rflatten (_rsplit _i $0)) (lam (_rconcat _r _v))))",
        "(lam (fn_2 $0 _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_5 _p _p $0))",
        "(lam (fn_5 _p _p (fn_4 $0 (lam $0))))",
        "(lam (fn_4 (fn_5 _p _p $0) (lam $0)))",
        "(lam (fn_5 _p (_rconcat _rempty _p) $0))",
        "(lam (fn_5 _p _p (_rflatten (_rsplit _rempty $0))))",
        "(lam (fn_3 $0 _p))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 _p))))",
        "(lam (_rflatten (_rsplit _r (fn_3 $0 _p))))",
        "(lam (_rflatten (_rsplit _u (fn_3 $0 _p))))",
        "(lam (_rflatten (_rsplit _m (fn_3 $0 _p))))",
        "(lam (fn_5 _r _b $0))",
        "(lam (fn_4 (fn_5 _r _b $0) (lam $0)))",
        "(lam (fn_9 _w _x $0))",
        "(lam (fn_9 _v _f $0))",
        "(lam (fn_4 (fn_9 _v _f $0) (lam $0)))",
        "(lam (fn_9 _v _f (fn_4 $0 (lam $0))))",
        "(lam (fn_9 _v _f (fn_3 $0 _rempty)))",
        "(lam (fn_7 (fn_9 _v _f $0) _rempty))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_4 (fn_0 $0 _rempty _m) (lam $0)))",
        "(lam (fn_0 (fn_4 $0 (lam $0)) _rempty _m))",
        "(lam (fn_0 $0 (_rconcat _rempty _rempty) _m))",
        "(lam (fn_0 $0 _rempty (_rconcat _rempty _m)))",
        "(lam (fn_0 $0 (_rconcat _v _q) _l))",
        "(lam (fn_4 (fn_0 $0 (_rconcat _v _q) _l) (lam $0)))",
        "(lam (fn_1 $0 _rempty _b))",
        "(lam (fn_1 $0 _b _rempty))",
        "(lam (fn_1 $0 (_rconcat _b _rempty) _rempty))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _rempty _b))))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 _rempty _b))))",
        "(lam (fn_0 $0 _q _n))",
        "(lam (fn_4 (fn_0 $0 _q _n) (lam $0)))",
        "(lam (fn_0 $0 (_rconcat _rempty _q) _n))",
        "(lam (fn_0 $0 (_rconcat _q _rempty) _n))",
        "(lam (fn_3 (fn_0 $0 _q _n) _rempty))",
        "(lam (fn_3 $0 _f))",
        "(lam (fn_3 (fn_4 $0 (lam $0)) _f))",
        "(lam (fn_4 (fn_3 $0 _f) (lam $0)))",
        "(lam (fn_3 $0 (_rconcat _f _rempty)))",
        "(lam (fn_7 (fn_3 $0 _f) _rempty))",
        "(lam (fn_1 $0 _d (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _d (car (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 _d (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _d (car (_rsplit _rempty (fn_3 $0 _q)))))",
        "(lam (fn_0 $0 (_rconcat _n _e) _n))",
        "(lam (fn_0 $0 (_rconcat _d _i) _d))",
        "(lam (fn_4 $0 (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0))))",
        "(lam (fn_4 $0 (lam (_rconcat _n _i))))",
        "(lam (fn_4 (fn_4 $0 (lam _i)) (lam (_rconcat _n $0))))",
        "(lam (fn_4 (fn_4 $0 (lam _n)) (lam (_rconcat $0 _i))))",
        "(lam (fn_4 (fn_4 $0 (lam _n)) (lam (_rconcat _n _i))))",
        "(lam (fn_4 (fn_4 $0 (lam _f)) (lam (_rconcat _n _i))))",
        "(lam (fn_4 $0 (lam (_rconcat _w _t))))",
        "(lam (fn_0 $0 (_rconcat _w _t) _rdot))",
        "(lam (fn_4 (fn_4 $0 (lam _t)) (lam (_rconcat _w $0))))",
        "(lam (fn_4 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _w _t))))",
        "(lam (fn_4 (fn_4 $0 (lam _l)) (lam (_rconcat _w _t))))",
        "(lam (fn_0 $0 _l _m))",
        "(lam (fn_4 (fn_0 $0 _l _m) (lam $0)))",
        "(lam (fn_0 $0 (_rconcat _l _rempty) _m))",
        "(lam (fn_0 $0 _l (_rconcat _m _rempty)))",
        "(lam (fn_3 (fn_0 $0 _l _m) _rempty))",
        "(lam (fn_2 (fn_3 $0 _u) _i _y))",
        "(lam (fn_2 (fn_3 $0 _w) _i _y))",
        "(lam (fn_2 (fn_3 $0 _q) _i _y))",
        "(lam (fn_2 (fn_3 $0 _v) _i _y))",
        "(lam (fn_2 (fn_3 $0 _f) _i _y))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (fn_1 (fn_4 $0 (lam $0)) _e _k))",
        "(lam (fn_1 $0 _e (_rconcat _rempty _k)))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _e _k))",
        "(lam (fn_1 (_rflatten (_rsplit _i $0)) _e _k))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (fn_4 (fn_1 $0 _e _x) (lam $0)))",
        "(lam (fn_7 (fn_1 $0 _e _rempty) _x))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _e _x))",
        "(lam (fn_4 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_4 $0 (lam (_rconcat (_rconcat _q $0) _rempty))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (fn_4 $0 (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (fn_1 $0 _rempty (_rconcat _j _o)))",
        "(lam (fn_7 (fn_1 $0 _o _rempty) _j))",
        "(lam (fn_7 (fn_1 $0 _rempty _o) _j))",
        "(lam (fn_1 $0 (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (fn_4 (fn_1 $0 _r _r) (lam $0)))",
        "(lam (fn_1 (fn_4 $0 (lam $0)) _r _r))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _r _r))",
        "(lam (fn_1 (_rflatten (_rsplit _i $0)) _r _r))",
        "(lam (fn_9 _i _rempty $0))",
        "(lam (fn_9 _rempty _i $0))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_4 (fn_0 $0 _i _t) (lam $0)))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _i _t))",
        "(lam (fn_9 _p _l $0))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 $0 (_rconcat _u _c) _a))",
        "(lam (fn_6 _a $0))",
        "(lam (fn_3 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _u $0))))",
        "(lam (fn_8 _u _d $0))",
        "(lam (fn_4 (fn_8 _u _d $0) (lam $0)))",
        "(lam (fn_8 _u _d (fn_4 $0 (lam $0))))",
        "(lam (fn_8 _u _d (_rflatten (_rsplit _rempty $0))))",
        "(lam (fn_8 (_rtail (map (lam _u) (_rsplit _rempty $0))) _d $0))",
        "(lam (fn_0 $0 (_rconcat _u _f) _g))",
        "(lam (fn_1 $0 _w _a))",
        "(lam (fn_1 $0 _rempty (_rconcat _a _w)))",
        "(lam (fn_1 $0 (_rconcat _a _w) _rempty))",
        "(lam (fn_7 (fn_1 $0 _rempty _w) _a))",
        "(lam (fn_7 (fn_1 $0 _w _rempty) _a))",
        "(lam (fn_0 $0 _h _s))",
        "(lam (fn_4 $0 (lam (if (_rmatch $0 _s) _h $0))))",
        "(lam (fn_6 _s $0))",
        "(lam (fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (fn_0 $0 (_rconcat _v _a) _r))",
        "(lam (fn_3 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _m $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (fn_8 _r _i $0))",
        "(lam (fn_4 (fn_8 _r _i $0) (lam $0)))",
        "(lam (fn_7 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _u $0))))",
        "(lam (fn_4 $0 (lam _l)))",
        "(lam (fn_4 $0 (lam (_rconcat _rempty _l))))",
        "(lam (fn_4 (fn_4 $0 (lam _n)) (lam _l)))",
        "(lam (fn_4 (fn_4 $0 (lam _f)) (lam _l)))",
        "(lam (fn_4 (_rflatten (_rsplit _i $0)) (lam _l)))",
        "(lam (fn_8 _a _r $0))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _b _k $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _b _k $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _b _k (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _b _k (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _b _k $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _rempty _k))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _k _rempty))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _rempty) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rsplit _rempty $0)) _o _u))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _c _d $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _c _d (_rflatten (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) (_ror _c _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) (_ror _c _c)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) (_ror _z _c)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _u) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _q) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _t) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _c) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _y) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _e (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _m $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _rdot))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _q _a) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _rempty) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (_rappend _o (_rrevcdr (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _g))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _rempty) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _r) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (car (_rappend _o (_rrevcdr (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _i))))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _v)) (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) (lambda (_rconcat _r _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _f)) (lambda (_rconcat _r _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _i $0)) (lambda (_rconcat _r _v))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _p _p $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _p _p (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _p _p $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _p (_rconcat _rempty _p) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _p _p (_rflatten (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _p))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _p))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _p))))",
        "(lambda (_rflatten (_rsplit _u (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _p))))",
        "(lambda (_rflatten (_rsplit _m (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _p))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _r _b $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2)))) _r _b $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _w _x $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _v _f $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _v _f $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _v _f (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _v _f (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _v _f $0) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _rempty) _rempty))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _n))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _f) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 (_rconcat _f _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _f) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _q)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _i) _d))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _d $0) (_rconcat $0 _i) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _i)) (lambda (_rconcat _n $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) (lambda (_rconcat $0 _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) (lambda (_rconcat _n _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _f)) (lambda (_rconcat _n _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _t) _rdot))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _t)) (lambda (_rconcat _w $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat _w _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l)) (lambda (_rconcat _w _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l (_rconcat _m _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _u) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _w) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _q) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _v) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _f) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _i $0)) _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _rempty) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat (_rconcat _q $0) _rempty))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (car (map (lambda (_rconcat _q $1)) (_rsplit _rdot $1))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (car (map (lambda (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _j _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _o) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _i $0)) _r _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _i _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _rempty _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) _i _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t)))) _p _l $0))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _a))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) $1 _e))) _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _u $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _u _d $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _u _d $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _u _d (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _u _d (_rflatten (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) (_rtail (map (lambda _u) (_rsplit _rempty $0))) _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _a _w) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _w) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _rempty) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _s) _h $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) $1 _e))) _s $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _a) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _m $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _r _i $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _r _i $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _u $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _rempty _l))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _f)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _i $0)) (lambda _l)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s)))) _a _r $0))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch #2 $0) #1 $0)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 15982,
            "final_cost": 28653,
            "compression_ratio": 1.401668237182843,
            "cumulative_compression_ratio": 1.401668237182843,
            "num_uses": 64,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _l (_rconcat _m _rempty)": "(_rflatten (map (lam (if (_rmatch (_rconcat _m _rempty) $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _rempty _m)": "(_rflatten (map (lam (if (_rmatch (_rconcat _rempty _m) $0) _rempty $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) (_ror _c _c)": "(_rflatten (map (lam (if (_rmatch (_ror _c _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) (_ror _c _rempty)": "(_rflatten (map (lam (if (_rmatch (_ror _c _rempty) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) (_ror _z _c)": "(_rflatten (map (lam (if (_rmatch (_ror _z _c) $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _c) _a": "(_rflatten (map (lam (if (_rmatch _a $0) (_rconcat _u _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (_rsplit _i $0))) (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot (_rflatten (cons _rempty (_rsplit _i $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) _c": "(_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _c) _c": "(_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _d _c) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _i) _d": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _i) _d": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _f) _g": "(_rflatten (map (lam (if (_rmatch _g $0) (_rconcat _u _f) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _n _k) _l": "(_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _l _rempty) _m": "(_rflatten (map (lam (if (_rmatch _m $0) (_rconcat _l _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _rempty) _m": "(_rflatten (map (lam (if (_rmatch _m $0) (_rconcat _rempty _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _l _m": "(_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _rempty _m": "(_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _n _e) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _n _e) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _rempty) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _q _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _q) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _rempty _q) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _q _n": "(_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _p) _p) _p": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty _p) _p) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p _p) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _r": "(_rflatten (map (lam (if (_rmatch _r $0) (_rconcat _b _r) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _a) _r": "(_rflatten (map (lam (if (_rmatch _r $0) (_rconcat _v _a) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _w _t) _rdot": "(_rflatten (map (lam (if (_rmatch _rdot $0) (_rconcat _w _t) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _j _rdot": "(_rflatten (map (lam (if (_rmatch _rdot $0) _j $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d (_rtail (map (lam _u) (_rsplit _rempty $0)))) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d (_rtail (map (lam _u) (_rsplit _rempty $1)))) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (_rconcat _d _u) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _r) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _a) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _h _s": "(_rflatten (map (lam (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _v) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _i $0))) (_rconcat _f _v) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _i $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (_rconcat _f _v) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _i _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _l _p) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _rempty _i) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _x _w) _t": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _x _w) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _i _t": "(_rflatten (map (lam (if (_rmatch _t $0) _i $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _t": "(_rflatten (map (lam (if (_rmatch _t $0) _i $0)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 7373,
            "final_cost": 23380,
            "compression_ratio": 1.2255346449957227,
            "cumulative_compression_ratio": 1.7177929854576561,
            "num_uses": 56,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _rempty (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _e (_rconcat _rempty _k)": "(_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _a (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rdot $0)))))))": "(_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rdot $0))))))) (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _r (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rdot $0)))))))": "(_rflatten (cons (car (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rdot $0))))))) (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))": "(_rflatten (cons (car (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) (cons _d (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rrevcdr (_rsplit _rempty $0)))": "(_rflatten (cons (car (_rrevcdr (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0)))))": "(_rflatten (cons (car (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0))))) (cons _d (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty _a": "(_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty _b": "(_rflatten (cons _b (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0))))) _a _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_1 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (cons _j (cons (_rtail (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _i $0)) _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 $0 _rempty _o": "(_rflatten (cons _o (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _q": "(_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _i $0)) _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 $0 _rempty _r": "(_rflatten (cons _r (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _w) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _b _rempty) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _q _a) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _e _rempty": "(_rflatten (cons _rempty (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _o _rempty": "(_rflatten (cons _rempty (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _r _rempty": "(_rflatten (cons _rempty (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2)))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 2424,
            "final_cost": 21513,
            "compression_ratio": 1.0867847348115094,
            "cumulative_compression_ratio": 1.8668711941616696,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 (_rflatten (_rappend _c (_rsplit _i $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _c (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _i $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rsplit _i $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rsplit _i $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _y (_rsplit _i $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 $0 _o _rempty": "(_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rsplit _i $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _i $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rsplit _i $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _v (_rsplit _i $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _i $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _w (_rsplit _i $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _i $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _i #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _i $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 1818,
            "final_cost": 20002,
            "compression_ratio": 1.0755424457554243,
            "cumulative_compression_ratio": 2.007899210078992,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _f _rempty)": "(_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _c": "(_rflatten (_rappend _c (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _f": "(_rflatten (_rappend _f (_rsplit _i $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _f": "(_rflatten (_rappend _f (_rsplit _i (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _p": "(_rflatten (_rappend _p (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _q": "(_rflatten (_rappend _q (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _i $0)))"
                },
                {
                    "fn_3 (fn_0 $0 _l _m) _rempty": "(_rflatten (_rappend _rempty (_rsplit _i (fn_0 $0 _l _m))))"
                },
                {
                    "fn_3 (fn_0 $0 _q _n) _rempty": "(_rflatten (_rappend _rempty (_rsplit _i (fn_0 $0 _q _n))))"
                },
                {
                    "fn_3 $0 _t": "(_rflatten (_rappend _t (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _u": "(_rflatten (_rappend _u (_rsplit _i $0)))"
                },
                {
                    "fn_3 (fn_2 $0 _o _rempty) _u": "(_rflatten (_rappend _u (_rsplit _i (fn_2 $0 _o _rempty))))"
                },
                {
                    "fn_3 $0 _v": "(_rflatten (_rappend _v (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _w": "(_rflatten (_rappend _w (_rsplit _i $0)))"
                },
                {
                    "fn_3 $0 _y": "(_rflatten (_rappend _y (_rsplit _i $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 1715,
            "final_cost": 19101,
            "compression_ratio": 1.047170305219622,
            "cumulative_compression_ratio": 2.1026124286686563,
            "num_uses": 71,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _b _r) _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _b _r) _r))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _d _u) _s) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _d _u) _s))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _f _v) _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _f _v) _t))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _i _r) _s) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _i _r) _s))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _k _b) _b) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _k _b) _b))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _p _p) _p) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _p _p) _p))))"
                },
                {
                    "fn_4 (fn_0 $0 (_rconcat _v _q) _l) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 (_rconcat _v _q) _l))))"
                },
                {
                    "fn_4 (fn_0 $0 _i _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _i _t))))"
                },
                {
                    "fn_4 (fn_0 $0 _l _m) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _l _m))))"
                },
                {
                    "fn_4 (fn_0 $0 _q _n) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _q _n))))"
                },
                {
                    "fn_4 (fn_0 $0 _rempty _m) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _rempty _m))))"
                },
                {
                    "fn_4 (fn_1 $0 _a _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_1 $0 _a _g))))"
                },
                {
                    "fn_4 (fn_1 $0 _e _x) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_1 $0 _e _x))))"
                },
                {
                    "fn_4 (fn_1 $0 _r _i) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_1 $0 _r _i))))"
                },
                {
                    "fn_4 (fn_1 $0 _r _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_1 $0 _r _r))))"
                },
                {
                    "fn_4 (fn_2 $0 _o _u) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_2 $0 _o _u))))"
                },
                {
                    "fn_4 (fn_3 $0 _f) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_3 $0 _f))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _n) (_rsplit _rdot $0))) (lam (_rconcat $0 _i))": "(_rflatten (map (lam (_rconcat $0 _i)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat (_rconcat _q $0) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _k _rempty))": "(_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam _i) (_rsplit _rdot $0))) (lam (_rconcat _n $0))": "(_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rdot (_rflatten (map (lam _i) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam _f) (_rsplit _rdot $0))) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _n) (_rsplit _rdot $0))) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam _v) (_rsplit _rdot $0))) (lam (_rconcat _r $0))": "(_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rdot (_rflatten (map (lam _v) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _i $0)) (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (_rsplit _i $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _f) (_rsplit _rdot $0))) (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _n) (_rsplit _rdot $0))) (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _rempty _k))": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _rempty _l))": "(_rflatten (map (lam (_rconcat _rempty _l)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam _t) (_rsplit _rdot $0))) (lam (_rconcat _w $0))": "(_rflatten (map (lam (_rconcat _w $0)) (_rsplit _rdot (_rflatten (map (lam _t) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _l) (_rsplit _rdot $0))) (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam (if (_rmatch $0 _s) _h $0))": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0))": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _f)": "(_rflatten (map (lam _f) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _g)": "(_rflatten (map (lam _g) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _i)": "(_rflatten (map (lam _i) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _l) (_rsplit _rdot $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _i $0)) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (_rsplit _i $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _f) (_rsplit _rdot $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _n) (_rsplit _rdot $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 (lam _n)": "(_rflatten (map (lam _n) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _t)": "(_rflatten (map (lam _t) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 (lam _v)": "(_rflatten (map (lam _v) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat #1 #0) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) $2))))",
            "arity": 3,
            "name": "fn_5",
            "utility": 808,
            "final_cost": 18493,
            "compression_ratio": 1.0328773049261883,
            "cumulative_compression_ratio": 2.1717406586275887,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 _p (_rconcat _rempty _p) $0": "(fn_0 $0 (_rconcat (_rconcat _rempty _p) _p) _p)"
                },
                {
                    "fn_5 _r _b $0": "(fn_0 $0 (_rconcat _b _r) _r)"
                },
                {
                    "fn_5 _c _d $0": "(fn_0 $0 (_rconcat _d _c) _c)"
                },
                {
                    "fn_5 _b _k $0": "(fn_0 $0 (_rconcat _k _b) _b)"
                },
                {
                    "fn_5 _p _p $0": "(fn_0 $0 (_rconcat _p _p) _p)"
                },
                {
                    "fn_5 _c _d (_rflatten (_rsplit _rempty $0))": "(fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _c) _c)"
                },
                {
                    "fn_5 _p _p (_rflatten (_rsplit _rempty $0))": "(fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _p) _p)"
                },
                {
                    "fn_5 _b _k (_rflatten (cons _rempty (_rsplit _i $0)))": "(fn_0 (_rflatten (cons _rempty (_rsplit _i $0))) (_rconcat _k _b) _b)"
                },
                {
                    "fn_5 _b _k (fn_4 $0 (lam $0))": "(fn_0 (fn_4 $0 (lam $0)) (_rconcat _k _b) _b)"
                },
                {
                    "fn_5 _p _p (fn_4 $0 (lam $0))": "(fn_0 (fn_4 $0 (lam $0)) (_rconcat _p _p) _p)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 (fn_1 #1 _rempty _rempty) #0 _e)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) $1 _e)))",
            "arity": 2,
            "name": "fn_6",
            "utility": 808,
            "final_cost": 17873,
            "compression_ratio": 1.0346891959939573,
            "cumulative_compression_ratio": 2.2470765959827674,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _a $0": "(fn_1 (fn_1 $0 _rempty _rempty) _a _e)"
                },
                {
                    "fn_6 _s $0": "(fn_1 (fn_1 $0 _rempty _rempty) _s _e)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _i #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _i $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 606,
            "final_cost": 17453,
            "compression_ratio": 1.0240646307225119,
            "cumulative_compression_ratio": 2.3011516644702916,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _a": "(_rflatten (cons _a (_rsplit _i $0)))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _w) _a": "(_rflatten (cons _a (_rsplit _i (fn_1 $0 _rempty _w))))"
                },
                {
                    "fn_7 (fn_1 $0 _w _rempty) _a": "(_rflatten (cons _a (_rsplit _i (fn_1 $0 _w _rempty))))"
                },
                {
                    "fn_7 (fn_1 $0 _a _rempty) _g": "(_rflatten (cons _g (_rsplit _i (fn_1 $0 _a _rempty))))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _a) _g": "(_rflatten (cons _g (_rsplit _i (fn_1 $0 _rempty _a))))"
                },
                {
                    "fn_7 (fn_1 $0 _r _rempty) _i": "(_rflatten (cons _i (_rsplit _i (fn_1 $0 _r _rempty))))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _r) _i": "(_rflatten (cons _i (_rsplit _i (fn_1 $0 _rempty _r))))"
                },
                {
                    "fn_7 $0 _j": "(_rflatten (cons _j (_rsplit _i $0)))"
                },
                {
                    "fn_7 (fn_1 $0 _o _rempty) _j": "(_rflatten (cons _j (_rsplit _i (fn_1 $0 _o _rempty))))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _o) _j": "(_rflatten (cons _j (_rsplit _i (fn_1 $0 _rempty _o))))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _a) _q": "(_rflatten (cons _q (_rsplit _i (fn_1 $0 _rempty _a))))"
                },
                {
                    "fn_7 $0 _rempty": "(_rflatten (cons _rempty (_rsplit _i $0)))"
                },
                {
                    "fn_7 (fn_0 $0 (_rconcat _f _v) _t) _rempty": "(_rflatten (cons _rempty (_rsplit _i (fn_0 $0 (_rconcat _f _v) _t))))"
                },
                {
                    "fn_7 (fn_3 $0 _f) _rempty": "(_rflatten (cons _rempty (_rsplit _i (fn_3 $0 _f))))"
                },
                {
                    "fn_7 (fn_4 $0 (lam _j)) _rempty": "(_rflatten (cons _rempty (_rsplit _i (fn_4 $0 (lam _j)))))"
                },
                {
                    "fn_7 (fn_1 $0 _e _rempty) _x": "(_rflatten (cons _x (_rsplit _i (fn_1 $0 _e _rempty))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat #1 #0) _s)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _s))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 606,
            "final_cost": 17089,
            "compression_ratio": 1.0213002516238516,
            "cumulative_compression_ratio": 2.3501667739481538,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 (_rtail (map (lam _u) (_rsplit _rempty $0))) _d $0": "(fn_0 $0 (_rconcat _d (_rtail (map (lam _u) (_rsplit _rempty $0)))) _s)"
                },
                {
                    "fn_8 _u _d $0": "(fn_0 $0 (_rconcat _d _u) _s)"
                },
                {
                    "fn_8 _r _i $0": "(fn_0 $0 (_rconcat _i _r) _s)"
                },
                {
                    "fn_8 _a _r $0": "(fn_0 $0 (_rconcat _r _a) _s)"
                },
                {
                    "fn_8 _u _d (_rflatten (_rsplit _rempty $0))": "(fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _d _u) _s)"
                },
                {
                    "fn_8 _u _d (fn_4 $0 (lam $0))": "(fn_0 (fn_4 $0 (lam $0)) (_rconcat _d _u) _s)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat #1 #0) _t)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat $1 $2) _t))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 606,
            "final_cost": 16725,
            "compression_ratio": 1.021763826606876,
            "cumulative_compression_ratio": 2.4013153961136022,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _v _f $0": "(fn_0 $0 (_rconcat _f _v) _t)"
                },
                {
                    "fn_9 _rempty _i $0": "(fn_0 $0 (_rconcat _i _rempty) _t)"
                },
                {
                    "fn_9 _p _l $0": "(fn_0 $0 (_rconcat _l _p) _t)"
                },
                {
                    "fn_9 _i _rempty $0": "(fn_0 $0 (_rconcat _rempty _i) _t)"
                },
                {
                    "fn_9 _w _x $0": "(fn_0 $0 (_rconcat _x _w) _t)"
                },
                {
                    "fn_9 _v _f (fn_3 $0 _rempty)": "(fn_0 (fn_3 $0 _rempty) (_rconcat _f _v) _t)"
                },
                {
                    "fn_9 _v _f (fn_4 $0 (lam $0))": "(fn_0 (fn_4 $0 (lam $0)) (_rconcat _f _v) _t)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}