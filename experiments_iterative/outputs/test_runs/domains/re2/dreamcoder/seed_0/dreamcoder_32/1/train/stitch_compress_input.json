{
    "DSL": {
        "logVariable": -0.5537276453102002,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -1.1394342831883653
            },
            {
                "expression": "_rempty",
                "logProbability": -1.30195321268614
            },
            {
                "expression": "_a",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_b",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_c",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_d",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_e",
                "logProbability": -1.1394342831883653
            },
            {
                "expression": "_f",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_g",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_h",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_i",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_j",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_k",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_l",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_m",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_n",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_o",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_p",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_q",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_r",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_s",
                "logProbability": -1.362577834502575
            },
            {
                "expression": "_t",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_u",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_v",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_w",
                "logProbability": -1.272965675812888
            },
            {
                "expression": "_x",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_y",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_z",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_rnot",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_ror",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_rconcat",
                "logProbability": -1.090644119018933
            },
            {
                "expression": "_rmatch",
                "logProbability": 0.0
            },
            {
                "expression": "_rsplit",
                "logProbability": -0.5596157879354222
            },
            {
                "expression": "_rflatten",
                "logProbability": -1.0986122886681096
            },
            {
                "expression": "_rtail",
                "logProbability": -1.427116355640146
            },
            {
                "expression": "_rappend",
                "logProbability": -0.9162907318741551
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -0.8873031950009032
            },
            {
                "expression": "if",
                "logProbability": -2.047692843365256
            },
            {
                "expression": "cons",
                "logProbability": -0.8591323180342068
            },
            {
                "expression": "car",
                "logProbability": -2.047692843365256
            },
            {
                "expression": "cdr",
                "logProbability": -0.805065096763931
            },
            {
                "expression": "map",
                "logProbability": -0.9162907318741551
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cons _rempty (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _m $0))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_118_if_there_is_l_replace_that_with_n_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r $0)) (_rsplit _rdot (_rflatten (map (lambda _v) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_199_if_there_is_d_add_i_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_223_if_there_is_any_letter_replace_that_with_n_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n $0)) (_rsplit _rdot (_rflatten (map (lambda _i) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _i)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_280_if_there_is_any_letter_add_q_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (car (map (lambda (_rconcat _q $1)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (car (map (lambda (_rsplit _rdot $1)) (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rdot (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rdot $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_330_if_there_is_t_replace_that_with_l_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _u $0))))"
                }
            ]
        },
        {
            "task": "re2_train_397_if_there_is_s_replace_that_with_h",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _m $0))))"
                }
            ]
        },
        {
            "task": "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _u $0))))"
                }
            ]
        },
        {
            "task": "re2_train_490_if_there_is_any_letter_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (_rsplit _i $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (map (lambda _f) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot (_rflatten (map (lambda _n) (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _l)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_493_if_there_is_s_replace_that_with_r_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _rdot $0))))"
                }
            ]
        }
    ]
}