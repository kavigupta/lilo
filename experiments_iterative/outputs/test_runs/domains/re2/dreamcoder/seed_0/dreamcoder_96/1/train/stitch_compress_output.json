{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 41274,
    "final_cost": 19249,
    "compression_ratio": 2.1442152839108526,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _p) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _l (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _b (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _z (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _c (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rsplit _c $0))))))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _o $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _rempty (_rsplit _e (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rsplit _t $0))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rappend _p (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _g) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _p (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (_rsplit _w $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _e (_rflatten (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cdr (_rsplit _rempty (_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _rempty $0) _n) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _q _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _g $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _n _e) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _k (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _g (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _b (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _c (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rsplit _c $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rtail (_rappend _q (_rsplit _rempty $1))) $0)) (_rsplit _rempty $0))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _e (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _j (_rsplit _e (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0))))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty (_rflatten (_rsplit _z $0))))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _j (_rsplit _c $0)))))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _j (_rsplit _c $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _j _rempty) _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _e (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _a _rempty) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _b (_rsplit _e $0))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _b (_rsplit _e $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _rdot (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _j (_rsplit _e $0))))))))))"
    ],
    "rewritten": [
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _d) _y $0))))",
        "(lam (fn_0 $0 _y _d))",
        "(lam (fn_3 $0 (lam _k)))",
        "(lam (fn_8 $0 _rempty _k))",
        "(lam (fn_3 (fn_3 $0 (lam _k)) (lam _k)))",
        "(lam (fn_3 (fn_3 $0 (lam _p)) (lam _k)))",
        "(lam (fn_3 (fn_6 (cdr (_rsplit _rempty $0)) _o _k) (lam _k)))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (fn_2 $0 _rempty _r))",
        "(lam (fn_9 _r _rempty (fn_4 $0 _l)))",
        "(lam (fn_9 _r _rempty (fn_4 $0 _b)))",
        "(lam (fn_9 _r _rempty (fn_4 $0 _z)))",
        "(lam (fn_9 _u _o $0))",
        "(lam (fn_6 (_rrevcdr (_rsplit _rdot $0)) _o _u))",
        "(lam (fn_6 (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lam (fn_6 (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_9 _m _t (fn_4 $0 _o)))",
        "(lam (fn_2 $0 _t _m))",
        "(lam (fn_9 _m _t (fn_4 $0 _d)))",
        "(lam (fn_9 _m _t (fn_4 $0 _c)))",
        "(lam (fn_9 _m _t (fn_4 $0 _m)))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (fn_1 $0 _e _e))))))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_7 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _o $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (fn_3 $0 (lam _j)))",
        "(lam (fn_7 (fn_3 $0 (lam _j)) _rempty))",
        "(lam (fn_3 (fn_3 $0 (lam _j)) (lam _j)))",
        "(lam (fn_3 (_rflatten (_rsplit _t $0)) (lam _j)))",
        "(lam (fn_3 (fn_9 _p _p $0) (lam _j)))",
        "(lam (fn_1 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (fn_1 $0 _i _i))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_1 $0 _a _q))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _a _q))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _q))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _a _q))",
        "(lam (fn_1 (_rflatten (_rsplit _r $0)) _a _q))",
        "(lam (fn_1 $0 _a _g))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _g))",
        "(lam (fn_1 $0 _a (_rconcat _rempty _g)))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _a _g))",
        "(lam (fn_1 (_rflatten (_rsplit _r $0)) _a _g))",
        "(lam (fn_1 $0 _r _i))",
        "(lam (fn_1 $0 _r (_rconcat _i _rempty)))",
        "(lam (fn_1 $0 _r (_rconcat _rempty _i)))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _r _i))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _r _i))))",
        "(lam (fn_8 $0 _v _r))",
        "(lam (fn_3 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (car (map (lam (fn_8 $1 _v _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (fn_9 _t _d $0))",
        "(lam (fn_6 (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _d _t))",
        "(lam (fn_4 $0 _p))",
        "(lam (fn_4 (fn_3 $0 (lam $0)) _p))",
        "(lam (fn_3 (fn_4 $0 _p) (lam $0)))",
        "(lam (fn_4 (fn_4 $0 _rempty) _p))",
        "(lam (fn_4 (_rflatten (_rsplit _w $0)) _p))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_0 $0 (_rconcat _v _q) _l))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 _b _rempty))",
        "(lam (fn_1 $0 _rempty _b))",
        "(lam (fn_7 (_rflatten (cdr (_rsplit _rempty $0))) _b))",
        "(lam (_rflatten (cdr (_rsplit _rempty (fn_1 $0 _b _w)))))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _n) _q $0))))",
        "(lam (fn_0 $0 _q _n))",
        "(lam (fn_3 $0 (lam (if (_rmatch (_rconcat _rempty $0) _n) _q $0))))",
        "(lam (fn_0 $0 (_rconcat _q _rempty) _n))",
        "(lam (fn_3 $0 (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0))))",
        "(lam (fn_4 $0 _f))",
        "(lam (fn_4 (fn_3 $0 (lam $0)) _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _g $0))))",
        "(lam (fn_3 $0 (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0))))",
        "(lam (fn_0 $0 (_rconcat _n _e) _n))",
        "(lam (fn_8 $0 _i _n))",
        "(lam (fn_3 $0 (lam (_rconcat _n _i))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _k (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lam (fn_8 $0 _t _w))",
        "(lam (fn_3 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _m) _l $0))))",
        "(lam (fn_0 $0 _l _m))",
        "(lam (_rflatten (_rsplit _g (fn_0 $0 _l _m))))",
        "(lam (fn_9 _y _i (fn_4 $0 _o)))",
        "(lam (fn_2 $0 _i _y))",
        "(lam (fn_9 _y _i (fn_4 $0 _b)))",
        "(lam (fn_9 _y _i (fn_4 $0 _c)))",
        "(lam (fn_9 _y _i (fn_4 $0 _y)))",
        "(lam (fn_3 $0 (lam (if (_rmatch _c $0) (_rconcat _u $0) $0))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rempty (fn_1 $0 _e _e))))))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (fn_1 $0 _e _e))))))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_3 $0 (lam (_rconcat _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rtail (_rappend _q (_rsplit _rempty $1))) $0)) (_rsplit _rempty $0))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (fn_7 (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j))",
        "(lam (fn_7 (fn_1 $0 _o _rempty) _j))",
        "(lam (fn_1 (_rflatten (_rsplit _r $0)) _o _j))",
        "(lam (fn_1 (_rflatten (_rsplit _z $0)) _o _j))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (fn_4 $0 _j)))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (fn_4 $0 _j)))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_6 (_rsplit _rempty $0) _o _g))",
        "(lam (fn_6 (_rsplit _rdot $0) _o _g))",
        "(lam (fn_6 (_rappend _g (_rrevcdr (_rsplit _rempty $0))) _o _g))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (fn_5 $0 _a))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _a))",
        "(lam (fn_3 (fn_5 $0 _a) (lam $0)))",
        "(lam (fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty (fn_1 $0 _e _e))))) _a))",
        "(lam (fn_5 (_rflatten (_rsplit _rempty $0)) _a))",
        "(lam (fn_4 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (fn_8 $0 _u _j))",
        "(lam (fn_8 $0 _u (_rconcat _j _rempty)))",
        "(lam (fn_8 (fn_3 $0 (lam _u)) _u _j))",
        "(lam (fn_8 (fn_9 _u _o $0) _u _j))",
        "(lam (fn_8 (fn_9 _u _p $0) _u _j))",
        "(lam (fn_1 $0 _w _a))",
        "(lam (fn_7 (fn_1 $0 _rempty _w) _a))",
        "(lam (fn_1 $0 _w (_rconcat _a _rempty)))",
        "(lam (fn_1 $0 (_rconcat _w _rempty) _a))",
        "(lam (fn_1 $0 _w (_rconcat _rempty _a)))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _s) _h $0))))",
        "(lam (fn_0 $0 _h _s))",
        "(lam (fn_5 $0 _s))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (fn_5 $0 _s))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_4 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (fn_0 $0 (_rconcat _i _r) _s))",
        "(lam (fn_7 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (_rsplit _rempty (fn_7 $0 _b))))",
        "(lam (_rflatten (_rsplit _r (fn_7 $0 _b))))",
        "(lam (fn_7 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (fn_3 $0 (lam _l)))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (fn_6 (_rsplit _rempty $0) _o _j))",
        "(lam (fn_6 (_rsplit _rdot $0) _o _j))",
        "(lam (fn_6 (cdr (_rsplit _rempty (fn_7 $0 _rdot))) _o _j))",
        "(lam (fn_6 (cdr (_rsplit _rempty (fn_7 $0 _i))) _o _j))",
        "(lam (fn_6 (cdr (_rsplit _rempty (fn_7 $0 _j))) _o _j))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _d) _y $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _k))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rempty $0)) _o _k) (lambda _k)))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $2)))))))))))) $0 _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _r _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _l)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _r _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _b)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _r _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _z)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lambda (_rflatten (_rappend _u (_rrevcdr (_rappend _o (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $2)))))))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _c)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _m)))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _o $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _t $0)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _p _p $0) (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _w (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _i))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _r $0)) _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a (_rconcat _rempty _g)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _r $0)) _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _r _i))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lambda (car (map (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $1 _v _r)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _t _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lambda (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _d _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (_rflatten (_rsplit _w $0)) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) (_rflatten (cdr (_rsplit _rempty $0))) _b))",
        "(lambda (_rflatten (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _w)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _n) _q $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch (_rconcat _rempty $0) _n) _q $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _n (_rconcat _rempty $0)) _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _w $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _g $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _n $0) (_rconcat $0 _e) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _k (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (map (lambda (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _m) _l $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))",
        "(lambda (_rflatten (_rsplit _g (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $2)))))))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _b)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _c)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _y)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _c $0) (_rconcat _u $0) $0))))",
        "(lambda (_rflatten (cons _k (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _x (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat (_rtail (_rappend _q (_rsplit _rempty $1))) $0)) (_rsplit _rempty $0))))",
        "(lambda (car (map (lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _rempty) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _r $0)) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _z $0)) _o _j))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _j)))",
        "(lambda (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _r (cons _r (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rempty $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rappend _g (_rrevcdr (_rsplit _rempty $0))) _o _g))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _a))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _a) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (_rflatten (_rsplit _rempty $0)) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _u (_rconcat _j _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _u)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _u _o $0) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2)))) _u _p $0) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _w) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _a _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _w _rempty) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _rempty _a)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _s) _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _r) _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _r $0))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _b))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l)))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _b) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rempty $0) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _rdot))) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _i))) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1))))) $0 _j))) _o _j))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch #2 $0) #1 $0)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 5664,
            "final_cost": 35654,
            "compression_ratio": 1.157626072810905,
            "cumulative_compression_ratio": 1.157626072810905,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _u #0) _c": "(_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _y _d": "(_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _l _m": "(_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _e) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _n _e) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _n _e) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _rempty) _n": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat _q _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _q _n": "(_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _i _r) _s": "(_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_0 $0 _h _s": "(_rflatten (map (lam (if (_rmatch _s $0) _h $0)) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 5353,
            "final_cost": 30402,
            "compression_ratio": 1.1727517926452207,
            "cumulative_compression_ratio": 1.3576080521018354,
            "num_uses": 37,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _w (_rconcat _a _rempty)": "(_rflatten (cons (_rconcat _a _rempty) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w (_rconcat _rempty _a)": "(_rflatten (cons (_rconcat _rempty _a) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a (_rconcat _rempty _g)": "(_rflatten (cons (_rconcat _rempty _g) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat _rempty _i) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _w _rempty) _a": "(_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _b": "(_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _g": "(_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _r $0)) _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _i _i": "(_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _r $0)) _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _z $0)) _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty (_rflatten (_rsplit _z $0)))))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _q": "(_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _r $0)) _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _rempty": "(_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _w": "(_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c #0)))))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $2))))))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 2525,
            "final_cost": 27877,
            "compression_ratio": 1.0905764608817305,
            "cumulative_compression_ratio": 1.4805753847257597,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0)))))))))"
                },
                {
                    "fn_2 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0)))))))))"
                },
                {
                    "fn_2 $0 _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 2424,
            "final_cost": 25502,
            "compression_ratio": 1.0931299505921104,
            "cumulative_compression_ratio": 1.6184612971531644,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _p (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _p (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _d) _y $0))": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _m) _l $0))": "(_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _n) _q $0))": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _s) _h $0))": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch (_rconcat _rempty $0) _n) _q $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _rempty $0) _n) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch _c $0) (_rconcat _u $0) $0))": "(_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0))": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0))": "(_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _p (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rappend _p (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _t $0)) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (_rsplit _t $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _j) (_rsplit _rdot $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rempty $0)))))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _p) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _p) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam _u)": "(_rflatten (map (lam _u) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 1515,
            "final_cost": 23995,
            "compression_ratio": 1.0628047509897895,
            "cumulative_compression_ratio": 1.7201083559074808,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _b": "(_rflatten (_rappend _b (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _c": "(_rflatten (_rappend _c (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _f": "(_rflatten (_rappend _f (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_3 $0 (lam $0)) _f": "(_rflatten (_rappend _f (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_4 $0 _j": "(_rflatten (_rappend _j (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _l": "(_rflatten (_rappend _l (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _m": "(_rflatten (_rappend _m (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _o": "(_rflatten (_rappend _o (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _p": "(_rflatten (_rappend _p (_rsplit _c $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _rempty (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _w $0)) _p": "(_rflatten (_rappend _p (_rsplit _c (_rflatten (_rsplit _w $0)))))"
                },
                {
                    "fn_4 (fn_3 $0 (lam $0)) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_4 $0 _q": "(_rflatten (_rappend _q (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _u": "(_rflatten (_rappend _u (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _y": "(_rflatten (_rappend _y (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _z": "(_rflatten (_rappend _z (_rsplit _c $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _e (cons #1 (cdr (cdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1))))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1414,
            "final_cost": 22616,
            "compression_ratio": 1.0609745313052705,
            "cumulative_compression_ratio": 1.8249911567032189,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rempty $0)) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty (fn_1 $0 _e _e))))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty (fn_1 $0 _e _e)))))))))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (fn_3 $0 (lam $0))))))))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2)))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1212,
            "final_cost": 21434,
            "compression_ratio": 1.055146029672483,
            "cumulative_compression_ratio": 1.9256321731827937,
            "num_uses": 30,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 (_rappend _g (_rrevcdr (_rsplit _rempty $0))) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_6 (_rsplit _rdot $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (_rsplit _rempty $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rsplit _rdot $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (_rsplit _rempty $0) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty (_rflatten (cons _i (_rsplit _e $0))))) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _i (_rsplit _e $0)))))))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty (_rflatten (cons _j (_rsplit _e $0))))) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _j (_rsplit _e $0)))))))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty (_rflatten (cons _rdot (_rsplit _e $0))))) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (cdr (_rsplit _rempty (_rflatten (cons _rdot (_rsplit _e $0)))))))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty $0)) _o _k": "(_rflatten (_rappend _k (_rappend _o (_rrevcdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _c))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _c)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _d))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _d)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _m))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _m)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _o))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _o)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _p": "(_rflatten (_rappend _p (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _b))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _b)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _l))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _l)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _z))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _z)))))))"
                },
                {
                    "fn_6 (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rdot $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rdot $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _u": "(_rflatten (_rappend _u (_rappend _p (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _b))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _b)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _c))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _c)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _o))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _o)))))))"
                },
                {
                    "fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _y))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _y)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _e #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _e $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 909,
            "final_cost": 20533,
            "compression_ratio": 1.0438805824769883,
            "cumulative_compression_ratio": 2.0101300345784834,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _a": "(_rflatten (cons _a (_rsplit _e $0)))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _w) _a": "(_rflatten (cons _a (_rsplit _e (fn_1 $0 _rempty _w))))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _e $0)))"
                },
                {
                    "fn_7 (_rflatten (cdr (_rsplit _rempty $0))) _b": "(_rflatten (cons _b (_rsplit _e (_rflatten (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 $0 _i": "(_rflatten (cons _i (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _j": "(_rflatten (cons _j (_rsplit _e $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j": "(_rflatten (cons _j (_rsplit _e (_rflatten (cons _o (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_7 (fn_1 $0 _o _rempty) _j": "(_rflatten (cons _j (_rsplit _e (fn_1 $0 _o _rempty))))"
                },
                {
                    "fn_7 $0 _rdot": "(_rflatten (cons _rdot (_rsplit _e $0)))"
                },
                {
                    "fn_7 (fn_3 $0 (lam _j)) _rempty": "(_rflatten (cons _rempty (_rsplit _e (fn_3 $0 (lam _j)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 711,
            "final_cost": 19836,
            "compression_ratio": 1.035138132688042,
            "cumulative_compression_ratio": 2.0807622504537204,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _u (_rconcat _j _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _j _rempty) _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 #0 (_rtail (_rappend _q (_rsplit _rempty $0)))": "(_rflatten (map (lam (_rconcat (_rtail (_rappend _q (_rsplit _rempty $1))) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 (fn_3 $0 (lam _u)) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (fn_3 $0 (lam _u)))))"
                },
                {
                    "fn_8 (fn_6 (_rrevcdr (_rsplit _rempty $0)) _o _u) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (fn_6 (_rrevcdr (_rsplit _rempty $0)) _o _u))))"
                },
                {
                    "fn_8 (fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _u) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty (fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _u))))"
                },
                {
                    "fn_8 $0 _rempty _k": "(_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 #0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $1 #0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_8 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $1 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_8 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_6 (_rrevcdr (_rsplit _rempty #2)) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rempty $0)) $1 $2))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 606,
            "final_cost": 19249,
            "compression_ratio": 1.03049509065406,
            "cumulative_compression_ratio": 2.1442152839108526,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _t _d $0": "(fn_6 (_rrevcdr (_rsplit _rempty $0)) _d _t)"
                },
                {
                    "fn_9 _u _o $0": "(fn_6 (_rrevcdr (_rsplit _rempty $0)) _o _u)"
                },
                {
                    "fn_9 _p _p $0": "(fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _p)"
                },
                {
                    "fn_9 _u _p $0": "(fn_6 (_rrevcdr (_rsplit _rempty $0)) _p _u)"
                },
                {
                    "fn_9 _y _i (fn_4 $0 _b)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _b))) _i _y)"
                },
                {
                    "fn_9 _r _rempty (fn_4 $0 _b)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _b))) _rempty _r)"
                },
                {
                    "fn_9 _y _i (fn_4 $0 _c)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _c))) _i _y)"
                },
                {
                    "fn_9 _m _t (fn_4 $0 _c)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _c))) _t _m)"
                },
                {
                    "fn_9 _m _t (fn_4 $0 _d)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _d))) _t _m)"
                },
                {
                    "fn_9 _r _rempty (fn_4 $0 _l)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _l))) _rempty _r)"
                },
                {
                    "fn_9 _m _t (fn_4 $0 _m)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _m))) _t _m)"
                },
                {
                    "fn_9 _y _i (fn_4 $0 _o)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _o))) _i _y)"
                },
                {
                    "fn_9 _m _t (fn_4 $0 _o)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _o))) _t _m)"
                },
                {
                    "fn_9 _y _i (fn_4 $0 _y)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _y))) _i _y)"
                },
                {
                    "fn_9 _r _rempty (fn_4 $0 _z)": "(fn_6 (_rrevcdr (_rsplit _rempty (fn_4 $0 _z))) _rempty _r)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}