{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 222 333 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 57660,
    "final_cost": 27219,
    "compression_ratio": 2.118373195194533,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _d (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _q _rempty) _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot (car (map (lam $1) (_rsplit _rdot $0)))))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _j (car (_rsplit _rempty $0))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j (car (_rsplit _rdot $0))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j (car (_rrevcdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j (car (_rrevcdr (_rsplit _rdot $0)))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j (car (_rsplit (_rnot _e) $0))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rsplit _o (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _u (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _y) _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rdot (_rflatten (map (lam _p) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _b $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _o $0))))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0)))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rdot $0))) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rdot _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _c _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _f _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _b (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _k (_rconcat _rempty _e)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _k _rempty) _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _k) _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _m) _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (_rsplit _b (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _m (_rsplit _j (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _b) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _q) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _o (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _rempty _i)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _q) _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _s (cons _s (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _l (_rconcat $0 _rempty))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rsplit _o (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rsplit _h (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rsplit _b (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _s (_rappend (_rconcat _rempty _x) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _s $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _g $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _b $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _w $0))))))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _a _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_8 $0 (_rconcat _n _a)))",
        "(lam (fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n))",
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_6 _k _rempty $0))",
        "(lam (fn_1 (fn_8 $0 _d) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam _k)))",
        "(lam (fn_3 $0 _r))",
        "(lam (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 (_rflatten (_rsplit _b $0)) _r))",
        "(lam (_rflatten (_rsplit _b (fn_3 $0 _r))))",
        "(lam (fn_3 (_rflatten (_rsplit _rdot $0)) _r))",
        "(lam (fn_4 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_5 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_6 _j _q $0))",
        "(lam (fn_6 _j _q $0))",
        "(lam (fn_6 _j (_rconcat _q _rempty) $0))",
        "(lam (fn_3 (fn_6 _j _q $0) _j))",
        "(lam (fn_6 _j _q (fn_1 $0 (lam _j))))",
        "(lam (fn_1 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v))))",
        "(lam (car (map (lam (fn_1 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lam (fn_1 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lam (fn_3 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 (car (_rsplit _rempty $0)) _j))",
        "(lam (fn_0 $0 (car (_rsplit _rdot $0)) _j))",
        "(lam (fn_0 $0 (car (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_0 $0 (car (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lam (fn_0 $0 (car (_rsplit (_rnot _e) $0)) _j))",
        "(lam (fn_6 _s _h $0))",
        "(lam (fn_1 (fn_6 _s _h $0) (lam $0)))",
        "(lam (fn_6 _s _h (fn_5 $0 _rempty)))",
        "(lam (_rflatten (_rsplit _o (fn_6 _s _h $0))))",
        "(lam (_rflatten (_rsplit _u (fn_6 _s _h $0))))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (fn_8 $0 (_rconcat _w _i)))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_2 _j _r $0))",
        "(lam (fn_2 _j _r (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_2 _j _r $0) (lam $0)))",
        "(lam (_rflatten (_rsplit _b (fn_2 _j _r $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_2 _j _r $0))))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_8 $0 (_rconcat _y _w)))",
        "(lam (fn_8 (fn_0 $0 _w _b) _y))",
        "(lam (fn_0 $0 _w (_rconcat _rempty _y)))",
        "(lam (fn_8 (fn_0 $0 _w _x) _y))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_8 $0 (_rconcat _q _a)))",
        "(lam (fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (fn_6 _p _rempty $0))",
        "(lam (fn_1 (fn_3 $0 _r) (lam _p)))",
        "(lam (fn_1 (fn_3 $0 _d) (lam _p)))",
        "(lam (fn_3 (fn_1 $0 (lam _p)) _p))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_8 $0 (_rconcat _i _r)))",
        "(lam (fn_0 (_rflatten (_rsplit _b $0)) _r _i))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _r _i))))",
        "(lam (fn_6 _v _r $0))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))))",
        "(lam (fn_4 $0 _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (fn_3 $0 _rempty)))))))",
        "(lam (fn_4 (_rflatten (_rsplit _b $0)) _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (fn_9 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _o $0))))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (fn_6 _n _f $0))",
        "(lam (fn_6 _n _f $0))",
        "(lam (fn_6 _n _f (fn_8 $0 _a)))",
        "(lam (fn_6 _n _f (fn_8 $0 _i)))",
        "(lam (fn_6 _n _f (fn_1 $0 (lam _l))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rdot $0))) _s) (fn_3 $0 _rempty) $0))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (fn_3 $0 _rempty) $0))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_2 (_rconcat _t _u) _e $0))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_8 $0 (_rconcat _r _m)))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _m _r))",
        "(lam (fn_0 (fn_8 $0 _b) _m _r))",
        "(lam (fn_0 (fn_8 $0 _i) _m _r))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_8 $0 (_rconcat _b _w)))",
        "(lam (fn_8 (fn_0 $0 _w _rdot) _b))",
        "(lam (fn_8 (fn_0 $0 _w _k) _b))",
        "(lam (fn_8 (fn_0 $0 _w _c) _b))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_8 $0 _f))",
        "(lam (fn_0 $0 _rempty _f))",
        "(lam (fn_8 $0 _f))",
        "(lam (fn_8 (fn_8 $0 _i) _f))",
        "(lam (_rflatten (_rsplit _rdot (fn_8 $0 _f))))",
        "(lam (fn_6 _t _w $0))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_5 (fn_3 $0 _i) _y))",
        "(lam (fn_3 $0 (_rconcat _i _y)))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (fn_3 $0 _v)))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (fn_3 $0 _o)))))))",
        "(lam (fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0))))",
        "(lam (fn_2 (_rconcat _u _c) _c $0))",
        "(lam (fn_6 _e _u $0))",
        "(lam (fn_3 (fn_6 _e _u $0) _e))",
        "(lam (fn_3 (fn_6 _e _u (fn_3 $0 _e)) _e))",
        "(lam (fn_3 (fn_6 _e _u (fn_7 $0)) _e))",
        "(lam (fn_3 (fn_6 _e _u (fn_4 $0 _e _e)) _e))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (fn_8 $0 (_rconcat _k _e)))",
        "(lam (fn_0 $0 (_rconcat _rempty _e) _k))",
        "(lam (fn_0 $0 _e (_rconcat _k _rempty)))",
        "(lam (fn_0 $0 _e (_rconcat _rempty _k)))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_8 (fn_0 $0 _e _w) _x))",
        "(lam (fn_0 (_rflatten (_rsplit _b $0)) _e _x))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _e _x))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_8 $0 (_rconcat _m _i)))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _m)))",
        "(lam (fn_9 (fn_8 $0 _i) _m))",
        "(lam (_rflatten (cons _m (_rsplit _j (fn_8 $0 _i)))))",
        "(lam (fn_1 $0 (lam (_rconcat _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_5 (fn_1 $0 (lam (_rconcat _q $0))) _rempty))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 (lam (_rconcat _q $0))))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_8 $0 (_rconcat _j _o)))",
        "(lam (fn_0 (_rflatten (_rsplit _b $0)) _o _j))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _o _j))))",
        "(lam (fn_6 _i _g $0))",
        "(lam (fn_6 _i (_rconcat _rempty _g) $0))",
        "(lam (fn_6 _i _g (fn_8 $0 _j)))",
        "(lam (fn_3 (fn_6 _i _g $0) _i))",
        "(lam (fn_6 _i _g (fn_3 $0 _i)))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 $0 (_rconcat _o _m)))",
        "(lam (fn_3 (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (fn_3 $0 _m)))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (fn_6 _x _h $0))",
        "(lam (fn_6 _x (_rconcat _rempty _h) $0))",
        "(lam (fn_6 _x _h (fn_1 $0 (lam _b))))",
        "(lam (fn_3 (fn_6 _x _h $0) _x))",
        "(lam (fn_6 _x _h (fn_1 $0 (lam _q))))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _r _r))",
        "(lam (fn_0 (fn_8 $0 _b) _r _r))",
        "(lam (fn_0 (fn_8 $0 _o) _r _r))",
        "(lam (_rflatten (_rsplit _b (fn_0 $0 _r _r))))",
        "(lam (fn_2 _c _g $0))",
        "(lam (_rflatten (_rsplit _rempty (fn_2 _c _g $0))))",
        "(lam (_rflatten (_rsplit _b (fn_2 _c _g $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_2 _c _g $0))))",
        "(lam (fn_8 $0 _i))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_8 (_rflatten (_rsplit _b $0)) _i))",
        "(lam (_rflatten (_rsplit _b (fn_8 $0 _i))))",
        "(lam (fn_8 (_rflatten (_rsplit _rdot $0)) _i))",
        "(lam (fn_7 $0))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_8 $0 (_rconcat _a _w)))",
        "(lam (fn_8 (fn_0 $0 _w _k) _a))",
        "(lam (fn_0 (fn_0 $0 _w _b) _a _rempty))",
        "(lam (fn_0 (fn_0 $0 _w _k) _a _rempty))",
        "(lam (fn_0 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 (_rconcat (car (_rsplit _rempty $0)) _o)))",
        "(lam (fn_8 $0 (_rconcat (car (_rsplit _rdot $0)) _o)))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_8 $0 (_rconcat _q _i)))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _i _q))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _q))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _q)))",
        "(lam (fn_4 $0 _j _rempty))",
        "(lam (fn_4 $0 _rempty _j))",
        "(lam (fn_3 (fn_3 $0 _rempty) _j))",
        "(lam (fn_3 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lam (fn_4 (fn_3 $0 _i) _rempty _j))",
        "(lam (fn_3 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_2 _k _t $0))",
        "(lam (fn_2 _k _t (fn_1 $0 (lam $0))))",
        "(lam (_rflatten (_rsplit _b (fn_2 _k _t $0))))",
        "(lam (fn_2 (_rconcat _k _rempty) _t $0))",
        "(lam (fn_2 (_rconcat _rempty _k) _t $0))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (fn_8 $0 (_rconcat _e _s)))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_8 (_rflatten (cons _s (cons _s (cdr (_rsplit _rdot $0))))) _e))",
        "(lam (fn_2 _v _i $0))",
        "(lam (fn_2 _v _i (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_2 _v _i $0) (lam $0)))",
        "(lam (fn_5 (fn_2 _v _i $0) _rempty))",
        "(lam (_rflatten (_rsplit _rdot (fn_2 _v _i $0))))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _l $0))))",
        "(lam (fn_1 (fn_1 $0 (lam (_rconcat _l $0))) (lam $0)))",
        "(lam (fn_1 $0 (lam (_rconcat _l (_rconcat $0 _rempty)))))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 (lam (_rconcat _l $0))))))",
        "(lam (fn_4 $0 _r _q))",
        "(lam (fn_5 (fn_4 $0 _r _rempty) _q))",
        "(lam (fn_5 (fn_4 $0 _rempty _r) _q))",
        "(lam (_rflatten (_rsplit _o (fn_4 $0 _r _q))))",
        "(lam (_rflatten (_rsplit _h (fn_4 $0 _r _q))))",
        "(lam (fn_4 $0 _b _j))",
        "(lam (fn_4 (fn_3 $0 _b) _b _j))",
        "(lam (fn_4 (fn_3 $0 _j) _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (fn_2 (_rconcat _n _m) _c $0))",
        "(lam (fn_6 _r _h $0))",
        "(lam (fn_6 _r _h (fn_1 $0 (lam $0))))",
        "(lam (fn_3 (fn_6 _r _h $0) _r))",
        "(lam (fn_6 _r _h (fn_3 $0 _r)))",
        "(lam (fn_6 _r _h (fn_1 $0 (lam _r))))",
        "(lam (fn_5 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_5 (fn_3 $0 _x) _s))",
        "(lam (fn_3 $0 (_rconcat _x _s)))",
        "(lam (_rflatten (_rappend _s (_rappend (_rconcat _rempty _x) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _s $0))))",
        "(lam (fn_8 $0 _a))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 (_rflatten (_rsplit _b $0)) _a _rempty))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lam (fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))))",
        "(lam (fn_2 (_rconcat _r _o) _o $0))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))))",
        "(lam (fn_1 (fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))) (lam $0)))",
        "(lam (_rflatten (_rsplit _b (fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (fn_9 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _g $0))))",
        "(lam (fn_2 _l _o $0))",
        "(lam (fn_2 _o _t $0))",
        "(lam (_rflatten (_rsplit _rempty (fn_2 _o _t $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (fn_8 (_rflatten (cons _v (_rsplit _rempty $0))) _b))",
        "(lam (fn_8 (fn_9 $0 _v) _b))",
        "(lam (fn_8 (_rflatten (cons _v (_rsplit _rdot $0))) _b))",
        "(lam (fn_8 (_rflatten (cons _v (_rsplit _w $0))) _b))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _k _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _d) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _b $0)) _r))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _o $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j (_rconcat _q _rempty) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (car (map (lambda $1) (_rsplit _rdot $0))) (lambda (_rconcat $0 _v))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (car (map (lambda (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (car (_rsplit _rempty $0)) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (car (_rsplit _rdot $0)) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (car (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (car (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (car (_rsplit (_rnot _e) $0)) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty)))",
        "(lambda (_rflatten (_rsplit _o (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))))",
        "(lambda (_rflatten (_rsplit _u (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _w _i)))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _j _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _j _r (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _j _r $0) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _j _r $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _j _r $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _y _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _x) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _q))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _d) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _b $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _v _r $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (_rflatten (_rsplit _b $0)) _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _b $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _o $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _j $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _l))))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rdot $0))) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _t _u) _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _rdot) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _k) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _c) _b))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i) _f))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _y))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _y)))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _v)))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o)))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _c) (_rconcat _u $0) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _u _c) _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0) _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _e)) _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))) $0)) _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _e _e)) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _k _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (_rconcat _rempty _e) _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e (_rconcat _k _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e (_rconcat _rempty _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _w) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _b $0)) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _m _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i) _m))",
        "(lambda (_rflatten (cons _m (_rsplit _j (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))) _rempty))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _j _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _b $0)) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i (_rconcat _rempty _g) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _m)))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (map (lambda $0) (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x (_rconcat _rempty _h) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _b))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0) _x))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _q))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _o) _r _r))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _c _g $0))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _c _g $0))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _c _g $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _c _g $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _b $0)) _i))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _i))",
        "(lambda (#(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))) $0))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (map (lambda $0) (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _k) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _k) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat (car (_rsplit _rempty $0)) _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat (car (_rsplit _rdot $0)) _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (_rconcat _rempty _i) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i (_rconcat _rempty _q)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _k _t $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _k _t (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _k _t $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _k _rempty) _t $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _rempty _k) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _e _s)))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _s (cons _s (cdr (_rsplit _rdot $0))))) _e))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _v _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _v _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _v _i $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _v _i $0) _rempty))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _v _i $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l (_rconcat $0 _rempty)))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _r) _q))",
        "(lambda (_rflatten (_rsplit _o (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _q))))",
        "(lambda (_rflatten (_rsplit _h (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _q))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _b) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j) _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _n _m) _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _r))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x) _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _s)))",
        "(lambda (_rflatten (_rappend _s (_rappend (_rconcat _rempty _x) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _o $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _s $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _b $0)) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) (_rconcat _r _o) _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0))) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0))))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _b $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _g $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _l _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _o _t $0))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0)))))) _o _t $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _v (_rsplit _rempty $0))) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _b $1))))) $0 _v) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _v (_rsplit _rdot $0))) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _v (_rsplit _w $0))) _b))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 9494,
            "final_cost": 48594,
            "compression_ratio": 1.186566242746018,
            "cumulative_compression_ratio": 1.186566242746018,
            "num_uses": 63,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _e (_rconcat _k _rempty)": "(_rflatten (cons (_rconcat (_rconcat _k _rempty) _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e (_rconcat _rempty _k)": "(_rflatten (cons (_rconcat (_rconcat _rempty _k) _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _m)": "(_rflatten (cons (_rconcat (_rconcat _rempty _m) _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _q)": "(_rflatten (cons (_rconcat (_rconcat _rempty _q) _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat (_rconcat _rempty _y) _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _c": "(_rflatten (cons (_rconcat _c _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _rempty _f": "(_rflatten (cons (_rconcat _f _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (car (_rrevcdr (_rsplit _rdot $0))) _j": "(_rflatten (cons (_rconcat _j (car (_rrevcdr (_rsplit _rdot $0)))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (car (_rrevcdr (_rsplit _rempty $0))) _j": "(_rflatten (cons (_rconcat _j (car (_rrevcdr (_rsplit _rempty $0)))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (car (_rsplit (_rnot _e) $0)) _j": "(_rflatten (cons (_rconcat _j (car (_rsplit (_rnot _e) $0))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (car (_rsplit _rdot $0)) _j": "(_rflatten (cons (_rconcat _j (car (_rsplit _rdot $0))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (car (_rsplit _rempty $0)) _j": "(_rflatten (cons (_rconcat _j (car (_rsplit _rempty $0))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _e) _k": "(_rflatten (cons (_rconcat _k (_rconcat _rempty _e)) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _k": "(_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _q": "(_rflatten (cons (_rconcat _q (_rconcat _rempty _i)) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 $0 _w _rdot": "(_rflatten (cons (_rconcat _rdot _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _k _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _w": "(_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _w _x": "(_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 7272,
            "final_cost": 41439,
            "compression_ratio": 1.1726634329979004,
            "cumulative_compression_ratio": 1.3914428436979658,
            "num_uses": 110,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))"
                },
                {
                    "fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot (car (map (lam $1) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _q _rempty) _j))": "(_rflatten (map (lam (_rconcat (_rconcat _q _rempty) _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _rempty _g) _i))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _x))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _l) (_rsplit _rdot $0))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (map (lam _l) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _r) (_rsplit _rdot $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _b $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _b $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _b) (_rsplit _rdot $0))) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _b) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _q) (_rsplit _rdot $0))) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _q) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l (_rconcat $0 _rempty)))": "(_rflatten (map (lam (_rconcat _l (_rconcat $0 _rempty))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _j) (_rsplit _rdot $0))) (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty _k))": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty _p))": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _g) _c $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _i) _v $0))": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (if (_rmatch $0 _i) _v $0))": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _o) _l $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _r) _j $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (if (_rmatch $0 _r) _j $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _t) _k $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (if (_rmatch $0 _t) _k $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _t) _o $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _b)": "(_rflatten (map (lam _b) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _d (cdr (_rsplit _rdot $0)))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _d (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 $0 (lam _q)": "(_rflatten (map (lam _q) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _r)": "(_rflatten (map (lam _r) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch $0 #1) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 $2) $3 $0))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 4050,
            "final_cost": 37415,
            "compression_ratio": 1.1075504476814113,
            "cumulative_compression_ratio": 1.5410931444607778,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 (_rconcat _n _m) _c $0": "(fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)))"
                },
                {
                    "fn_2 (_rconcat _u #0) _c $0": "(fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)))"
                },
                {
                    "fn_2 (_rconcat _u _c) _c $0": "(fn_1 $0 (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0)))"
                },
                {
                    "fn_2 (_rconcat _t _u) _e $0": "(fn_1 $0 (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)))"
                },
                {
                    "fn_2 _c _g $0": "(fn_1 $0 (lam (if (_rmatch $0 _g) _c $0)))"
                },
                {
                    "fn_2 _v _i $0": "(fn_1 $0 (lam (if (_rmatch $0 _i) _v $0)))"
                },
                {
                    "fn_2 (_rconcat _r #0) _o $0": "(fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_2 (_rconcat _r _o) _o $0": "(fn_1 $0 (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)))"
                },
                {
                    "fn_2 _l _o $0": "(fn_1 $0 (lam (if (_rmatch $0 _o) _l $0)))"
                },
                {
                    "fn_2 _j _r $0": "(fn_1 $0 (lam (if (_rmatch $0 _r) _j $0)))"
                },
                {
                    "fn_2 (_rconcat _k _rempty) _t $0": "(fn_1 $0 (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)))"
                },
                {
                    "fn_2 (_rconcat _rempty _k) _t $0": "(fn_1 $0 (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)))"
                },
                {
                    "fn_2 _k _t $0": "(fn_1 $0 (lam (if (_rmatch $0 _t) _k $0)))"
                },
                {
                    "fn_2 _o _t $0": "(fn_1 $0 (lam (if (_rmatch $0 _t) _o $0)))"
                },
                {
                    "fn_2 _v _i (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch $0 _i) _v $0)))"
                },
                {
                    "fn_2 (_rconcat _r #0) _o (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_2 _j _r (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch $0 _r) _j $0)))"
                },
                {
                    "fn_2 _k _t (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch $0 _t) _k $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 3737,
            "final_cost": 33804,
            "compression_ratio": 1.1068216779079398,
            "cumulative_compression_ratio": 1.7057152999645013,
            "num_uses": 40,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _x _s)": "(_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _b": "(_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _d": "(_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam (_rconcat _u _e))) _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _u _e)))))))"
                },
                {
                    "fn_3 (fn_1 (_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e))) _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (fn_1 (_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e)))))))"
                },
                {
                    "fn_3 (fn_1 (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e))) _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (fn_1 (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e)))))))"
                },
                {
                    "fn_3 (fn_1 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e))) _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot (fn_1 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e)))))))"
                },
                {
                    "fn_3 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam (_rconcat _g _i))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _g _i)))))))"
                },
                {
                    "fn_3 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_3 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam (_rconcat _q _j))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _q _j)))))))"
                },
                {
                    "fn_3 $0 _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_3 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam _p)) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam _p))))))"
                },
                {
                    "fn_3 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _b $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam (_rconcat _h _r))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _h _r)))))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _v": "(_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam (_rconcat _h _x))) _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _h _x)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2)))))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 2525,
            "final_cost": 31408,
            "compression_ratio": 1.076286296484972,
            "cumulative_compression_ratio": 1.8358380030565462,
            "num_uses": 15,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _e _e": "(_rflatten (_rappend _e (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (fn_3 $0 _b) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_3 $0 _b)))))))"
                },
                {
                    "fn_4 (fn_3 $0 _j) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_3 $0 _j)))))))"
                },
                {
                    "fn_4 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (fn_3 $0 _i) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_3 $0 _i)))))))"
                },
                {
                    "fn_4 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 _r _rempty": "(_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _b $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _b $0))))))))"
                },
                {
                    "fn_4 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _b #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1212,
            "final_cost": 30215,
            "compression_ratio": 1.0394837001489325,
            "cumulative_compression_ratio": 1.908323680291246,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _a": "(_rflatten (_rappend _a (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _d": "(_rflatten (_rappend _d (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _b $0)))"
                },
                {
                    "fn_5 (fn_4 $0 _r _rempty) _q": "(_rflatten (_rappend _q (_rsplit _b (fn_4 $0 _r _rempty))))"
                },
                {
                    "fn_5 (fn_4 $0 _rempty _r) _q": "(_rflatten (_rappend _q (_rsplit _b (fn_4 $0 _rempty _r))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _b $0)))"
                },
                {
                    "fn_5 (fn_1 $0 (lam (_rconcat _q $0))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (fn_1 $0 (lam (_rconcat _q $0))))))"
                },
                {
                    "fn_5 (fn_2 _v _i $0) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (fn_2 _v _i $0))))"
                },
                {
                    "fn_5 (fn_3 $0 _x) _s": "(_rflatten (_rappend _s (_rsplit _b (fn_3 $0 _x))))"
                },
                {
                    "fn_5 (fn_3 $0 _i) _y": "(_rflatten (_rappend _y (_rsplit _b (fn_3 $0 _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (_rconcat #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 918,
            "final_cost": 29314,
            "compression_ratio": 1.0307361670191717,
            "cumulative_compression_ratio": 1.9669782356553183,
            "num_uses": 51,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _v #0 $0": "(fn_1 $0 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_6 _j (_rconcat _q _rempty) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _q _rempty) _j)))"
                },
                {
                    "fn_6 _i (_rconcat _rempty _g) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _rempty _g) _i)))"
                },
                {
                    "fn_6 _x (_rconcat _rempty _h) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _x)))"
                },
                {
                    "fn_6 _n _f $0": "(fn_1 $0 (lam (_rconcat _f _n)))"
                },
                {
                    "fn_6 _i _g $0": "(fn_1 $0 (lam (_rconcat _g _i)))"
                },
                {
                    "fn_6 _r _h $0": "(fn_1 $0 (lam (_rconcat _h _r)))"
                },
                {
                    "fn_6 _s _h $0": "(fn_1 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_6 _x _h $0": "(fn_1 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_6 #0 _l $0": "(fn_1 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_6 (_rconcat #0 _rempty) _l $0": "(fn_1 $0 (lam (_rconcat _l (_rconcat $0 _rempty))))"
                },
                {
                    "fn_6 #0 _q $0": "(fn_1 $0 (lam (_rconcat _q $0)))"
                },
                {
                    "fn_6 _j _q $0": "(fn_1 $0 (lam (_rconcat _q _j)))"
                },
                {
                    "fn_6 _v _r $0": "(fn_1 $0 (lam (_rconcat _r _v)))"
                },
                {
                    "fn_6 _k _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty _k)))"
                },
                {
                    "fn_6 _p _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty _p)))"
                },
                {
                    "fn_6 _e _u $0": "(fn_1 $0 (lam (_rconcat _u _e)))"
                },
                {
                    "fn_6 _t _w $0": "(fn_1 $0 (lam (_rconcat _w _t)))"
                },
                {
                    "fn_6 _v #0 $1": "(fn_1 $1 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_6 _n _f (_rflatten (cons _a (cdr (_rsplit _rdot $0))))": "(fn_1 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_6 _e _u (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))": "(fn_1 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_6 _n _f (_rflatten (cons _i (cdr (_rsplit _rdot $0))))": "(fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_6 _i _g (_rflatten (cons _j (cdr (_rsplit _rdot $0))))": "(fn_1 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_6 _v #0 (car (map (lam $1) (_rsplit _rdot $0)))": "(fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_6 _r _h (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_6 #0 _l (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _l $0)))"
                },
                {
                    "fn_6 _x _h (fn_1 $0 (lam _b))": "(fn_1 (fn_1 $0 (lam _b)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_6 _j _q (fn_1 $0 (lam _j))": "(fn_1 (fn_1 $0 (lam _j)) (lam (_rconcat _q _j)))"
                },
                {
                    "fn_6 _n _f (fn_1 $0 (lam _l))": "(fn_1 (fn_1 $0 (lam _l)) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_6 _x _h (fn_1 $0 (lam _q))": "(fn_1 (fn_1 $0 (lam _q)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_6 _r _h (fn_1 $0 (lam _r))": "(fn_1 (fn_1 $0 (lam _r)) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_6 _e _u (fn_3 $0 _e)": "(fn_1 (fn_3 $0 _e) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_6 _i _g (fn_3 $0 _i)": "(fn_1 (fn_3 $0 _i) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_6 _r _h (fn_3 $0 _r)": "(fn_1 (fn_3 $0 _r) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_6 _e _u (fn_4 $0 _e _e)": "(fn_1 (fn_4 $0 _e _e) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_6 _s _h (fn_5 $0 _rempty)": "(fn_1 (fn_5 $0 _rempty) (lam (_rconcat _h _s)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
            "arity": 1,
            "name": "fn_7",
            "utility": 808,
            "final_cost": 28607,
            "compression_ratio": 1.0247142307826755,
            "cumulative_compression_ratio": 2.0155905897158037,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 707,
            "final_cost": 27922,
            "compression_ratio": 1.0245326266026789,
            "cumulative_compression_ratio": 2.065038321037175,
            "num_uses": 50,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 (_rconcat (car (_rsplit _rdot $0)) _o)": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat (car (_rsplit _rempty $0)) _o)": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _i _r)": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _k _e)": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _m _i)": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _y _w)": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _k) _a": "(_rflatten (cons _a (cdr (_rsplit _rdot (fn_0 $0 _w _k)))))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _v (_rsplit _b $0))) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _b $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _v (_rsplit _rdot $0))) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _v (_rsplit _rempty $0))) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _v (_rsplit _w $0))) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _w $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _c) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _c)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _k) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _k)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _rdot) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _rdot)))))"
                },
                {
                    "fn_8 $0 _d": "(_rflatten (cons _d (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _s (cons _s (cdr (_rsplit _rdot $0))))) _e": "(_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _s (cons _s (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_8 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (_rsplit _b $0)) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _b $0))))))"
                },
                {
                    "fn_8 (_rflatten (_rsplit _rdot $0)) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (cons _j (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n": "(_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 $0 _o": "(_rflatten (cons _o (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _w) _x": "(_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _w)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _b) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _x) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _x)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _b #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _b $1)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 707,
            "final_cost": 27219,
            "compression_ratio": 1.025827546934127,
            "cumulative_compression_ratio": 2.118373195194533,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _f": "(_rflatten (cons _f (_rsplit _b $0)))"
                },
                {
                    "fn_9 (fn_8 $0 _i) _m": "(_rflatten (cons _m (_rsplit _b (fn_8 $0 _i))))"
                },
                {
                    "fn_9 $0 _v": "(_rflatten (cons _v (_rsplit _b $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}