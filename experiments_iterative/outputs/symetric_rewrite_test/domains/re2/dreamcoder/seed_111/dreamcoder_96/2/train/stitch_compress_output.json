{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_test --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 --verbose --syMetricMethod Rewrite",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 54961,
    "final_cost": 27776,
    "compression_ratio": 1.9787226382488479,
    "num_abstractions": 10,
    "original": [
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam _s) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _f $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _g _t)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e _w) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _m _w) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _m (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _i (_rappend _w (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _x (_rsplit _rempty (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _i)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))))) $0))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _i) $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _s (_rsplit _rdot (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))"
    ],
    "rewritten": [
        "(lam (fn_8 (fn_6 _v _rempty $0) $0))",
        "(lam (_rflatten (cons _n (cons _a (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _a _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam _k) (fn_1 $0))))",
        "(lam (_rflatten (map (lam _k) (fn_1 (_rflatten (fn_1 $0))))))",
        "(lam (_rflatten (fn_1 (_rflatten (map (lam _k) (fn_1 $0))))))",
        "(lam (fn_3 $0 _k _rempty))",
        "(lam (_rflatten (map (lam _k) (fn_1 (_rflatten (map (lam _k) (fn_1 $0)))))))",
        "(lam (fn_5 $0 _r))",
        "(lam (fn_5 (_rflatten (fn_1 $0)) _r))",
        "(lam (_rflatten (fn_1 (fn_5 $0 _r))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_1 $0)))))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_5 $0 _r)))))",
        "(lam (fn_6 _u _o $0))",
        "(lam (fn_2 (fn_1 (_rflatten (_rrevcdr (fn_1 $0)))) _o _u))",
        "(lam (fn_5 (_rflatten (_rrevcdr (fn_1 $0))) (_rconcat _o _u)))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (fn_1 $0))))))",
        "(lam (fn_5 (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_1 $0))))) _u))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (fn_1 $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_3 $0 _j _q))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (fn_1 $0))))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _j _q))",
        "(lam (_rflatten (fn_1 (fn_3 $0 _j _q))))",
        "(lam (fn_3 (_rflatten (map (lam _j) (fn_1 $0))) _j _q))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_1 $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (fn_5 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (fn_1 $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _j (fn_1 $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (fn_1 $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (fn_3 $0 _s _h))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _s _h))",
        "(lam (fn_3 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h))",
        "(lam (fn_3 (_rflatten (map (lam _s) (fn_1 $0))) _s _h))",
        "(lam (fn_3 (fn_5 $0 _s) _s _h))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (fn_1 $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_4 $0 _j _r))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (fn_1 $0))))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _w _y))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_0 $0 _w _y)))))",
        "(lam (_rflatten (fn_1 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (map (lam _p) (fn_1 $0))))",
        "(lam (_rflatten (fn_1 (_rflatten (map (lam _p) (fn_1 $0))))))",
        "(lam (fn_3 $0 _p _rempty))",
        "(lam (fn_3 $0 _rempty _p))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _p _rempty))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _r _i))",
        "(lam (fn_0 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lam (fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lam (_rflatten (cons _i (cons _r (cdr (fn_1 $0))))))",
        "(lam (fn_3 $0 _v _r))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (fn_1 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (fn_1 $0)))))",
        "(lam (fn_6 _t _d $0))",
        "(lam (_rflatten (fn_1 (fn_6 _t _d $0))))",
        "(lam (fn_2 (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lam (fn_2 (_rrevcdr (map (lam $0) (fn_1 $0))) _d _t))",
        "(lam (fn_2 (_rrevcdr (map (lam $0) (_rsplit _rdot $0))) _d _t))",
        "(lam (_rflatten (cons _f (fn_1 $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _f $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (fn_3 $0 _n _f))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _n _f))",
        "(lam (fn_3 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lam (fn_3 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lam (fn_3 (fn_5 $0 _f) _n _f))",
        "(lam (fn_7 $0 (_rflatten (_rrevcdr (fn_1 $0)))))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (fn_1 $0))) $0))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (fn_1 $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _m _r))",
        "(lam (fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r))",
        "(lam (_rflatten (cons _r (cons _m (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _w _b))",
        "(lam (_rflatten (cons _b (fn_1 (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (fn_1 $0))))))",
        "(lam (fn_2 (fn_1 $0) _a _o))",
        "(lam (fn_5 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (fn_1 $0)))))",
        "(lam (fn_2 (_rsplit _rdot $0) _a _o))",
        "(lam (fn_2 (_rsplit (_rnot _b) $0) _a _o))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _f _rempty))",
        "(lam (_rflatten (fn_1 (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (fn_1 $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_3 $0 _t _w))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (fn_1 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (fn_1 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _g _t)) (fn_1 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lam (fn_2 (fn_1 $0) _i _y))",
        "(lam (fn_2 (fn_1 (_rflatten (fn_1 $0))) _i _y))",
        "(lam (if (_rmatch _e _w) $0 (fn_2 (fn_1 $0) _i _y)))",
        "(lam (if (_rmatch _m _w) $0 (fn_2 (fn_1 $0) _i _y)))",
        "(lam (if (_rmatch _m (_rtail (fn_1 $0))) $0 (fn_2 (fn_1 $0) _i _y)))",
        "(lam (fn_3 $0 _e _u))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (fn_1 $0))))",
        "(lam (_rflatten (fn_1 (fn_3 $0 _e _u))))",
        "(lam (fn_3 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u))",
        "(lam (fn_3 (fn_5 $0 _r) _e _u))",
        "(lam (fn_8 (fn_2 (fn_1 $0) _w _i) $0))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (fn_1 $0)))))))",
        "(lam (_rflatten (fn_1 (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _e _x))",
        "(lam (_rflatten (cons _x (fn_1 (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_9 $0 _q))",
        "(lam (fn_9 $0 _q))",
        "(lam (fn_9 (_rflatten (fn_1 $0)) _q))",
        "(lam (_rflatten (fn_1 (fn_9 $0 _q))))",
        "(lam (fn_9 (_rflatten (map (lam $0) (fn_1 $0))) _q))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _o _j))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_0 $0 _o _j)))))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_1 $0))) _o _j))",
        "(lam (fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j))",
        "(lam (fn_3 $0 _i _g))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (fn_1 $0))))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_3 $0 _i _g)))))",
        "(lam (fn_3 $0 _i (_rconcat _rempty _g)))",
        "(lam (_rflatten (map (lam (_rconcat $0 _i)) (fn_1 (_rflatten (map (lam _g) (fn_1 $0)))))))",
        "(lam (fn_2 (fn_1 $0) _o _m))",
        "(lam (fn_5 $0 (_rconcat _o _m)))",
        "(lam (fn_5 (fn_2 (fn_1 $0) _o _o) _m))",
        "(lam (fn_2 (_rsplit _rdot $0) _o _m))",
        "(lam (fn_3 $0 _x _h))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (fn_1 $0))))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _x _h))",
        "(lam (fn_3 (_rflatten (map (lam _m) (fn_1 $0))) _x _h))",
        "(lam (fn_3 (_rflatten (map (lam _x) (fn_1 $0))) _x _h))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _r _r))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_0 $0 _r _r)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (fn_1 $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_0 $0 _rempty _i))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (fn_1 $0)))))))",
        "(lam (_rflatten (fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (fn_1 $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (fn_1 $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (fn_1 $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (if (_rmatch (_rtail (fn_1 $0)) _s) (fn_5 $0 _y) $0))",
        "(lam (fn_7 $0 (fn_5 $0 _y)))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (fn_5 $0 _y) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (fn_5 $0 _y) $0))",
        "(lam (fn_7 $0 (_rflatten (map (lam $0) (fn_1 (fn_5 $0 _y))))))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _w _a))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (fn_1 $0)))))))",
        "(lam (fn_0 $0 _o (car (fn_1 $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (fn_1 $0)))))",
        "(lam (fn_0 $0 _o (car (_rsplit (_rnot _a) $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (fn_1 $0)) _i _q))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_1 $0))) _i _q))",
        "(lam (_rflatten (cons _q (cons _i (cdr (fn_1 $0))))))",
        "(lam (fn_6 _j _rempty $0))",
        "(lam (fn_2 (_rrevcdr (_rsplit _rdot $0)) _rempty _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j))",
        "(lam (fn_5 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (fn_1 $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_4 $0 _k _t))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (fn_1 $0))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (fn_1 $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (fn_4 $0 _v _i))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (fn_1 $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _i) $0 _v)) (fn_1 $0))))",
        "(lam (fn_9 $0 _l))",
        "(lam (fn_9 (_rflatten (fn_1 $0)) _l))",
        "(lam (_rflatten (fn_1 (fn_9 $0 _l))))",
        "(lam (fn_9 (_rflatten (map (lam $0) (fn_1 $0))) _l))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_9 $0 _l)))))",
        "(lam (fn_6 _q _r $0))",
        "(lam (fn_6 _q _r (_rflatten (fn_1 $0))))",
        "(lam (fn_5 (fn_6 _q _r $0) _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot (fn_6 _r _rempty $0)))))",
        "(lam (_rflatten (_rappend _q (fn_1 (fn_6 _r _rempty $0)))))",
        "(lam (fn_6 _j _b $0))",
        "(lam (fn_2 (_rrevcdr (_rsplit _rdot $0)) _b _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j))",
        "(lam (fn_2 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j))",
        "(lam (fn_3 $0 _r _h))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (fn_1 $0))))",
        "(lam (fn_3 (_rflatten (fn_1 $0)) _r _h))",
        "(lam (fn_3 (_rflatten (map (lam _r) (fn_1 $0))) _r _h))",
        "(lam (fn_3 (_rflatten (map (lam _m) (fn_1 $0))) _r _h))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (fn_1 $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lam (fn_2 (fn_1 $0) _x _s))",
        "(lam (fn_5 $0 (_rconcat _x _s)))",
        "(lam (_rflatten (_rappend _s (_rsplit _rdot (fn_5 $0 _x)))))",
        "(lam (fn_2 (fn_1 (_rflatten (fn_1 $0))) _x _s))",
        "(lam (_rflatten (map (lam $0) (fn_1 (fn_2 (fn_1 $0) _x _s)))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (fn_1 $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (fn_1 $0))))))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (_rflatten (cons _a (cdr (fn_1 $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _v (fn_1 $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _b (fn_1 $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _v _rempty $0) $0))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _k _rempty))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _o _u)))",
        "(lambda (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _u))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _j)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _j _q))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0))) _j _q))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _s) (#(lambda (_rsplit _rempty $0)) $0))) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _s) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (#(lambda (_rsplit _rempty $0)) $2)))))) $0 _j _r))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _r $0) _j $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y))",
        "(lambda (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _y))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _q))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _rempty _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lambda (_rflatten (cons _i (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _v _r))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _t _d $0))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _t _d $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (map (lambda $0) (_rsplit _rdot $0))) _d _t))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _n _f))",
        "(lambda (#(lambda (lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $1))) $0 $1))) $0 (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) $0))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _r))",
        "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r))",
        "(lambda (_rflatten (cons _r (cons _m (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b))",
        "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _b))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _b (cons _w (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _a _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _b) $0) _a _o))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _f _rempty))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _t _w))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _z _t)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _g _t)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))) _i _y))",
        "(lambda (if (_rmatch _e _w) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _y)))",
        "(lambda (if (_rmatch _m _w) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _y)))",
        "(lambda (if (_rmatch _m (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _i _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))",
        "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _e _u))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _w _i) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _k))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _e _x))",
        "(lambda (_rflatten (cons _x (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _m))",
        "(lambda (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _m (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _m))",
        "(lambda (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _q))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _q))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _o _j))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g))",
        "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i (_rconcat _rempty _g)))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _i)) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _g) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _o _o) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _m) (#(lambda (_rsplit _rempty $0)) $0))) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _x) (#(lambda (_rsplit _rempty $0)) $0))) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _r))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _i))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $1))) $0 $1))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y)))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $1))) $0 $1))) $0 (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _a))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit (_rnot _a) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _q))",
        "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _i _q))",
        "(lambda (_rflatten (cons _q (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (#(lambda (_rsplit _rempty $0)) $2)))))) $0 _k _t))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) _k $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _s _e))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (#(lambda (_rsplit _rempty $0)) $2)))))) $0 _v _i))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _i $0) _v $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch (_rnot $0) _i) $0 _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _l))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _l))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _l))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _l))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1))))) $0 _l)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r $0) _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _r _rempty $0)))))",
        "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _r _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _r _h))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _r) (#(lambda (_rsplit _rempty $0)) $0))) _r _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _m) (#(lambda (_rsplit _rempty $0)) $0))) _r _h))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _s)))",
        "(lambda (_rflatten (_rappend _s (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))) _x _s))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) _x _s)))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _rempty))",
        "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _c $0))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 8989,
            "final_cost": 45972,
            "compression_ratio": 1.1955320629948665,
            "cumulative_compression_ratio": 1.1955320629948665,
            "num_uses": 44,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _o (car (_rsplit (_rnot _a) $0))": "(_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _rempty _i": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _f _rempty": "(_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_1",
            "utility": 4545,
            "final_cost": 41427,
            "compression_ratio": 1.1097110580056484,
            "cumulative_compression_ratio": 1.3266951505057087,
            "num_uses": 165,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _f (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _g) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _p) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (fn_0 $0 _o _j)": "(_rsplit _rempty (fn_0 $0 _o _j))"
                },
                {
                    "fn_1 (fn_0 $0 _r _r)": "(_rsplit _rempty (fn_0 $0 _r _r))"
                },
                {
                    "fn_1 (fn_0 $0 _w _y)": "(_rsplit _rempty (fn_0 $0 _w _y))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2)))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 3333,
            "final_cost": 38094,
            "compression_ratio": 1.0874940935580406,
            "cumulative_compression_ratio": 1.442773140127054,
            "num_uses": 38,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 (fn_1 $0) _w _i": "(_rflatten (_rappend _i (_rappend _w (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (fn_1 $0) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (_rsplit (_rnot _b) $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (fn_1 $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (fn_1 $0) _o _o": "(_rflatten (_rappend _o (_rappend _o (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 (_rflatten (fn_1 $0)))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (fn_1 (_rflatten (fn_1 $0))))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (fn_1 $0) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (fn_1 $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (fn_1 (_rflatten (fn_1 $0)))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (map (lam $0) (_rsplit _rdot $0))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_2 (_rrevcdr (map (lam $0) (fn_1 $0))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (fn_1 $0)))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (_rrevcdr (fn_1 $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (fn_1 (_rflatten (_rrevcdr (fn_1 $0))))))))"
                },
                {
                    "fn_2 (_rrevcdr (fn_1 $0)) _rempty _v": "(_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (fn_1 $0))))))"
                },
                {
                    "fn_2 (fn_1 $0) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (fn_1 $0)))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (fn_1 $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (fn_1 (_rflatten (fn_1 $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 3142,
            "final_cost": 34952,
            "compression_ratio": 1.0898947127489127,
            "cumulative_compression_ratio": 1.5724708171206225,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _i (_rconcat _rempty _g)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _m) (fn_1 $0))) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _m) (fn_1 $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _r) (fn_1 $0))) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (fn_1 $0))))))"
                },
                {
                    "fn_3 $0 _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0)))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _s) (fn_1 $0))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam _s) (fn_1 $0))))))"
                },
                {
                    "fn_3 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _m) (fn_1 $0))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _m) (fn_1 $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _x) (fn_1 $0))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _x) (fn_1 $0))))))"
                },
                {
                    "fn_3 $0 _rempty _p": "(_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _j) (fn_1 $0))) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (fn_1 $0))))))"
                },
                {
                    "fn_3 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _k _rempty": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (fn_1 $0)) _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_3 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (fn_1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (#(lambda (_rsplit _rempty $0)) $2))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 1821,
            "final_cost": 33131,
            "compression_ratio": 1.0549636292294227,
            "cumulative_compression_ratio": 1.6588995200869276,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (fn_1 $0)))"
                },
                {
                    "fn_4 $0 _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (fn_1 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1313,
            "final_cost": 31818,
            "compression_ratio": 1.0412659500911434,
            "cumulative_compression_ratio": 1.7273555848890565,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (_rrevcdr (fn_1 $0))) (_rconcat _o _u)": "(_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (fn_1 $0)))))))"
                },
                {
                    "fn_5 $0 (_rconcat _x _s)": "(_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (fn_2 (fn_1 $0) _o _o) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (fn_2 (fn_1 $0) _o _o)))))"
                },
                {
                    "fn_5 (fn_2 (_rrevcdr (fn_1 $0)) _r _q) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (fn_2 (_rrevcdr (fn_1 $0)) _r _q)))))"
                },
                {
                    "fn_5 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (fn_1 $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (fn_1 $0))))))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_1 $0))))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_1 $0)))))))))"
                },
                {
                    "fn_5 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _y": "(_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 (_rrevcdr (fn_1 #2)) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1212,
            "final_cost": 30606,
            "compression_ratio": 1.0396000784159969,
            "cumulative_compression_ratio": 1.7957590015029732,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _j _b $0": "(fn_2 (_rrevcdr (fn_1 $0)) _b _j)"
                },
                {
                    "fn_6 _t _d $0": "(fn_2 (_rrevcdr (fn_1 $0)) _d _t)"
                },
                {
                    "fn_6 _u _o $0": "(fn_2 (_rrevcdr (fn_1 $0)) _o _u)"
                },
                {
                    "fn_6 _q _r $0": "(fn_2 (_rrevcdr (fn_1 $0)) _r _q)"
                },
                {
                    "fn_6 _j _rempty $0": "(fn_2 (_rrevcdr (fn_1 $0)) _rempty _j)"
                },
                {
                    "fn_6 _r _rempty $0": "(fn_2 (_rrevcdr (fn_1 $0)) _rempty _r)"
                },
                {
                    "fn_6 _v _rempty $0": "(fn_2 (_rrevcdr (fn_1 $0)) _rempty _v)"
                },
                {
                    "fn_6 _q _r (_rflatten (fn_1 $0))": "(fn_2 (_rrevcdr (fn_1 (_rflatten (fn_1 $0)))) _r _q)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _s (_rtail (fn_1 #0))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $1))) $0 $1)))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1010,
            "final_cost": 29596,
            "compression_ratio": 1.034126233274767,
            "cumulative_compression_ratio": 1.857041492093526,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (_rflatten (_rrevcdr (fn_1 $0)))": "(if (_rmatch _s (_rtail (fn_1 $0))) (_rflatten (_rrevcdr (fn_1 $0))) $0)"
                },
                {
                    "fn_7 $0 (_rflatten (map (lam $0) (fn_1 (fn_5 $0 _y))))": "(if (_rmatch _s (_rtail (fn_1 $0))) (_rflatten (map (lam $0) (fn_1 (fn_5 $0 _y)))) $0)"
                },
                {
                    "fn_7 $0 (fn_5 $0 _y)": "(if (_rmatch _s (_rtail (fn_1 $0))) (fn_5 $0 _y) $0)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _e (_rtail (fn_1 #1))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1)))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1010,
            "final_cost": 28586,
            "compression_ratio": 1.0353319806898482,
            "cumulative_compression_ratio": 1.9226544462324215,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 (fn_2 (fn_1 $0) _w _i) $0": "(if (_rmatch _e (_rtail (fn_1 $0))) $0 (fn_2 (fn_1 $0) _w _i))"
                },
                {
                    "fn_8 (fn_6 _v _rempty $0) $0": "(if (_rmatch _e (_rtail (fn_1 $0))) $0 (fn_6 _v _rempty $0))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #1 $0)) (fn_1 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map (lambda (_rconcat $1 $0)) (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 810,
            "final_cost": 27776,
            "compression_ratio": 1.029161866359447,
            "cumulative_compression_ratio": 1.9787226382488479,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _l": "(_rflatten (map (lam (_rconcat _l $0)) (fn_1 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_1 $0)) _l": "(_rflatten (map (lam (_rconcat _l $0)) (fn_1 (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_9 (_rflatten (map (lam $0) (fn_1 $0))) _l": "(_rflatten (map (lam (_rconcat _l $0)) (fn_1 (_rflatten (map (lam $0) (fn_1 $0))))))"
                },
                {
                    "fn_9 $0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (fn_1 $0)))"
                },
                {
                    "fn_9 (_rflatten (fn_1 $0)) _q": "(_rflatten (map (lam (_rconcat _q $0)) (fn_1 (_rflatten (fn_1 $0)))))"
                },
                {
                    "fn_9 (_rflatten (map (lam $0) (fn_1 $0))) _q": "(_rflatten (map (lam (_rconcat _q $0)) (fn_1 (_rflatten (map (lam $0) (fn_1 $0))))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}