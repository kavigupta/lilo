{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_test --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 --verbose --syMetricMethod Rewrite",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 91033,
    "final_cost": 44645,
    "compression_ratio": 2.0390413260163514,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam _s) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty (_rconcat _g _a)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _f $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _d) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _d) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _d) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _d) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _d) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))) (_rflatten (_rsplit _rempty $0)) (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rsplit _rempty (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty (if (_rmatch _s (_rtail (_rsplit _rempty $0))) $0 $0)))) (if (_rmatch _s (_rtail (_rsplit _rempty $0))) $0 $0) (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _w (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _g _t)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e _w) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _m _w) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _m (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _i (_rappend _w (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (_rsplit _rempty (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _j (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _j (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (if (_rmatch _s (_rtail (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _rempty $0)))))) $0 (_rflatten (_rappend _j (_rsplit _rempty $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _j (_rsplit (_rnot _rdot) $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _j (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))))) $0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _i)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend (_rconcat _n _a) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit (_rnot _a) $0)))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit (_rnot _b) $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _g $0) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _w (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))))) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0)))))) $0 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _u _rempty)) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _u $0) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _i) $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _m) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _s (_rsplit _rdot (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _k (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _rempty (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _x (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))) (_rflatten (_rsplit _rempty $0)) (_rflatten (_rappend _x (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit (_rnot _b) $0))))))"
    ],
    "rewritten": [
        "(lam (fn_1 $0 _y _d))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _y _d))",
        "(lam (_rflatten (fn_2 (fn_1 $0 _y _d))))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) _y _d))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (fn_2 $0))))",
        "(lam (fn_1 $0 (_rconcat _k _b) _b))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _k _b) _b))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k $0) $0)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _b $0) (_rconcat _k _b) $0)) (fn_2 $0))))",
        "(lam (fn_5 (fn_6 _v _rempty $0) $0))",
        "(lam (fn_0 $0 _a _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (map (lam _k) (fn_2 $0))))",
        "(lam (fn_4 $0 _k _rempty))",
        "(lam (_rflatten (fn_2 (_rflatten (map (lam _k) (fn_2 $0))))))",
        "(lam (_rflatten (map (lam _k) (fn_2 (_rflatten (fn_2 $0))))))",
        "(lam (_rflatten (map (lam _k) (fn_2 (_rflatten (map (lam _k) (fn_2 $0)))))))",
        "(lam (fn_7 $0 _r))",
        "(lam (fn_7 (_rflatten (fn_2 $0)) _r))",
        "(lam (_rflatten (fn_2 (fn_7 $0 _r))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_7 $0 _r)))))",
        "(lam (fn_6 _u _o $0))",
        "(lam (fn_9 _u _o (_rflatten (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_7 (_rflatten (_rrevcdr (fn_2 $0))) (_rconcat _o _u)))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (fn_2 $0))))))",
        "(lam (fn_7 (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_2 $0))))) _u))",
        "(lam (fn_8 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_4 $0 _j _q))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _j _q))",
        "(lam (_rflatten (fn_2 (fn_4 $0 _j _q))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (fn_2 $0))))",
        "(lam (fn_4 (_rflatten (map (lam _j) (fn_2 $0))) _j _q))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (fn_7 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_9 _m _t $0))",
        "(lam (fn_7 $0 (_rconcat _t _m)))",
        "(lam (fn_3 (_rsplit _rdot $0) _t _m))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_7 (fn_9 _m _t $0) _m))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (fn_2 (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _j (fn_2 $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _j) (fn_2 $0))))",
        "(lam (fn_4 $0 _j _rempty))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (fn_2 $0))))",
        "(lam (_rflatten (map (lam _j) (fn_2 (fn_6 _j _b $0)))))",
        "(lam (fn_4 $0 _s _h))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _s _h))",
        "(lam (fn_4 (fn_7 $0 _s) _s _h))",
        "(lam (fn_4 (_rflatten (map (lam _s) (fn_2 $0))) _s _h))",
        "(lam (fn_4 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons _w (cons _i (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_1 $0 _j _r))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (fn_2 $0))))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _w _y))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_0 $0 _w _y)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (fn_2 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (_rflatten (cons _q (cons _a (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (_rflatten (cons _g (cons _a (cdr (fn_2 $0))))))",
        "(lam (fn_0 $0 (_rconcat _g _a) _rempty))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam _p) (fn_2 $0))))",
        "(lam (fn_4 $0 _p _rempty))",
        "(lam (fn_4 $0 _rempty _p))",
        "(lam (_rflatten (fn_2 (_rflatten (map (lam _p) (fn_2 $0))))))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _p _rempty))",
        "(lam (fn_1 $0 (_rconcat _t _y) _t))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _t _y) _t))))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _r _i))",
        "(lam (_rflatten (cons _i (cons _r (cdr (fn_2 $0))))))",
        "(lam (fn_0 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lam (fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lam (fn_4 $0 _v _r))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (fn_2 $0)))))",
        "(lam (fn_6 _t _d $0))",
        "(lam (_rflatten (fn_2 (fn_6 _t _d $0))))",
        "(lam (fn_3 (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lam (fn_3 (_rrevcdr (map (lam $0) (fn_2 $0))) _d _t))",
        "(lam (fn_3 (_rrevcdr (map (lam $0) (_rsplit _rdot $0))) _d _t))",
        "(lam (fn_1 $0 (_rconcat _p _p) _p))",
        "(lam (_rflatten (cons _f (fn_2 $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _f $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (fn_4 $0 _n _f))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _n _f))",
        "(lam (fn_4 (fn_7 $0 _f) _n _f))",
        "(lam (fn_4 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lam (fn_4 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lam (if (_rmatch _s (_rtail (fn_2 $0))) (_rflatten (_rrevcdr (fn_2 $0))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (fn_2 $0))) $0))",
        "(lam (fn_1 $0 (_rconcat _v _q) _l))",
        "(lam (_rflatten (cons _b (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _m _r))",
        "(lam (_rflatten (cons _r (cons _m (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _w _b))",
        "(lam (_rflatten (cons _b (cons _w (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (fn_2 (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_9 _o _a $0))",
        "(lam (fn_7 $0 (_rconcat _a _o)))",
        "(lam (fn_3 (_rsplit _rdot $0) _a _o))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (fn_2 $0)))))",
        "(lam (fn_3 (_rsplit (_rnot _b) $0) _a _o))",
        "(lam (fn_0 $0 _d (car (fn_2 $0))))",
        "(lam (fn_0 $0 _d (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _d (car (fn_2 $0))))",
        "(lam (fn_0 $0 _d (car (map (lam $0) (fn_2 $0)))))",
        "(lam (fn_0 $0 _d (car (_rsplit (_rnot _a) $0))))",
        "(lam (fn_0 $0 _f _rempty))",
        "(lam (_rflatten (cons _f (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (fn_2 (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (fn_2 $0))))))",
        "(lam (fn_0 (_rflatten (cdr (fn_2 $0))) _w _rempty))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 (_rflatten (cdr (_rsplit _rdot $0))) _w _rempty))",
        "(lam (fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _w _rempty))",
        "(lam (fn_5 (fn_6 _l _g $0) $0))",
        "(lam (fn_5 (fn_6 _l _g $0) (_rflatten (fn_2 $0))))",
        "(lam (fn_5 (_rflatten (fn_2 (fn_6 _l _g $0))) $0))",
        "(lam (fn_5 (fn_6 _l _g $0) $0))",
        "(lam (fn_5 (fn_6 _l _g $0) (if (_rmatch _s (_rtail (fn_2 $0))) $0 $0)))",
        "(lam (fn_5 (fn_7 $0 _w) $0))",
        "(lam (fn_5 (fn_7 (_rflatten (fn_2 $0)) _w) $0))",
        "(lam (fn_5 (_rflatten (_rappend _w (_rrevcdr (fn_2 $0)))) $0))",
        "(lam (fn_5 (fn_9 _w _rempty $0) $0))",
        "(lam (fn_5 (fn_7 $0 _w) $0))",
        "(lam (fn_4 $0 _i _n))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (fn_2 $0))))",
        "(lam (fn_7 (fn_4 $0 _i _n) _i))",
        "(lam (fn_4 (fn_7 $0 _i) _i _n))",
        "(lam (fn_4 (fn_7 $0 _f) _i _n))",
        "(lam (fn_4 $0 _t _w))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _g _t)) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (fn_2 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lam (fn_9 _y _i $0))",
        "(lam (fn_9 _y _i (_rflatten (fn_2 $0))))",
        "(lam (if (_rmatch _e _w) $0 (fn_9 _y _i $0)))",
        "(lam (if (_rmatch _m _w) $0 (fn_9 _y _i $0)))",
        "(lam (if (_rmatch _m (_rtail (fn_2 $0))) $0 (fn_9 _y _i $0)))",
        "(lam (fn_4 $0 _e _u))",
        "(lam (_rflatten (fn_2 (fn_4 $0 _e _u))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (fn_2 $0))))",
        "(lam (fn_4 (fn_7 $0 _r) _e _u))",
        "(lam (fn_4 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u))",
        "(lam (fn_1 $0 (_rconcat _s _x) _s))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _s _x) _s))))",
        "(lam (fn_5 (fn_9 _i _w $0) $0))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (fn_2 (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (fn_2 $0)))))))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _e _x))",
        "(lam (_rflatten (cons _x (cons _e (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (fn_2 (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_1 $0 (_rconcat _c _e) _c))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _c _e) _c))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (_rflatten (cons _m (cons _i (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_2 (_rflatten (fn_2 $0))))))",
        "(lam (_rflatten (fn_2 (_rflatten (map (lam (_rconcat _q $0)) (fn_2 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_2 (_rflatten (map (lam $0) (fn_2 $0)))))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _o _j))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_2 $0))) _o _j))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_0 $0 _o _j)))))",
        "(lam (fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j))",
        "(lam (fn_5 (fn_8 $0 _j) $0))",
        "(lam (fn_5 (_rflatten (_rappend _j (_rsplit _rdot $0))) $0))",
        "(lam (fn_5 (if (_rmatch _s (_rtail (fn_2 (fn_8 $0 _j)))) $0 (fn_8 $0 _j)) $0))",
        "(lam (fn_5 (_rflatten (_rappend _j (_rsplit (_rnot _rdot) $0))) $0))",
        "(lam (fn_5 (_rflatten (_rappend _j (_rsplit (_rnot _b) $0))) $0))",
        "(lam (fn_1 $0 (_rconcat _t _q) _s))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) (_rconcat _t _q) _s))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _t _q) _s))))",
        "(lam (if (_rmatch _s (_rtail (fn_2 (fn_1 $0 (_rconcat _t _q) _s)))) $0 (fn_1 $0 (_rconcat _t _q) _s)))",
        "(lam (_rflatten (map (lam (if (_rmatch _s $0) (_rconcat _t _q) $0)) (fn_2 $0))))",
        "(lam (fn_4 $0 _i _g))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (fn_2 $0))))",
        "(lam (fn_4 $0 _i (_rconcat _rempty _g)))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_4 $0 _i _g)))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _i)) (fn_2 (_rflatten (map (lam _g) (fn_2 $0)))))))",
        "(lam (fn_9 _m _o $0))",
        "(lam (fn_7 $0 (_rconcat _o _m)))",
        "(lam (fn_3 (_rsplit _rdot $0) _o _m))",
        "(lam (fn_7 (fn_9 _o _o $0) _m))",
        "(lam (fn_5 (fn_9 _a _n $0) $0))",
        "(lam (fn_5 (fn_7 $0 (_rconcat _n _a)) $0))",
        "(lam (fn_5 (fn_3 (_rsplit _rdot $0) _n _a) $0))",
        "(lam (fn_5 (fn_3 (_rsplit (_rnot _a) $0) _n _a) $0))",
        "(lam (fn_5 (fn_3 (_rsplit (_rnot _b) $0) _n _a) $0))",
        "(lam (fn_1 $0 (_rconcat _k _a) _g))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) (_rconcat _k _a) _g))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _k _a) _g))))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) (_rconcat _k _a) _g))",
        "(lam (_rflatten (map (lam (if (_rmatch _g $0) (_rconcat _k _a) $0)) (fn_2 $0))))",
        "(lam (fn_4 $0 _x _h))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _x _h))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (fn_2 $0))))",
        "(lam (fn_4 (_rflatten (map (lam _m) (fn_2 $0))) _x _h))",
        "(lam (fn_4 (_rflatten (map (lam _x) (fn_2 $0))) _x _h))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _r _r))",
        "(lam (_rflatten (cons _r (cons _r (cdr (fn_2 $0))))))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_0 $0 _r _r)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_0 $0 _rempty _i))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (fn_2 $0)))))))",
        "(lam (_rflatten (fn_2 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_9 _g _o $0))",
        "(lam (fn_7 $0 (_rconcat _o _g)))",
        "(lam (fn_7 (fn_9 _w _o $0) _g))",
        "(lam (fn_7 (fn_9 _o _o $0) _g))",
        "(lam (fn_7 (fn_9 _m _o $0) _g))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (fn_2 $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lam (fn_8 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (if (_rmatch _s (_rtail (fn_2 $0))) (fn_7 $0 _y) $0))",
        "(lam (if (_rmatch _s (_rtail (fn_2 $0))) (_rflatten (map (lam $0) (fn_2 (fn_7 $0 _y)))) $0))",
        "(lam (if (_rmatch (_rtail (fn_2 $0)) _s) (fn_7 $0 _y) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (fn_7 $0 _y) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (fn_7 $0 _y) $0))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _w _a))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (fn_2 $0)))))))",
        "(lam (fn_9 _j _r $0))",
        "(lam (fn_7 $0 (_rconcat _r _j)))",
        "(lam (fn_3 (_rsplit _rdot $0) _r _j))",
        "(lam (fn_3 (_rsplit (_rnot _b) $0) _r _j))",
        "(lam (fn_6 _j _r (fn_8 $0 _j)))",
        "(lam (fn_4 $0 _p _i))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _p _i))",
        "(lam (fn_4 (_rflatten (fn_2 (_rflatten (fn_2 $0)))) _p _i))",
        "(lam (fn_4 (fn_7 $0 _v) _p _i))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (fn_2 (fn_4 $0 _p _rempty)))))",
        "(lam (fn_4 $0 _g _n))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _g _n))",
        "(lam (_rflatten (fn_2 (fn_4 $0 _g _n))))",
        "(lam (if (_rmatch _s (_rtail (fn_2 (fn_4 $0 _g _n)))) $0 (fn_4 $0 _g _n)))",
        "(lam (_rflatten (_rsplit _a (fn_4 $0 _g _n))))",
        "(lam (fn_0 $0 _o (car (fn_2 $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (fn_2 $0)))))",
        "(lam (fn_0 $0 _o (car (_rsplit (_rnot _a) $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _i _x))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_2 $0))) _i _x))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_0 (_rflatten (fn_2 $0)) _i _q))",
        "(lam (_rflatten (cons _q (cons _i (cdr (fn_2 $0))))))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_2 $0))) _i _q))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_6 _j _rempty $0))",
        "(lam (fn_3 (_rrevcdr (_rsplit _rdot $0)) _rempty _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j))",
        "(lam (fn_7 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (fn_2 $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_1 $0 _k _t))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (fn_2 $0))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (fn_1 $0 _b _u))",
        "(lam (fn_1 (_rflatten (fn_2 $0)) _b _u))",
        "(lam (_rflatten (fn_2 (fn_1 $0 _b _u))))",
        "(lam (fn_1 $0 _b (_rconcat _u _rempty)))",
        "(lam (_rflatten (map (lam (if (_rmatch _u $0) _b $0)) (fn_2 $0))))",
        "(lam (fn_0 (_rflatten (cdr (_rsplit _rdot $0))) _s _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (fn_2 $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_1 $0 _v _i))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _i) $0 _v)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (fn_2 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (fn_2 (_rflatten (fn_2 $0))))))",
        "(lam (_rflatten (fn_2 (_rflatten (map (lam (_rconcat _l $0)) (fn_2 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (fn_2 (_rflatten (map (lam $0) (fn_2 $0)))))))",
        "(lam (_rflatten (map (lam $0) (fn_2 (_rflatten (map (lam (_rconcat _l $0)) (fn_2 $0)))))))",
        "(lam (fn_6 _q _r $0))",
        "(lam (fn_6 _q _r (_rflatten (fn_2 $0))))",
        "(lam (fn_7 (fn_6 _q _r $0) _q))",
        "(lam (fn_8 (fn_6 _r _rempty $0) _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot (fn_6 _r _rempty $0)))))",
        "(lam (fn_6 _j _b $0))",
        "(lam (fn_3 (_rrevcdr (_rsplit _rdot $0)) _b _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j))",
        "(lam (fn_3 (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j))",
        "(lam (fn_4 $0 _r _h))",
        "(lam (fn_4 (_rflatten (fn_2 $0)) _r _h))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (fn_2 $0))))",
        "(lam (fn_4 (_rflatten (map (lam _r) (fn_2 $0))) _r _h))",
        "(lam (fn_4 (_rflatten (map (lam _m) (fn_2 $0))) _r _h))",
        "(lam (fn_8 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lam (fn_9 _s _x $0))",
        "(lam (fn_7 $0 (_rconcat _x _s)))",
        "(lam (fn_9 _s _x (_rflatten (fn_2 $0))))",
        "(lam (_rflatten (_rappend _s (_rsplit _rdot (fn_7 $0 _x)))))",
        "(lam (_rflatten (map (lam $0) (fn_2 (fn_9 _s _x $0)))))",
        "(lam (fn_8 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (_rflatten (cons _a (cdr (fn_2 $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (fn_2 $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_8 $0 _u))",
        "(lam (fn_7 (fn_8 $0 _e) _u))",
        "(lam (fn_7 (fn_8 $0 _k) _u))",
        "(lam (fn_7 (fn_8 $0 _m) _u))",
        "(lam (fn_7 (fn_8 $0 _u) _u))",
        "(lam (fn_9 _p _x $0))",
        "(lam (fn_7 $0 (_rconcat _x _p)))",
        "(lam (fn_3 (_rsplit _rdot $0) _x _p))",
        "(lam (fn_9 _p _x (_rflatten (fn_2 $0))))",
        "(lam (fn_9 _p _x $0))",
        "(lam (fn_1 $0 (_rconcat _p _o) _p))",
        "(lam (_rflatten (fn_2 (fn_1 $0 (_rconcat _p _o) _p))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 _o) $0)) (fn_2 $0))))",
        "(lam (_rflatten (cons _v (fn_2 $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (fn_5 (fn_6 _rempty _x $0) $0))",
        "(lam (fn_5 (fn_6 _x _rempty $0) $0))",
        "(lam (fn_5 (fn_7 (_rflatten (_rrevcdr (fn_2 $0))) _x) $0))",
        "(lam (fn_5 (fn_6 _x _rempty $0) (_rflatten (fn_2 $0))))",
        "(lam (fn_5 (_rflatten (_rappend _x (_rrevcdr (_rrevcdr (fn_2 $0))))) $0))",
        "(lam (_rflatten (cons _b (fn_2 $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (fn_9 _v _c $0))",
        "(lam (fn_7 $0 (_rconcat _c _v)))",
        "(lam (fn_3 (_rsplit _rdot $0) _c _v))",
        "(lam (fn_9 _v _c $0))",
        "(lam (fn_3 (_rsplit (_rnot _b) $0) _c _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _y _d))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _rdot $0)) _y _d))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _d $0) _y $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _b))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _b))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _k $0) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _k _b) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _v _rempty $0) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _k _rempty))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))))",
        "(lambda (_rflatten (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _u _o (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _o _u)))",
        "(lambda (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _j _q))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _j)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0))) _j _q))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _b) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _m _t $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _t _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _t _m))",
        "(lambda (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _m _t $0) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _rempty))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _b $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _s) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _s) (#(lambda (_rsplit _rempty $0)) $0))) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _w))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _j _r))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _r $0) _j $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _y))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y)))))",
        "(lambda (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _q))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _g))",
        "(lambda (_rflatten (cons _g (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (_rconcat _g _a) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _g))",
        "(lambda (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _rempty _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _i))",
        "(lambda (_rflatten (cons _i (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _v _r))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _t _d $0))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _t _d $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (map (lambda $0) (_rsplit _rdot $0))) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _p) _p))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f))",
        "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) $0))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _m _r))",
        "(lambda (_rflatten (cons _r (cons _m (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _b))",
        "(lambda (_rflatten (cons _b (cons _w (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _o _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _a _o))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _b) $0) _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _d (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _d (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _d (car (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _d (car (_rsplit (_rnot _a) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _f _rempty))",
        "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _w _rempty))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cdr (_rsplit _rdot $0))) _w _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _w _rempty))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _l _g $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _l _g $0) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _l _g $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _l _g $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _l _g $0) (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $0)))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _w) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (_rappend _w (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _w _rempty $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _w) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _n))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _n) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _i _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _i _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _t _w))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _g _t)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _z _t)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _z _t)) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _y _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _y _i (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (if (_rmatch _e _w) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _y _i $0)))",
        "(lambda (if (_rmatch _m _w) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _y _i $0)))",
        "(lambda (if (_rmatch _m (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _y _i $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))))",
        "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _i _w $0) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _k))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _e _x))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _x (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _m))",
        "(lambda (_rflatten (cons _m (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _o _j))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (_rappend _j (_rsplit _rdot $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j)) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (_rappend _j (_rsplit (_rnot _rdot) $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (_rappend _j (_rsplit (_rnot _b) $0))) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _t _q) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))))",
        "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s)))) $0 (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s)))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _t _q) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g))",
        "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i (_rconcat _rempty _g)))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g)))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _i)) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _g) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _m _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _o _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _o _o $0) _m))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _a _n $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _n _a)) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _n _a) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _a) $0) _n _a) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _b) $0) _n _a) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _k _a) _g))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _rdot $0)) (_rconcat _k _a) _g))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _k _a) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _x _h))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _m) (#(lambda (_rsplit _rempty $0)) $0))) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _x) (#(lambda (_rsplit _rempty $0)) $0))) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _r))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r)))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _i))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _g _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _g)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _w _o $0) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _o _o $0) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _m _o $0) _g))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit (_rnot _rdot) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) $0))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y)))) $0))",
        "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _a))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _j _r $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _b) $0) _r _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _r (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _p _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)))) _p _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _v) _p _i))",
        "(lambda (_rflatten (map (lambda (_rconcat _i $0)) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p _rempty)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _g _n))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _g _n))))",
        "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _g _n)))) $0 (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _g _n)))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _g _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit (_rnot _a) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _x))",
        "(lambda (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _q))",
        "(lambda (_rflatten (cons _q (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _i _q))",
        "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _k _t))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _t $0) _k $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _s _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _b _u))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b (_rconcat _u _rempty)))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _u $0) _b $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (cdr (_rsplit _rdot $0))) _s _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _i $0) _v $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch (_rnot $0) _i) $0 _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _q _r $0) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _r _rempty $0) _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _r _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _j _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit _rdot $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _r _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _h))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _r) (#(lambda (_rsplit _rempty $0)) $0))) _r _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _m) (#(lambda (_rsplit _rempty $0)) $0))) _r _h))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _u $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _s _x $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _s)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _s _x (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _s (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x)))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _s _x $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _l $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit (_rnot _b) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _rempty))",
        "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _e) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _k) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _m) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1))))) $0 _u) _u))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _p _x $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _x _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _p _x (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _p _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat $0 _o) $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _rempty _x $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _x _rempty $0) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) _x) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2)))) _x _rempty $0) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1))) (_rflatten (_rappend _x (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) $0))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _v _c $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _c _v)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit _rdot $0) _c _v))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2)))) _v _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rsplit (_rnot _b) $0) _c _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 11211,
            "final_cost": 79822,
            "compression_ratio": 1.1404500012527874,
            "cumulative_compression_ratio": 1.1404500012527874,
            "num_uses": 60,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _d (car (_rsplit (_rnot _a) $0))": "(_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _d) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit (_rnot _a) $0))": "(_rflatten (cons (_rconcat (car (_rsplit (_rnot _a) $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _d (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _d) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _d) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _d (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _d) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cdr (_rsplit _rdot $0))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _rempty _i": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (cons _s (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _g _a) _rempty": "(_rflatten (cons (_rconcat _rempty (_rconcat _g _a)) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _f _rempty": "(_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cdr (_rsplit _rdot $0))) _w _rempty": "(_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 (_rflatten (cdr (_rsplit _rempty $0))) _w _rempty": "(_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _w _rempty": "(_rflatten (cons (_rconcat _rempty _w) (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 9912,
            "final_cost": 69910,
            "compression_ratio": 1.1417822915176656,
            "cumulative_compression_ratio": 1.3021456157917322,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _b (_rconcat _u _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _u _rempty)) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _p _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_2",
            "utility": 6262,
            "final_cost": 63648,
            "compression_ratio": 1.0983848667672198,
            "cumulative_compression_ratio": 1.430257038712921,
            "num_uses": 275,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (_rappend _j (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons _e (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons _f (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (cons _w (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))": "(_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _g) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _k) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _p) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (fn_0 $0 _o _j)": "(_rsplit _rempty (fn_0 $0 _o _j))"
                },
                {
                    "fn_2 (fn_0 $0 _r _r)": "(_rsplit _rempty (fn_0 $0 _r _r))"
                },
                {
                    "fn_2 (fn_0 $0 _w _y)": "(_rsplit _rempty (fn_0 $0 _w _y))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _c _e) _c)": "(_rsplit _rempty (fn_1 $0 (_rconcat _c _e) _c))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _k _a) _g)": "(_rsplit _rempty (fn_1 $0 (_rconcat _k _a) _g))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _k _b) _b)": "(_rsplit _rempty (fn_1 $0 (_rconcat _k _b) _b))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _p _o) _p)": "(_rsplit _rempty (fn_1 $0 (_rconcat _p _o) _p))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _s _x) _s)": "(_rsplit _rempty (fn_1 $0 (_rconcat _s _x) _s))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _t _q) _s)": "(_rsplit _rempty (fn_1 $0 (_rconcat _t _q) _s))"
                },
                {
                    "fn_2 (fn_1 $0 (_rconcat _t _y) _t)": "(_rsplit _rempty (fn_1 $0 (_rconcat _t _y) _t))"
                },
                {
                    "fn_2 (fn_1 $0 _b _u)": "(_rsplit _rempty (fn_1 $0 _b _u))"
                },
                {
                    "fn_2 (fn_1 $0 _y _d)": "(_rsplit _rempty (fn_1 $0 _y _d))"
                },
                {
                    "fn_2 (if (_rmatch _s (_rtail (_rsplit _rempty $0))) $0 $0)": "(_rsplit _rempty (if (_rmatch _s (_rtail (_rsplit _rempty $0))) $0 $0))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2)))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 5656,
            "final_cost": 57992,
            "compression_ratio": 1.0975306938888123,
            "cumulative_compression_ratio": 1.56975100013795,
            "num_uses": 71,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 (_rsplit (_rnot _a) $0) _n _a": "(_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "fn_3 (_rsplit (_rnot _b) $0) _n _a": "(_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _n _a": "(_rflatten (_rappend _a (_rappend _n (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _n _a": "(_rflatten (_rappend _a (_rappend _n (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _w _i": "(_rflatten (_rappend _i (_rappend _w (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _a) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _b) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit _rdot $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 (_rflatten (_rappend _j (fn_2 $0))))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (fn_2 (_rflatten (_rappend _j (fn_2 $0)))))))))"
                },
                {
                    "fn_3 (_rsplit (_rnot _b) $0) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _a) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _b) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit (_rnot _rdot) $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit (_rnot _rdot) $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit _rdot $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _g _l": "(_rflatten (_rappend _l (_rappend _g (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rsplit (_rnot _b) $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _o _o": "(_rflatten (_rappend _o (_rappend _o (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (fn_2 $0))) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (fn_2 (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 (_rflatten (fn_2 $0)))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (fn_2 (_rflatten (fn_2 $0))))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _x _rempty": "(_rflatten (_rappend _rempty (_rappend _x (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 $0) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (fn_2 $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (fn_2 (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_3 (_rrevcdr (_rsplit _rdot $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (_rrevcdr (map (lam $0) (_rsplit _rdot $0))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rrevcdr (map (lam $0) (fn_2 $0))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (map (lam $0) (fn_2 $0)))))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (_rrevcdr (fn_2 $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (fn_2 (_rflatten (_rrevcdr (fn_2 $0))))))))"
                },
                {
                    "fn_3 (_rsplit (_rnot _b) $0) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "fn_3 (_rsplit _rdot $0) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _rempty _v": "(_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 $0) _o _w": "(_rflatten (_rappend _w (_rappend _o (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 $0) _rempty _w": "(_rflatten (_rappend _w (_rappend _rempty (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (_rrevcdr (fn_2 $0)) _rempty _x": "(_rflatten (_rappend _x (_rappend _rempty (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_3 (fn_2 $0) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_3 (fn_2 (_rflatten (fn_2 $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (fn_2 (_rflatten (fn_2 $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 4358,
            "final_cost": 53634,
            "compression_ratio": 1.081254428161241,
            "cumulative_compression_ratio": 1.6973002200096954,
            "num_uses": 52,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _i (_rconcat _rempty _g)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _g) _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (cons _s (cdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (cons _s (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _m) (fn_2 $0))) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _m) (fn_2 $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _r) (fn_2 $0))) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (fn_2 $0))))))"
                },
                {
                    "fn_4 $0 _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0)))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _s) (fn_2 $0))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam _s) (fn_2 $0))))))"
                },
                {
                    "fn_4 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _m) (fn_2 $0))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _m) (fn_2 $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _x) (fn_2 $0))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (map (lam _x) (fn_2 $0))))))"
                },
                {
                    "fn_4 $0 _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0)))) _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rflatten (fn_2 (_rflatten (fn_2 $0)))) _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot (_rflatten (fn_2 (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_4 $0 _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))) _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))) _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 $0 _rempty _p": "(_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _j) (fn_2 $0))) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (map (lam _j) (fn_2 $0))))))"
                },
                {
                    "fn_4 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _j _rempty": "(_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _k _rempty": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 $0 _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (fn_2 $0)) _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot (_rflatten (fn_2 $0)))))"
                },
                {
                    "fn_4 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _e (_rtail (fn_2 #1))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 $1)))",
            "arity": 2,
            "name": "fn_5",
            "utility": 3535,
            "final_cost": 50099,
            "compression_ratio": 1.0705602906245633,
            "cumulative_compression_ratio": 1.817062216810715,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 (_rflatten (_rappend (_rconcat _n _a) (_rrevcdr (_rsplit _rdot $0)))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend (_rconcat _n _a) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _j (_rsplit (_rnot _b) $0))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _j (_rsplit (_rnot _b) $0))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _j (_rsplit (_rnot _rdot) $0))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _j (_rsplit (_rnot _rdot) $0))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _j (_rsplit _rdot $0))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _j (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _j (fn_2 $0))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _j (fn_2 $0))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot $0)))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot (_rflatten (fn_2 $0)))))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot (_rflatten (fn_2 $0)))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _w (_rrevcdr (fn_2 $0)))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _w (_rrevcdr (fn_2 $0)))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _x (_rrevcdr (_rrevcdr (fn_2 $0))))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _x (_rrevcdr (_rrevcdr (fn_2 $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (fn_2 $0))))))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (fn_2 $0))))))))"
                },
                {
                    "fn_5 (_rflatten (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _g _l))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (_rflatten (fn_2 (fn_3 (_rrevcdr (fn_2 $0)) _g _l))))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _g _l) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rrevcdr (fn_2 $0)) _g _l))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _rempty _v) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rrevcdr (fn_2 $0)) _rempty _v))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _rempty _x) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rrevcdr (fn_2 $0)) _rempty _x))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _x _rempty) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rrevcdr (fn_2 $0)) _x _rempty))"
                },
                {
                    "fn_5 (fn_3 (_rsplit (_rnot _a) $0) _n _a) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rsplit (_rnot _a) $0) _n _a))"
                },
                {
                    "fn_5 (fn_3 (_rsplit (_rnot _b) $0) _n _a) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rsplit (_rnot _b) $0) _n _a))"
                },
                {
                    "fn_5 (fn_3 (_rsplit _rdot $0) _n _a) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (_rsplit _rdot $0) _n _a))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0) _n _a) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (fn_2 $0) _n _a))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0) _rempty _w) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (fn_2 $0) _rempty _w))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0) _w _i) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (fn_3 (fn_2 $0) _w _i))"
                },
                {
                    "fn_5 (if (_rmatch _s (_rtail (fn_2 (_rflatten (_rappend _j (fn_2 $0)))))) $0 (_rflatten (_rappend _j (fn_2 $0)))) $0": "(if (_rmatch _e (_rtail (fn_2 $0))) $0 (if (_rmatch _s (_rtail (fn_2 (_rflatten (_rappend _j (fn_2 $0)))))) $0 (_rflatten (_rappend _j (fn_2 $0)))))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _g _l) (_rflatten (fn_2 $0))": "(if (_rmatch _e (_rtail (fn_2 (_rflatten (fn_2 $0))))) (_rflatten (fn_2 $0)) (fn_3 (_rrevcdr (fn_2 $0)) _g _l))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _rempty _x) (_rflatten (fn_2 $0))": "(if (_rmatch _e (_rtail (fn_2 (_rflatten (fn_2 $0))))) (_rflatten (fn_2 $0)) (fn_3 (_rrevcdr (fn_2 $0)) _rempty _x))"
                },
                {
                    "fn_5 (fn_3 (_rrevcdr (fn_2 $0)) _g _l) (if (_rmatch _s (_rtail (fn_2 $0))) $0 $0)": "(if (_rmatch _e (_rtail (fn_2 (if (_rmatch _s (_rtail (fn_2 $0))) $0 $0)))) (if (_rmatch _s (_rtail (fn_2 $0))) $0 $0) (fn_3 (_rrevcdr (fn_2 $0)) _g _l))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_3 (_rrevcdr (fn_2 #2)) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)) $1 $2))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1616,
            "final_cost": 48483,
            "compression_ratio": 1.0333312707546976,
            "cumulative_compression_ratio": 1.8776272095373636,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _j _b $0": "(fn_3 (_rrevcdr (fn_2 $0)) _b _j)"
                },
                {
                    "fn_6 _t _d $0": "(fn_3 (_rrevcdr (fn_2 $0)) _d _t)"
                },
                {
                    "fn_6 _l _g $0": "(fn_3 (_rrevcdr (fn_2 $0)) _g _l)"
                },
                {
                    "fn_6 _u _o $0": "(fn_3 (_rrevcdr (fn_2 $0)) _o _u)"
                },
                {
                    "fn_6 _q _r $0": "(fn_3 (_rrevcdr (fn_2 $0)) _r _q)"
                },
                {
                    "fn_6 _j _rempty $0": "(fn_3 (_rrevcdr (fn_2 $0)) _rempty _j)"
                },
                {
                    "fn_6 _r _rempty $0": "(fn_3 (_rrevcdr (fn_2 $0)) _rempty _r)"
                },
                {
                    "fn_6 _v _rempty $0": "(fn_3 (_rrevcdr (fn_2 $0)) _rempty _v)"
                },
                {
                    "fn_6 _x _rempty $0": "(fn_3 (_rrevcdr (fn_2 $0)) _rempty _x)"
                },
                {
                    "fn_6 _rempty _x $0": "(fn_3 (_rrevcdr (fn_2 $0)) _x _rempty)"
                },
                {
                    "fn_6 _j _r (_rflatten (_rappend _j (fn_2 $0)))": "(fn_3 (_rrevcdr (fn_2 (_rflatten (_rappend _j (fn_2 $0))))) _r _j)"
                },
                {
                    "fn_6 _q _r (_rflatten (fn_2 $0))": "(fn_3 (_rrevcdr (fn_2 (_rflatten (fn_2 $0)))) _r _q)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1515,
            "final_cost": 46968,
            "compression_ratio": 1.0322560040878896,
            "cumulative_compression_ratio": 1.9381919604837337,
            "num_uses": 44,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _n _a)": "(_rflatten (_rappend (_rconcat _n _a) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (_rflatten (_rrevcdr (fn_2 $0))) (_rconcat _o _u)": "(_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (fn_2 $0)))))))"
                },
                {
                    "fn_7 $0 (_rconcat _r _j)": "(_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _t _m)": "(_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _x _p)": "(_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _x _s)": "(_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (fn_3 (fn_2 $0) _o _m) _g": "(_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (fn_3 (fn_2 $0) _o _m)))))"
                },
                {
                    "fn_7 (fn_3 (fn_2 $0) _o _o) _g": "(_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (fn_3 (fn_2 $0) _o _o)))))"
                },
                {
                    "fn_7 (fn_3 (fn_2 $0) _o _w) _g": "(_rflatten (_rappend _g (_rrevcdr (_rsplit _rdot (fn_3 (fn_2 $0) _o _w)))))"
                },
                {
                    "fn_7 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (fn_4 $0 _i _n) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (fn_4 $0 _i _n)))))"
                },
                {
                    "fn_7 (fn_3 (fn_2 $0) _o _o) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (fn_3 (fn_2 $0) _o _o)))))"
                },
                {
                    "fn_7 (fn_3 (fn_2 $0) _t _m) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (fn_3 (fn_2 $0) _t _m)))))"
                },
                {
                    "fn_7 (fn_6 _q _r $0) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (fn_6 _q _r $0)))))"
                },
                {
                    "fn_7 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 _s": "(_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_2 $0))))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend (_rconcat _o _o) (_rrevcdr (_rrevcdr (fn_2 $0)))))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _e (fn_2 $0))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (fn_2 $0)))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _k (fn_2 $0))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _k (fn_2 $0)))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _m (fn_2 $0))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (fn_2 $0)))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _u (fn_2 $0))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (fn_2 $0)))))))"
                },
                {
                    "fn_7 $0 _v": "(_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 $0 _w": "(_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (_rflatten (fn_2 $0)) _w": "(_rflatten (_rappend _w (_rrevcdr (_rsplit _rdot (_rflatten (fn_2 $0))))))"
                },
                {
                    "fn_7 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (_rflatten (_rrevcdr (fn_2 $0))) _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (fn_2 $0)))))))"
                },
                {
                    "fn_7 $0 _y": "(_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (fn_2 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (#(lambda (_rsplit _rempty $0)) $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 45756,
            "compression_ratio": 1.026488329399423,
            "cumulative_compression_ratio": 1.9895314275723401,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _a": "(_rflatten (_rappend _a (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _d": "(_rflatten (_rappend _d (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _e": "(_rflatten (_rappend _e (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (_rappend _j (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _k": "(_rflatten (_rappend _k (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _m": "(_rflatten (_rappend _m (fn_2 $0)))"
                },
                {
                    "fn_8 $0 _q": "(_rflatten (_rappend _q (fn_2 $0)))"
                },
                {
                    "fn_8 (fn_6 _r _rempty $0) _q": "(_rflatten (_rappend _q (fn_2 (fn_6 _r _rempty $0))))"
                },
                {
                    "fn_8 $0 _u": "(_rflatten (_rappend _u (fn_2 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_3 (fn_2 #2) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr $2))))))) (#(lambda (_rsplit _rempty $0)) $0) $1 $2))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 1111,
            "final_cost": 44645,
            "compression_ratio": 1.0248852055101356,
            "cumulative_compression_ratio": 2.0390413260163514,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _o _a $0": "(fn_3 (fn_2 $0) _a _o)"
                },
                {
                    "fn_9 _v _c $0": "(fn_3 (fn_2 $0) _c _v)"
                },
                {
                    "fn_9 _y _i $0": "(fn_3 (fn_2 $0) _i _y)"
                },
                {
                    "fn_9 _a _n $0": "(fn_3 (fn_2 $0) _n _a)"
                },
                {
                    "fn_9 _g _o $0": "(fn_3 (fn_2 $0) _o _g)"
                },
                {
                    "fn_9 _m _o $0": "(fn_3 (fn_2 $0) _o _m)"
                },
                {
                    "fn_9 _o _o $0": "(fn_3 (fn_2 $0) _o _o)"
                },
                {
                    "fn_9 _w _o $0": "(fn_3 (fn_2 $0) _o _w)"
                },
                {
                    "fn_9 _j _r $0": "(fn_3 (fn_2 $0) _r _j)"
                },
                {
                    "fn_9 _w _rempty $0": "(fn_3 (fn_2 $0) _rempty _w)"
                },
                {
                    "fn_9 _m _t $0": "(fn_3 (fn_2 $0) _t _m)"
                },
                {
                    "fn_9 _i _w $0": "(fn_3 (fn_2 $0) _w _i)"
                },
                {
                    "fn_9 _p _x $0": "(fn_3 (fn_2 $0) _x _p)"
                },
                {
                    "fn_9 _s _x $0": "(fn_3 (fn_2 $0) _x _s)"
                },
                {
                    "fn_9 _u _o (_rflatten (_rrevcdr (fn_2 $0)))": "(fn_3 (fn_2 (_rflatten (_rrevcdr (fn_2 $0)))) _o _u)"
                },
                {
                    "fn_9 _y _i (_rflatten (fn_2 $0))": "(fn_3 (fn_2 (_rflatten (fn_2 $0))) _i _y)"
                },
                {
                    "fn_9 _p _x (_rflatten (fn_2 $0))": "(fn_3 (fn_2 (_rflatten (fn_2 $0))) _x _p)"
                },
                {
                    "fn_9 _s _x (_rflatten (fn_2 $0))": "(fn_3 (fn_2 (_rflatten (fn_2 $0))) _x _s)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}