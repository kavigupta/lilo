{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_96_CPUs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 222 333 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 66295,
    "final_cost": 30611,
    "compression_ratio": 2.1657247394727386,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _w _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _rempty _u)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _r _u) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _r _rempty) _u) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n (_rconcat _a _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _rempty _r) _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _j)) (_rsplit _rempty (_rflatten (map (lam _q) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))))))))))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e (_rconcat _rempty _e)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y (_rconcat _rempty _w)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _y (_rconcat _w _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _c (_rconcat _rempty _v)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _c _rempty) _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _c) _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _g _rempty) _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _i (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i (_rconcat _rempty _r)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _g $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0))))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _m _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _rempty _m)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _r _rempty) _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _a (_rconcat _o _rempty)) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _y $0)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u $0)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u (_rconcat _e _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _rempty _t) $0) _n $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _t _rempty) $0) _n $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _h) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _h _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _h _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _h) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _g (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _j (_rsplit _g (_rflatten (cons (_rconcat _o _rempty) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g $0)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _c $0))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _g _rempty) _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _g _l) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _g (_rconcat _l _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _a _w) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _a _rempty) _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _g)) (_rsplit _rempty (_rflatten (map (lam _n) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _x) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _x _rempty) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _j _rempty) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _rempty _t) $0) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _t _rempty) $0) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _o (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (if (_rmatch _u _l) $0 $0)))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 (_rconcat _rempty _b))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty $0) _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h (_rconcat _r _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h (_rconcat _rempty _r))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _g $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _k _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _k) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c (_rflatten (cons _rempty (_rsplit _g $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _a) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _o _rempty) $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rconcat _rempty _o) $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _g $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _j $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (_rflatten (cons _a (_rsplit _g $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _l _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))))))))"
    ],
    "rewritten": [
        "(lam (fn_4 $0 _w))",
        "(lam (fn_4 (fn_1 $0 (lam $0)) _w))",
        "(lam (fn_1 (fn_4 $0 _w) (lam $0)))",
        "(lam (fn_4 $0 (_rconcat _w _rempty)))",
        "(lam (fn_4 (fn_4 $0 _rempty) _w))",
        "(lam (fn_3 _y _d $0))",
        "(lam (fn_3 _y _d (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_3 _y _d $0) (lam $0)))",
        "(lam (fn_4 (fn_3 _y _d $0) _rempty))",
        "(lam (fn_3 (_rconcat _rempty _y) _d $0))",
        "(lam (fn_0 $0 _u _r))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _u _r))",
        "(lam (fn_0 $0 (_rconcat _rempty _u) _r))",
        "(lam (fn_0 $0 _rempty (_rconcat _r _u)))",
        "(lam (fn_0 $0 _u (_rconcat _r _rempty)))",
        "(lam (fn_0 $0 _a _n))",
        "(lam (fn_0 $0 (_rconcat _a _rempty) _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n))",
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam $0)))",
        "(lam (fn_7 _rempty _k $0))",
        "(lam (fn_7 _k _rempty $0))",
        "(lam (fn_2 $0 _r))",
        "(lam (fn_2 $0 (_rconcat _rempty _r)))",
        "(lam (fn_2 $0 (_rconcat _r _rempty)))",
        "(lam (fn_2 $0 (_rconcat _rempty _r)))",
        "(lam (fn_2 $0 (_rconcat (_rconcat _rempty _r) _rempty)))",
        "(lam (fn_4 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (fn_7 _j _q $0))",
        "(lam (fn_7 _j _q (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_1 $0 (lam _q)) (lam (_rconcat $0 _j))))",
        "(lam (fn_1 (fn_1 $0 (lam _j)) (lam (_rconcat _q $0))))",
        "(lam (fn_2 (fn_1 (fn_2 (fn_4 (fn_7 _j _q $0) _q) _rempty) (lam $0)) _j))",
        "(lam (fn_2 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (fn_0 $0 (_rconcat _rempty _e) _e))",
        "(lam (fn_0 (fn_4 $0 _rempty) _e _e))",
        "(lam (fn_0 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) _e _e))",
        "(lam (fn_1 $0 (lam _j)))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _rdot) $0))))",
        "(lam (fn_7 _s _h $0))",
        "(lam (fn_7 _s _h (fn_1 $0 (lam $0))))",
        "(lam (fn_7 _s _h (fn_1 $0 (lam _s))))",
        "(lam (fn_7 _s (_rconcat _h _rempty) $0))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_1 $0 (lam (if (_rmatch $0 _r) _j $0))))",
        "(lam (fn_3 _j _r $0))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_1 (fn_0 $0 _w _y) (lam $0)))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _w _y))",
        "(lam (fn_0 $0 (_rconcat _rempty _w) _y))",
        "(lam (fn_0 $0 (_rconcat _w _rempty) _y))",
        "(lam (fn_0 $0 _v _c))",
        "(lam (fn_0 $0 _v _c))",
        "(lam (fn_0 $0 (_rconcat _rempty _v) _c))",
        "(lam (fn_0 $0 _v (_rconcat _c _rempty)))",
        "(lam (fn_0 $0 _v (_rconcat _rempty _c)))",
        "(lam (fn_3 (_rconcat _d _q) _t $0))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 _a (_rconcat _g _rempty)))",
        "(lam (fn_0 (fn_5 $0 _a) _a _g))",
        "(lam (fn_0 (fn_5 $0 _m) _a _g))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (fn_1 (fn_5 $0 _b) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _p)) (lam _p)))",
        "(lam (fn_1 (fn_5 $0 _f) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam _p)))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _r _i))",
        "(lam (fn_0 $0 (_rconcat _r _rempty) _i))",
        "(lam (fn_0 $0 (_rconcat _rempty _r) _i))",
        "(lam (fn_0 (fn_4 $0 _rempty) _r _i))",
        "(lam (fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0))))",
        "(lam (fn_9 _p _p $0))",
        "(lam (fn_6 _p _p $0))",
        "(lam (fn_1 (fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0))) (lam $0)))",
        "(lam (fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0))))",
        "(lam (fn_8 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (fn_4 $0 _p))",
        "(lam (fn_4 (fn_1 $0 (lam $0)) _p))",
        "(lam (fn_1 (fn_4 $0 _p) (lam $0)))",
        "(lam (fn_2 (fn_4 $0 _p) _p))",
        "(lam (fn_2 (fn_4 $0 _d) _p))",
        "(lam (fn_5 $0 _b))",
        "(lam (fn_0 $0 _b _rempty))",
        "(lam (fn_0 $0 _rempty _b))",
        "(lam (fn_4 (fn_5 $0 _b) _rempty))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _m _r))",
        "(lam (fn_0 $0 (_rconcat _m _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat _rempty _m) _r))",
        "(lam (fn_0 $0 _m (_rconcat _r _rempty)))",
        "(lam (fn_2 $0 (_rconcat _a _o)))",
        "(lam (fn_4 (fn_2 $0 _a) _o))",
        "(lam (fn_2 $0 (_rconcat _a (_rconcat _o _rempty))))",
        "(lam (fn_2 $0 (_rconcat (_rconcat _a _rempty) _o)))",
        "(lam (fn_4 (fn_1 (fn_2 $0 _a) (lam $0)) _o))",
        "(lam (fn_9 _e _n $0))",
        "(lam (fn_9 _i _d $0))",
        "(lam (fn_3 (_rconcat _d _i) _d $0))",
        "(lam (fn_5 $0 _f))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (fn_0 $0 _c _y))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (fn_7 _t _y $0))",
        "(lam (fn_1 (fn_1 $0 (lam _t)) (lam (_rconcat _y $0))))",
        "(lam (fn_1 (fn_1 $0 (lam _y)) (lam (_rconcat $0 _t))))",
        "(lam (fn_7 _t _y (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_7 _t _y $0) (lam $0)))",
        "(lam (fn_7 _i _n $0))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 $0 (_rconcat _i _y)))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lam (fn_6 _u _c $0))",
        "(lam (fn_7 _e _u $0))",
        "(lam (fn_1 (fn_1 $0 (lam _e)) (lam (_rconcat _u $0))))",
        "(lam (fn_7 (_rconcat _e _rempty) _u $0))",
        "(lam (fn_7 _e _u (fn_1 $0 (lam _e))))",
        "(lam (fn_7 _e _u (fn_5 $0 _b)))",
        "(lam (fn_3 _n _t $0))",
        "(lam (fn_3 _n _t (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_3 _n _t $0) (lam $0)))",
        "(lam (fn_3 _n (_rconcat _rempty _t) $0))",
        "(lam (fn_3 _n (_rconcat _t _rempty) $0))",
        "(lam (fn_5 $0 _h))",
        "(lam (fn_0 $0 _h _rempty))",
        "(lam (fn_0 $0 _rempty _h))",
        "(lam (fn_0 $0 _rempty _h))",
        "(lam (fn_0 $0 _h _rempty))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_8 (fn_5 $0 _o) _j))",
        "(lam (fn_1 (fn_0 $0 _o _j) (lam $0)))",
        "(lam (fn_8 (fn_0 $0 _rempty _o) _j))",
        "(lam (fn_7 _i _g $0))",
        "(lam (fn_1 (fn_1 $0 (lam _i)) (lam (_rconcat _g $0))))",
        "(lam (fn_7 _rempty (_rconcat _g _i) $0))",
        "(lam (fn_7 _i (_rconcat _g _rempty) $0))",
        "(lam (fn_7 _i _g (fn_1 $0 (lam _i))))",
        "(lam (fn_2 $0 (_rconcat _o _m)))",
        "(lam (fn_4 (fn_2 $0 _o) _m))",
        "(lam (fn_4 (fn_2 (fn_1 $0 (lam $0)) _o) _m))",
        "(lam (fn_4 (fn_1 (fn_2 $0 _o) (lam $0)) _m))",
        "(lam (fn_4 (fn_2 (fn_4 $0 _rempty) _o) _m))",
        "(lam (fn_7 _x _h $0))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _r _r))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_2 $0 (_rconcat _o _g)))",
        "(lam (fn_4 (fn_2 $0 _o) _g))",
        "(lam (fn_4 (fn_2 $0 (_rconcat _rempty _o)) _g))",
        "(lam (fn_4 (fn_1 (fn_2 $0 _o) (lam $0)) _g))",
        "(lam (fn_4 (fn_2 (fn_4 $0 _rempty) _o) _g))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 (fn_5 $0 _rempty) _a _e))",
        "(lam (fn_0 (fn_0 $0 _rempty _rempty) _a _e))",
        "(lam (fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_4 $0 _q))",
        "(lam (fn_4 (fn_1 $0 (lam $0)) _q))",
        "(lam (fn_1 (fn_4 $0 _q) (lam $0)))",
        "(lam (fn_4 $0 (_rconcat _q _rempty)))",
        "(lam (fn_4 $0 (_rconcat _rempty _q)))",
        "(lam (fn_0 $0 _s _i))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (fn_0 $0 _l _g))",
        "(lam (fn_0 $0 _l _g))",
        "(lam (fn_0 $0 _l (_rconcat _g _rempty)))",
        "(lam (fn_0 $0 _rempty (_rconcat _g _l)))",
        "(lam (fn_0 $0 (_rconcat _l _rempty) _g))",
        "(lam (fn_5 $0 _m))",
        "(lam (fn_0 $0 _m _rempty))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_0 $0 _rempty (_rconcat _a _w)))",
        "(lam (fn_0 $0 _w (_rconcat _a _rempty)))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_2 $0 (_rconcat _r _j)))",
        "(lam (fn_4 (fn_2 $0 _r) _j))",
        "(lam (fn_4 (fn_2 $0 (_rconcat _rempty _r)) _j))",
        "(lam (fn_4 (fn_2 $0 (_rconcat _r _rempty)) _j))",
        "(lam (fn_4 (fn_1 (fn_2 $0 _r) (lam $0)) _j))",
        "(lam (fn_7 _p _i $0))",
        "(lam (fn_7 _p _i (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_7 _p _i $0) (lam $0)))",
        "(lam (fn_1 (fn_1 $0 (lam _p)) (lam (_rconcat _i $0))))",
        "(lam (fn_7 _p _i (fn_1 $0 (lam _p))))",
        "(lam (fn_7 _g _n $0))",
        "(lam (fn_7 _g _n (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_7 _g _n $0) (lam $0)))",
        "(lam (fn_1 (fn_1 $0 (lam _g)) (lam (_rconcat _n $0))))",
        "(lam (fn_1 (fn_1 $0 (lam _n)) (lam (_rconcat $0 _g))))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _x)))",
        "(lam (fn_0 $0 _i (_rconcat _x _rempty)))",
        "(lam (fn_0 (fn_5 $0 _m) _i _x))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _i _q))",
        "(lam (fn_0 $0 (_rconcat _i _rempty) _q))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) _i _q))",
        "(lam (fn_2 (fn_1 (fn_2 $0 _rempty) (lam $0)) _j))",
        "(lam (fn_2 (fn_2 $0 _rempty) _j))",
        "(lam (fn_2 (fn_2 $0 (_rconcat _rempty _rempty)) _j))",
        "(lam (fn_2 (fn_2 $0 _rempty) (_rconcat _j _rempty)))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_2 $0 _i))",
        "(lam (fn_2 $0 (_rconcat _rempty _i)))",
        "(lam (fn_2 $0 (_rconcat _i _rempty)))",
        "(lam (fn_2 (fn_1 $0 (lam $0)) _i))",
        "(lam (fn_2 (fn_2 $0 _i) _i))",
        "(lam (fn_3 _k _t $0))",
        "(lam (fn_3 _k _t (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_3 _k _t $0) (lam $0)))",
        "(lam (fn_3 _k (_rconcat _rempty _t) $0))",
        "(lam (fn_3 _k (_rconcat _t _rempty) $0))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (fn_0 (fn_5 $0 _rempty) _s _e))",
        "(lam (fn_0 (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_0 (_rflatten (cons _o (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_0 (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_0 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (fn_1 (if (_rmatch _u _l) $0 $0) (lam (_rconcat _l $0))))",
        "(lam (car (map (lam (fn_1 $1 (lam (_rconcat _l $0)))) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_5 (fn_5 $0 _rempty) _q))",
        "(lam (fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (fn_5 $0 _rempty))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_2 (fn_2 (fn_1 (fn_2 $0 _rempty) (lam $0)) _j) (_rconcat _r _q)))",
        "(lam (fn_2 (fn_2 $0 _rempty) (_rconcat _r _q)))",
        "(lam (fn_2 (fn_2 (fn_1 (fn_2 (fn_1 $0 (lam $0)) _rempty) (lam $0)) _j) (_rconcat _r _q)))",
        "(lam (fn_2 (fn_1 (fn_2 (fn_1 (fn_2 $0 _rempty) (lam $0)) _j) (lam $0)) (_rconcat _r _q)))",
        "(lam (fn_2 (fn_2 $0 (_rconcat _rempty _rempty)) (_rconcat _r _q)))",
        "(lam (fn_1 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat $0 _b))))",
        "(lam (fn_1 (fn_1 $0 (lam (_rconcat $0 _b))) (lam $0)))",
        "(lam (fn_1 $0 (lam (_rconcat $0 (_rconcat _rempty _b)))))",
        "(lam (fn_1 $0 (lam (_rconcat (_rconcat _rempty $0) _b))))",
        "(lam (fn_7 _r _h $0))",
        "(lam (fn_7 _r _h (fn_1 $0 (lam $0))))",
        "(lam (fn_7 (_rconcat _r _rempty) _h $0))",
        "(lam (fn_7 (_rconcat _rempty _r) _h $0))",
        "(lam (fn_7 _r _h (fn_8 $0 _rempty)))",
        "(lam (fn_4 $0 _k))",
        "(lam (fn_4 (fn_1 $0 (lam $0)) _k))",
        "(lam (fn_4 $0 (_rconcat _k _rempty)))",
        "(lam (fn_4 $0 (_rconcat _rempty _k)))",
        "(lam (fn_4 (fn_8 $0 _rempty) _k))",
        "(lam (fn_2 (fn_1 (fn_2 $0 _rempty) (lam $0)) _j))",
        "(lam (fn_2 (fn_2 $0 _rempty) _j))",
        "(lam (fn_2 (fn_2 $0 (_rconcat _rempty _rempty)) _j))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_4 (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lam (fn_4 $0 _a))",
        "(lam (fn_4 (fn_1 $0 (lam $0)) _a))",
        "(lam (fn_4 $0 (_rconcat _a _rempty)))",
        "(lam (fn_4 $0 (_rconcat _rempty _a)))",
        "(lam (fn_2 (fn_4 $0 _a) _a))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_4 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lam (fn_6 _r _o $0))",
        "(lam (fn_6 _r _o (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_6 _r _o $0) (lam $0)))",
        "(lam (fn_6 _r (_rconcat _o _rempty) $0))",
        "(lam (fn_6 _r (_rconcat _rempty _o) $0))",
        "(lam (fn_3 _l _o $0))",
        "(lam (fn_3 _l _o (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_3 _l _o $0) (lam $0)))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _j $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (fn_8 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (fn_1 $0 (lam _l)))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam _l)))",
        "(lam (fn_7 _rempty _l $0))",
        "(lam (fn_1 (fn_1 $0 (lam _i)) (lam _l)))",
        "(lam (fn_1 (fn_1 $0 (lam _l)) (lam _l)))",
        "(lam (fn_2 $0 (_rconcat _o _j)))",
        "(lam (fn_2 $0 (_rconcat _o _j)))",
        "(lam (fn_4 (fn_2 $0 _o) _j))",
        "(lam (fn_1 (fn_2 $0 (_rconcat _o _j)) (lam $0)))",
        "(lam (fn_2 (fn_1 $0 (lam $0)) (_rconcat _o _j)))",
        "(lam (fn_2 $0 (_rconcat _c _v)))",
        "(lam (fn_4 (fn_2 $0 _c) _v))",
        "(lam (fn_2 $0 (_rconcat (_rconcat _rempty _c) _v)))",
        "(lam (fn_4 (fn_2 $0 (_rconcat _rempty _c)) _v))",
        "(lam (fn_4 (fn_1 (fn_2 $0 _c) (lam $0)) _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _w _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _w))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _y _d $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _y _d (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _y _d $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _y _d $0) _rempty))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _rempty _y) _d $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _u) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _r _u)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _u (_rconcat _r _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _a _rempty) _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty _k $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _k _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat (_rconcat _rempty _r) _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _q)) (lambda (_rconcat $0 _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0) _q) _rempty) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) _e _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _s))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s (_rconcat _h _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _r) _j $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _y) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _w) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _w _rempty) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _v) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v (_rconcat _c _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v (_rconcat _rempty _c)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _d _q) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a (_rconcat _g _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a) _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _m) _a _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _r _rempty) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _r) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _p $0) (_rconcat $0 $0) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $0 $3) $0)))))) _p _p $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _p _p $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _p $0) (_rconcat $0 $0) $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d) _p))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _rempty))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _m _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _m) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _m (_rconcat _r _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _a) _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _a (_rconcat _o _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat (_rconcat _a _rempty) _o)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _a) (lambda $0)) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $0 $3) $0)))))) _e _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $0 $3) $0)))))) _i _d $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _d _i) _d $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _c _y))",
        "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _t)) (lambda (_rconcat _y $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _y)) (lambda (_rconcat $0 _t))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _y)))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _u _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _e)) (lambda (_rconcat _u $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _e _rempty) _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _e))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _n _t $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _n _t (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _n _t $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _n (_rconcat _rempty _t) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _n (_rconcat _t _rempty) $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _o) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o _j) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _o) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i)) (lambda (_rconcat _g $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty (_rconcat _g _i) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i (_rconcat _g _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) (lambda $0)) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _o) _m))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (map (lambda (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r _r))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r _r))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _g)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _o)) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) (lambda $0)) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _o) _g))",
        "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty) _a _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _rempty) _a _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _q)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _s _i))",
        "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l (_rconcat _g _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _g _l)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _l _rempty) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _m _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _m))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w (_rconcat _a _rempty)))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _r)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _rempty)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)) (lambda (_rconcat _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _g)) (lambda (_rconcat _n $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _n)) (lambda (_rconcat $0 _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _rempty _x)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _x _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _m) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _i _rempty) _q))",
        "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) _i _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _rempty)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (_rconcat _j _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k (_rconcat _rempty _t) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k (_rconcat _t _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _s _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _o (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (if (_rmatch _u _l) $0 $0) (lambda (_rconcat _l $0))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $1 (lambda (_rconcat _l $0)))) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (car (map (lambda (_rconcat _l $1)) (_rsplit _rempty $1))))))",
        "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q))",
        "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty))))))",
        "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j) (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _rempty) (lambda $0)) _j) (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j) (lambda $0)) (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _rempty)) (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 (_rconcat _rempty _b)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (_rconcat _rempty $0) _b))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _r _rempty) _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _r) _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _k _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _rempty) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _rempty)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _a _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _a)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _r _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _r _o (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _r _o $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _r (_rconcat _o _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0)))))) _r (_rconcat _rempty _o) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _l)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty _l $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _j)) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _o _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _c _v)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat (_rconcat _rempty _c) _v)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _c)) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) (lambda $0)) _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 10807,
            "final_cost": 55777,
            "compression_ratio": 1.1885723506104666,
            "cumulative_compression_ratio": 1.1885723506104666,
            "num_uses": 81,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _w (_rconcat _a _rempty)": "(_rflatten (cons (_rconcat (_rconcat _a _rempty) _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _a _w)": "(_rflatten (cons (_rconcat (_rconcat _a _w) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _v (_rconcat _c _rempty)": "(_rflatten (cons (_rconcat (_rconcat _c _rempty) _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _g _l)": "(_rflatten (cons (_rconcat (_rconcat _g _l) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _a (_rconcat _g _rempty)": "(_rflatten (cons (_rconcat (_rconcat _g _rempty) _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _l (_rconcat _g _rempty)": "(_rflatten (cons (_rconcat (_rconcat _g _rempty) _l) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _m (_rconcat _r _rempty)": "(_rflatten (cons (_rconcat (_rconcat _r _rempty) _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _u (_rconcat _r _rempty)": "(_rflatten (cons (_rconcat (_rconcat _r _rempty) _u) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _r _u)": "(_rflatten (cons (_rconcat (_rconcat _r _u) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _v (_rconcat _rempty _c)": "(_rflatten (cons (_rconcat (_rconcat _rempty _c) _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _x)": "(_rflatten (cons (_rconcat (_rconcat _rempty _x) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _x _rempty)": "(_rflatten (cons (_rconcat (_rconcat _x _rempty) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty _b": "(_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _v) _c": "(_rflatten (cons (_rconcat _c (_rconcat _rempty _v)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _v _c": "(_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _e) _e": "(_rflatten (cons (_rconcat _e (_rconcat _rempty _e)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0)))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _c $0))) _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _o (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _o (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _l _rempty) _g": "(_rflatten (cons (_rconcat _g (_rconcat _l _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _a _g": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) _a _g": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _l _g": "(_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty _h": "(_rflatten (cons (_rconcat _h _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _rempty) _i": "(_rflatten (cons (_rconcat _i (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _r) _i": "(_rflatten (cons (_rconcat _i (_rconcat _rempty _r)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _c $0))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _rempty) _n": "(_rflatten (cons (_rconcat _n (_rconcat _a _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _rempty _o": "(_rflatten (cons (_rconcat _o _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _q": "(_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 (_rconcat _m _rempty) _r": "(_rflatten (cons (_rconcat _r (_rconcat _m _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _m) _r": "(_rflatten (cons (_rconcat _r (_rconcat _rempty _m)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _u) _r": "(_rflatten (cons (_rconcat _r (_rconcat _rempty _u)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _u _r": "(_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _u _r": "(_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _b _rempty": "(_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _h _rempty": "(_rflatten (cons (_rconcat _rempty _h) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _m _rempty": "(_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _rempty _rempty": "(_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _w) _y": "(_rflatten (cons (_rconcat _y (_rconcat _rempty _w)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _rempty) _y": "(_rflatten (cons (_rconcat _y (_rconcat _w _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _c _y": "(_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 8181,
            "final_cost": 47703,
            "compression_ratio": 1.1692556023730163,
            "cumulative_compression_ratio": 1.3897448797769532,
            "num_uses": 175,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _p (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _q (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))))))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _w (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (fn_0 $0 _o _j) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _o _j))))"
                },
                {
                    "fn_1 (fn_0 $0 _w _y) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _w _y))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 (_rconcat _rempty _b)))": "(_rflatten (map (lam (_rconcat $0 (_rconcat _rempty _b))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _n) (_rsplit _rempty $0))) (lam (_rconcat $0 _g))": "(_rflatten (map (lam (_rconcat $0 _g)) (_rsplit _rempty (_rflatten (map (lam _n) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _q) (_rsplit _rempty $0))) (lam (_rconcat $0 _j))": "(_rflatten (map (lam (_rconcat $0 _j)) (_rsplit _rempty (_rflatten (map (lam _q) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _y) (_rsplit _rempty $0))) (lam (_rconcat $0 _t))": "(_rflatten (map (lam (_rconcat $0 _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _g _i) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _g _rempty) _i))": "(_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _h _rempty) _s))": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _rempty $0) _b))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty $0) _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam (_rconcat _g $0))": "(_rflatten (map (lam (_rconcat _g $0)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h (_rconcat _r _rempty)))": "(_rflatten (map (lam (_rconcat _h (_rconcat _r _rempty))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h (_rconcat _rempty _r)))": "(_rflatten (map (lam (_rconcat _h (_rconcat _rempty _r))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (_rsplit _g $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _g $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _s) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam (_rconcat _i $0))": "(_rflatten (map (lam (_rconcat _i $0)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _k _rempty))": "(_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $1 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_1 (if (_rmatch _u _l) $0 $0) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (if (_rmatch _u _l) $0 $0))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l _rempty))": "(_rflatten (map (lam (_rconcat _l _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _g) (_rsplit _rempty $0))) (lam (_rconcat _n $0))": "(_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty _k))": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam _e) (_rsplit _rempty $0))) (lam (_rconcat _u $0))": "(_rflatten (map (lam (_rconcat _u $0)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _u (_rconcat _e _rempty)))": "(_rflatten (map (lam (_rconcat _u (_rconcat _e _rempty))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _e) (_rsplit _rempty $0))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _t) (_rsplit _rempty $0))) (lam (_rconcat _y $0))": "(_rflatten (map (lam (_rconcat _y $0)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1)))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _r) _j $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _o _rempty) $0) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _o _rempty) $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _o) $0) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _rempty _o) $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _t) $0) _k $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _rempty _t) $0) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _t) $0) _n $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _rempty _t) $0) _n $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _t _rempty) $0) _k $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _t _rempty) $0) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rconcat _t _rempty) $0) _n $0))": "(_rflatten (map (lam (if (_rmatch (_rconcat _t _rempty) $0) _n $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _c $0) (_rconcat _u $0) $0))": "(_rflatten (map (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0))": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat _d _i) $0))": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _d _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat _rempty _y) $0))": "(_rflatten (map (lam (if (_rmatch _d $0) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _d $0) _y $0))": "(_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch _d $0) _y $0))": "(_rflatten (map (lam (if (_rmatch _d $0) _y $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0))": "(_rflatten (map (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0))": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 _p) $0))": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat $0 _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0))": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat _p $0) $0))": "(_rflatten (map (lam (if (_rmatch _p $0) (_rconcat _p $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _r $0) _j $0))": "(_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) (_rconcat _d _q) $0))": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _n $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch _t $0) _n $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _n $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _g)": "(_rflatten (map (lam _g) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _i)": "(_rflatten (map (lam _i) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _l) (_rsplit _rempty $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam _n)": "(_rflatten (map (lam _n) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _f (cdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 (lam _q)": "(_rflatten (map (lam _q) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _s)": "(_rflatten (map (lam _s) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _t)": "(_rflatten (map (lam _t) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (lam _y)": "(_rflatten (map (lam _y) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 6060,
            "final_cost": 41872,
            "compression_ratio": 1.1392577378677875,
            "cumulative_compression_ratio": 1.5832776079480322,
            "num_uses": 77,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (_rconcat (_rconcat _a _rempty) _o)": "(_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat (_rconcat _rempty _c) _v)": "(_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat (_rconcat _rempty _r) _rempty)": "(_rflatten (_rappend (_rconcat (_rconcat _rempty _r) _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _a (_rconcat _o _rempty))": "(_rflatten (_rappend (_rconcat _a (_rconcat _o _rempty)) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _rempty)": "(_rflatten (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _j _rempty)": "(_rflatten (_rappend (_rconcat _j _rempty) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _j)": "(_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) (_rconcat _o _j)": "(_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _j)": "(_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0)))))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0)))))) (lam $0)))))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0)))))) (lam $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0)))))) (lam $0)) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0)))))) (lam $0))))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _rempty)": "(_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _c)": "(_rflatten (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _i)": "(_rflatten (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _o)": "(_rflatten (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _r)": "(_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _rempty)": "(_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _a (_rsplit _c $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 $0 _c": "(_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0)) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (lam $0))))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam (_rconcat _q _j)))))))))) (lam $0)) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam (_rconcat _q _j)))))))))) (lam $0))))))"
                },
                {
                    "fn_2 (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0)))))) (lam $0)) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0)))))) (lam $0))))))"
                },
                {
                    "fn_2 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _d (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _p (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam (_rconcat _q _j)))))) _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam (_rconcat _q _j))))))))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (fn_1 $0 (lam $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 2835,
            "final_cost": 39063,
            "compression_ratio": 1.0719094795586617,
            "cumulative_compression_ratio": 1.6971302767324579,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 (_rconcat _r #0) (_rconcat _o _rempty) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _o _rempty) $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_3 (_rconcat _r #0) (_rconcat _rempty _o) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _o) $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_3 _k (_rconcat _rempty _t) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _t) $0) _k $0)))"
                },
                {
                    "fn_3 _n (_rconcat _rempty _t) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _t) $0) _n $0)))"
                },
                {
                    "fn_3 _k (_rconcat _t _rempty) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _t _rempty) $0) _k $0)))"
                },
                {
                    "fn_3 _n (_rconcat _t _rempty) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _t _rempty) $0) _n $0)))"
                },
                {
                    "fn_3 (_rconcat _u #0) _c $0": "(fn_1 $0 (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)))"
                },
                {
                    "fn_3 (_rconcat #0 _i) _d $0": "(fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)))"
                },
                {
                    "fn_3 (_rconcat _d _i) _d $0": "(fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat _d _i) $0)))"
                },
                {
                    "fn_3 (_rconcat _rempty _y) _d $0": "(fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat _rempty _y) $0)))"
                },
                {
                    "fn_3 _y _d $0": "(fn_1 $0 (lam (if (_rmatch _d $0) _y $0)))"
                },
                {
                    "fn_3 (_rconcat #0 _e) _n $0": "(fn_1 $0 (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)))"
                },
                {
                    "fn_3 (_rconcat _r #0) _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_3 _l _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) _l $0)))"
                },
                {
                    "fn_3 (_rconcat #0 #0) _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)))"
                },
                {
                    "fn_3 (_rconcat #0 _p) _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 _p) $0)))"
                },
                {
                    "fn_3 (_rconcat (_rconcat _rempty #0) #0) _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0)))"
                },
                {
                    "fn_3 (_rconcat _p #0) _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat _p $0) $0)))"
                },
                {
                    "fn_3 _j _r $0": "(fn_1 $0 (lam (if (_rmatch _r $0) _j $0)))"
                },
                {
                    "fn_3 (_rconcat _d _q) _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)))"
                },
                {
                    "fn_3 _k _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_3 _n _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _n $0)))"
                },
                {
                    "fn_3 _y _d (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _d $0) _y $0)))"
                },
                {
                    "fn_3 (_rconcat _r #0) _o (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_3 _l _o (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _o $0) _l $0)))"
                },
                {
                    "fn_3 _k _t (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_3 _n _t (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _t $0) _n $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 2121,
            "final_cost": 37013,
            "compression_ratio": 1.0553859454786156,
            "cumulative_compression_ratio": 1.7911274417096696,
            "num_uses": 54,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 (_rconcat _a _rempty)": "(_rflatten (_rappend (_rconcat _a _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _k _rempty)": "(_rflatten (_rappend (_rconcat _k _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _q _rempty)": "(_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _a)": "(_rflatten (_rappend (_rconcat _rempty _a) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _k)": "(_rflatten (_rappend (_rconcat _rempty _k) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _q)": "(_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _w _rempty)": "(_rflatten (_rappend (_rconcat _w _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_4 $0 _a": "(_rflatten (_rappend _a (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_1 $0 (lam $0)) _a": "(_rflatten (_rappend _a (_rsplit _c (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_4 $0 _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_1 (fn_2 $0 _o) (lam $0)) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_1 (fn_2 $0 _o) (lam $0)))))"
                },
                {
                    "fn_4 (fn_2 $0 (_rconcat _rempty _o)) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_2 $0 (_rconcat _rempty _o)))))"
                },
                {
                    "fn_4 (fn_2 $0 _o) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_2 $0 _o))))"
                },
                {
                    "fn_4 (fn_2 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_2 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o))))"
                },
                {
                    "fn_4 (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rsplit _c (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_4 (fn_1 (fn_2 $0 _r) (lam $0)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_1 (fn_2 $0 _r) (lam $0)))))"
                },
                {
                    "fn_4 (fn_2 $0 (_rconcat _r _rempty)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 $0 (_rconcat _r _rempty)))))"
                },
                {
                    "fn_4 (fn_2 $0 (_rconcat _rempty _r)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 $0 (_rconcat _rempty _r)))))"
                },
                {
                    "fn_4 (fn_2 $0 _o) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 $0 _o))))"
                },
                {
                    "fn_4 (fn_2 $0 _r) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 $0 _r))))"
                },
                {
                    "fn_4 $0 _k": "(_rflatten (_rappend _k (_rsplit _c $0)))"
                },
                {
                    "fn_4 (_rflatten (cons _rempty (_rsplit _g $0))) _k": "(_rflatten (_rappend _k (_rsplit _c (_rflatten (cons _rempty (_rsplit _g $0))))))"
                },
                {
                    "fn_4 (fn_1 $0 (lam $0)) _k": "(_rflatten (_rappend _k (_rsplit _c (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_4 (fn_1 (fn_2 $0 _o) (lam $0)) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_1 (fn_2 $0 _o) (lam $0)))))"
                },
                {
                    "fn_4 (fn_2 $0 _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 $0 _o))))"
                },
                {
                    "fn_4 (fn_2 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o))))"
                },
                {
                    "fn_4 (fn_2 (fn_1 $0 (lam $0)) _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 (fn_1 $0 (lam $0)) _o))))"
                },
                {
                    "fn_4 (fn_1 (fn_2 $0 _a) (lam $0)) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_1 (fn_2 $0 _a) (lam $0)))))"
                },
                {
                    "fn_4 (fn_2 $0 _a) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_2 $0 _a))))"
                },
                {
                    "fn_4 $0 _p": "(_rflatten (_rappend _p (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_1 $0 (lam $0)) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_4 $0 _q": "(_rflatten (_rappend _q (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_1 $0 (lam $0)) _q": "(_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_4 (fn_1 $0 (lam (_rconcat _q _j))) _q": "(_rflatten (_rappend _q (_rsplit _c (fn_1 $0 (lam (_rconcat _q _j))))))"
                },
                {
                    "fn_4 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _c $0)))"
                },
                {
                    "fn_4 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (fn_3 _y _d $0) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_3 _y _d $0))))"
                },
                {
                    "fn_4 $0 _u": "(_rflatten (_rappend _u (_rsplit _c $0)))"
                },
                {
                    "fn_4 (fn_1 (fn_2 $0 _c) (lam $0)) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_1 (fn_2 $0 _c) (lam $0)))))"
                },
                {
                    "fn_4 (fn_2 $0 (_rconcat _rempty _c)) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_2 $0 (_rconcat _rempty _c)))))"
                },
                {
                    "fn_4 (fn_2 $0 _c) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_2 $0 _c))))"
                },
                {
                    "fn_4 $0 _w": "(_rflatten (_rappend _w (_rsplit _c $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _rempty (_rsplit _c $0))) _w": "(_rflatten (_rappend _w (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_4 (fn_1 $0 (lam $0)) _w": "(_rflatten (_rappend _w (_rsplit _c (fn_1 $0 (lam $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1919,
            "final_cost": 35143,
            "compression_ratio": 1.053211165808269,
            "cumulative_compression_ratio": 1.8864354209942236,
            "num_uses": 19,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _h": "(_rflatten (cons _h (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _m": "(_rflatten (cons _m (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _o": "(_rflatten (cons _o (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) (_rconcat #0 $0) $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $3 $0) $0))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1821,
            "final_cost": 33322,
            "compression_ratio": 1.054648580517376,
            "cumulative_compression_ratio": 1.9895264389892564,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _r (_rconcat _o _rempty) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _o _rempty) $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_6 _r (_rconcat _rempty _o) $0": "(fn_1 $0 (lam (if (_rmatch (_rconcat _rempty _o) $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_6 _u _c $0": "(fn_1 $0 (lam (if (_rmatch _c $0) (_rconcat _u $0) $0)))"
                },
                {
                    "fn_6 _r _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_6 #0 _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty #0) _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat (_rconcat _rempty $0) $0) $0)))"
                },
                {
                    "fn_6 _p _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat _p $0) $0)))"
                },
                {
                    "fn_6 _r _o (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (_rconcat #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3))))))",
            "arity": 3,
            "name": "fn_7",
            "utility": 1020,
            "final_cost": 32315,
            "compression_ratio": 1.0311619990716385,
            "cumulative_compression_ratio": 2.05152406003404,
            "num_uses": 52,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 (_rconcat _rempty _b) #0 $0": "(fn_1 $0 (lam (_rconcat $0 (_rconcat _rempty _b))))"
                },
                {
                    "fn_7 _b #0 $0": "(fn_1 $0 (lam (_rconcat $0 _b)))"
                },
                {
                    "fn_7 _rempty (_rconcat _g _i) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _g _i) _rempty)))"
                },
                {
                    "fn_7 _i (_rconcat _g _rempty) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _g _rempty) _i)))"
                },
                {
                    "fn_7 _s (_rconcat _h _rempty) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _h _rempty) _s)))"
                },
                {
                    "fn_7 _b (_rconcat _rempty #0) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _rempty $0) _b)))"
                },
                {
                    "fn_7 _i _g $0": "(fn_1 $0 (lam (_rconcat _g _i)))"
                },
                {
                    "fn_7 (_rconcat _r _rempty) _h $0": "(fn_1 $0 (lam (_rconcat _h (_rconcat _r _rempty))))"
                },
                {
                    "fn_7 (_rconcat _rempty _r) _h $0": "(fn_1 $0 (lam (_rconcat _h (_rconcat _rempty _r))))"
                },
                {
                    "fn_7 _r _h $0": "(fn_1 $0 (lam (_rconcat _h _r)))"
                },
                {
                    "fn_7 _s _h $0": "(fn_1 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_7 _x _h $0": "(fn_1 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_7 _p _i $0": "(fn_1 $0 (lam (_rconcat _i _p)))"
                },
                {
                    "fn_7 _rempty _k $0": "(fn_1 $0 (lam (_rconcat _k _rempty)))"
                },
                {
                    "fn_7 #0 _l $0": "(fn_1 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_7 _rempty _l $0": "(fn_1 $0 (lam (_rconcat _l _rempty)))"
                },
                {
                    "fn_7 _g _n $0": "(fn_1 $0 (lam (_rconcat _n _g)))"
                },
                {
                    "fn_7 _i _n $0": "(fn_1 $0 (lam (_rconcat _n _i)))"
                },
                {
                    "fn_7 _j _q $0": "(fn_1 $0 (lam (_rconcat _q _j)))"
                },
                {
                    "fn_7 _k _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty _k)))"
                },
                {
                    "fn_7 (_rconcat _e _rempty) _u $0": "(fn_1 $0 (lam (_rconcat _u (_rconcat _e _rempty))))"
                },
                {
                    "fn_7 _e _u $0": "(fn_1 $0 (lam (_rconcat _u _e)))"
                },
                {
                    "fn_7 _t _y $0": "(fn_1 $0 (lam (_rconcat _y _t)))"
                },
                {
                    "fn_7 #0 _l $1": "(fn_1 $1 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_7 _r _h (_rflatten (cons _rempty (_rsplit _g $0)))": "(fn_1 (_rflatten (cons _rempty (_rsplit _g $0))) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_7 _b #0 (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat $0 _b)))"
                },
                {
                    "fn_7 _r _h (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_7 _s _h (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _h _s)))"
                },
                {
                    "fn_7 _p _i (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _i _p)))"
                },
                {
                    "fn_7 _g _n (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _n _g)))"
                },
                {
                    "fn_7 _j _q (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _q _j)))"
                },
                {
                    "fn_7 _t _y (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _y _t)))"
                },
                {
                    "fn_7 #0 _u (fn_1 $0 (lam _e))": "(fn_1 (fn_1 $0 (lam _e)) (lam (_rconcat _u $0)))"
                },
                {
                    "fn_7 _e _u (fn_1 $0 (lam _e))": "(fn_1 (fn_1 $0 (lam _e)) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_7 #0 _n (fn_1 $0 (lam _g))": "(fn_1 (fn_1 $0 (lam _g)) (lam (_rconcat _n $0)))"
                },
                {
                    "fn_7 #0 _g (fn_1 $0 (lam _i))": "(fn_1 (fn_1 $0 (lam _i)) (lam (_rconcat _g $0)))"
                },
                {
                    "fn_7 _i _g (fn_1 $0 (lam _i))": "(fn_1 (fn_1 $0 (lam _i)) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_7 #0 _q (fn_1 $0 (lam _j))": "(fn_1 (fn_1 $0 (lam _j)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_7 _g #0 (fn_1 $0 (lam _n))": "(fn_1 (fn_1 $0 (lam _n)) (lam (_rconcat $0 _g)))"
                },
                {
                    "fn_7 #0 _i (fn_1 $0 (lam _p))": "(fn_1 (fn_1 $0 (lam _p)) (lam (_rconcat _i $0)))"
                },
                {
                    "fn_7 _p _i (fn_1 $0 (lam _p))": "(fn_1 (fn_1 $0 (lam _p)) (lam (_rconcat _i _p)))"
                },
                {
                    "fn_7 _j #0 (fn_1 $0 (lam _q))": "(fn_1 (fn_1 $0 (lam _q)) (lam (_rconcat $0 _j)))"
                },
                {
                    "fn_7 _s _h (fn_1 $0 (lam _s))": "(fn_1 (fn_1 $0 (lam _s)) (lam (_rconcat _h _s)))"
                },
                {
                    "fn_7 #0 _y (fn_1 $0 (lam _t))": "(fn_1 (fn_1 $0 (lam _t)) (lam (_rconcat _y $0)))"
                },
                {
                    "fn_7 _t #0 (fn_1 $0 (lam _y))": "(fn_1 (fn_1 $0 (lam _y)) (lam (_rconcat $0 _t)))"
                },
                {
                    "fn_7 _e _u (fn_5 $0 _b)": "(fn_1 (fn_5 $0 _b) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_7 #0 _l (if (_rmatch _u _l) $0 $0)": "(fn_1 (if (_rmatch _u _l) $0 $0) (lam (_rconcat _l $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _g #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 909,
            "final_cost": 31420,
            "compression_ratio": 1.0284850413749205,
            "cumulative_compression_ratio": 2.1099618077657545,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _a": "(_rflatten (cons _a (_rsplit _g $0)))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _g $0)))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (_rsplit _g $0)))"
                },
                {
                    "fn_8 (fn_0 $0 _rempty _o) _j": "(_rflatten (cons _j (_rsplit _g (fn_0 $0 _rempty _o))))"
                },
                {
                    "fn_8 (fn_5 $0 _o) _j": "(_rflatten (cons _j (_rsplit _g (fn_5 $0 _o))))"
                },
                {
                    "fn_8 $0 _rempty": "(_rflatten (cons _rempty (_rsplit _g $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) (_rconcat $0 #0) $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $2 $0) (_rconcat $0 $3) $0))))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 809,
            "final_cost": 30611,
            "compression_ratio": 1.0264284080885957,
            "cumulative_compression_ratio": 2.1657247394727386,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _i _d $0": "(fn_1 $0 (lam (if (_rmatch _d $0) (_rconcat $0 _i) $0)))"
                },
                {
                    "fn_9 _e _n $0": "(fn_1 $0 (lam (if (_rmatch _n $0) (_rconcat $0 _e) $0)))"
                },
                {
                    "fn_9 #0 _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 $0) $0)))"
                },
                {
                    "fn_9 _p _p $0": "(fn_1 $0 (lam (if (_rmatch _p $0) (_rconcat $0 _p) $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}