{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_96_CPUs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 222 333 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 31492,
    "final_cost": 14090,
    "compression_ratio": 2.235060326472676,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _w _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n (_rconcat _a _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e (_rconcat _rempty _e)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _g $0))))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0))))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _a (_rconcat _o _rempty)) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _c $0))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _a _w) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _a _rempty) _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _j _rempty) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (if (_rmatch _u _l) $0 $0)))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _g $0))))",
        "(lam (_rflatten (cons _b (_rsplit _j $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rempty $0))))))))"
    ],
    "rewritten": [
        "(lam (fn_3 $0 _w))",
        "(lam (fn_3 (fn_2 $0 (lam $0)) _w))",
        "(lam (fn_2 (fn_3 $0 _w) (lam $0)))",
        "(lam (fn_3 $0 (_rconcat _w _rempty)))",
        "(lam (fn_3 (fn_3 $0 _rempty) _w))",
        "(lam (fn_4 _a _n $0))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_4 _a _n $0))",
        "(lam (fn_4 (_rconcat _a _rempty) _n $0))",
        "(lam (fn_4 _a _n (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 $0 (lam _k)))",
        "(lam (fn_2 $0 (lam (_rconcat _rempty _k))))",
        "(lam (fn_2 $0 (lam (_rconcat _k _rempty))))",
        "(lam (fn_2 (fn_2 $0 (lam $0)) (lam _k)))",
        "(lam (fn_2 (fn_2 $0 (lam _k)) (lam $0)))",
        "(lam (fn_3 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (fn_1 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_4 _e _e $0))",
        "(lam (fn_4 _e _e $0))",
        "(lam (fn_4 (_rconcat _rempty _e) _e $0))",
        "(lam (fn_4 _e _e (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))",
        "(lam (fn_4 _e _e (fn_3 $0 _rempty)))",
        "(lam (fn_2 $0 (lam _j)))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit (_rnot _rdot) $0))))",
        "(lam (fn_9 _s $0))",
        "(lam (fn_9 _s $0))",
        "(lam (fn_9 _s (fn_2 $0 (lam $0))))",
        "(lam (fn_2 $0 (lam (_rconcat (_rconcat _h _rempty) _s))))",
        "(lam (fn_9 _s (fn_2 $0 (lam _s))))",
        "(lam (fn_4 _i _w $0))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_4 _i _w $0))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_2 $0 (lam (if (_rmatch $0 _r) _j $0))))",
        "(lam (fn_2 $0 (lam (if (_rmatch _r $0) _j $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (fn_8 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _j $0))))",
        "(lam (_rflatten (cons _f (_rsplit _c $0))))",
        "(lam (fn_3 $0 _p))",
        "(lam (fn_3 (fn_2 $0 (lam $0)) _p))",
        "(lam (fn_2 (fn_3 $0 _p) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 _p) _p))",
        "(lam (fn_1 (fn_3 $0 _d) _p))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _b))",
        "(lam (fn_4 _b _rempty $0))",
        "(lam (fn_4 _rempty _b $0))",
        "(lam (fn_3 (fn_0 $0 _b) _rempty))",
        "(lam (fn_6 _o _a $0))",
        "(lam (fn_3 (fn_1 $0 _a) _o))",
        "(lam (fn_3 (fn_2 (fn_1 $0 _a) (lam $0)) _o))",
        "(lam (fn_6 _o (_rconcat _a _rempty) $0))",
        "(lam (fn_6 (_rconcat _o _rempty) _a $0))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _f))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_5 $0 _w))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (fn_4 _c _y $0))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (fn_2 $0 (lam (_rconcat _n _i))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 _y _i $0))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lam (fn_6 _m _o $0))",
        "(lam (fn_3 (fn_1 $0 _o) _m))",
        "(lam (fn_3 (fn_1 (fn_2 $0 (lam $0)) _o) _m))",
        "(lam (fn_3 (fn_2 (fn_1 $0 _o) (lam $0)) _m))",
        "(lam (fn_3 (fn_1 (fn_3 $0 _rempty) _o) _m))",
        "(lam (fn_9 _x $0))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lam (fn_4 _r _r $0))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_4 _r _r $0))",
        "(lam (_rflatten (_rsplit _rempty (fn_4 _r _r $0))))",
        "(lam (fn_6 _g _o $0))",
        "(lam (fn_3 (fn_1 $0 _o) _g))",
        "(lam (fn_3 (fn_2 (fn_1 $0 _o) (lam $0)) _g))",
        "(lam (fn_3 (fn_6 _o _rempty $0) _g))",
        "(lam (fn_3 (fn_1 (fn_3 $0 _rempty) _o) _g))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_5 $0 (_rconcat _e _a)))",
        "(lam (fn_4 _a _e (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_4 _a _e (fn_0 $0 _rempty)))",
        "(lam (fn_4 _a _e (fn_4 _rempty _rempty $0)))",
        "(lam (fn_3 $0 _q))",
        "(lam (fn_3 (fn_2 $0 (lam $0)) _q))",
        "(lam (fn_2 (fn_3 $0 _q) (lam $0)))",
        "(lam (fn_3 $0 (_rconcat _q _rempty)))",
        "(lam (fn_3 $0 (_rconcat _rempty _q)))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_4 _s _i $0))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _m))",
        "(lam (fn_4 _m _rempty $0))",
        "(lam (fn_4 _rempty _m $0))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_4 _w _a $0))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_4 _w _a $0))",
        "(lam (fn_4 _rempty (_rconcat _a _w) $0))",
        "(lam (fn_4 _w (_rconcat _a _rempty) $0))",
        "(lam (fn_6 _j _r $0))",
        "(lam (fn_3 (fn_1 $0 _r) _j))",
        "(lam (fn_3 (fn_2 (fn_1 $0 _r) (lam $0)) _j))",
        "(lam (fn_3 (fn_6 _rempty _r $0) _j))",
        "(lam (fn_3 (fn_6 _r _rempty $0) _j))",
        "(lam (fn_4 _i _q $0))",
        "(lam (fn_4 (_rconcat _i _rempty) _q $0))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_4 _i _q (fn_2 $0 (lam $0))))",
        "(lam (fn_4 _i _q (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_1 (fn_1 $0 _rempty) _j))",
        "(lam (fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_7 $0))",
        "(lam (fn_1 (fn_6 _rempty _rempty $0) _j))",
        "(lam (fn_6 _rempty _j (fn_1 $0 _rempty)))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_4 _s _e $0))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_2 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (fn_2 (if (_rmatch _u _l) $0 $0) (lam (_rconcat _l $0))))",
        "(lam (car (map (lam (fn_2 $1 (lam (_rconcat _l $0)))) (_rsplit _rempty $0))))",
        "(lam (fn_2 $0 (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1))))))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (fn_0 $0 _rempty))))))",
        "(lam (fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q))",
        "(lam (fn_0 (fn_0 $0 _rempty) _q))",
        "(lam (fn_1 (fn_1 $0 _rempty) _j))",
        "(lam (fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_7 $0))",
        "(lam (fn_3 (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lam (fn_1 (fn_6 _rempty _rempty $0) _j))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_3 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _j $0))))",
        "(lam (_rflatten (cons _b (_rsplit _c $0))))",
        "(lam (fn_6 _v _c $0))",
        "(lam (fn_3 (fn_1 $0 _c) _v))",
        "(lam (fn_3 (fn_2 (fn_1 $0 _c) (lam $0)) _v))",
        "(lam (fn_6 _v (_rconcat _rempty _c) $0))",
        "(lam (fn_3 (fn_6 _c _rempty $0) _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _w _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _w))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _n $0))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _a _rempty) _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _n (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _rempty _k))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _k _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _g $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _rempty _e) _e $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _e _e (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _e _e (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2))))) _s $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2))))) _s $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2))))) _s (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (_rconcat _h _rempty) _s))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2))))) _s (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _s))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _i _w $0))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _i _w $0))",
        "(lambda (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _r) _j $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _r $0) _j $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d) _p))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _b _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _rempty _b $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _rempty))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _o _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _a) _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _a) (lambda $0)) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _o (_rconcat _a _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _o _rempty) _a $0))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rdot $1))))))) $0 _w))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _c _y $0))",
        "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _i $0))",
        "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) (lambda $0)) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _o) _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2))))) _x $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (map (lambda (_rconcat _h _x)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _r _r $0))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _r _r $0))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _r _r $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _g _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) (lambda $0)) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _o _rempty $0) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _o) _g))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rdot $1))))))) $0 (_rconcat _e _a)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _e (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _e (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _a _e (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _rempty _rempty $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _q)))",
        "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _s _i $0))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _m))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _m _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _rempty _m $0))",
        "(lambda (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _w _a $0))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _w _a $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _rempty (_rconcat _a _w) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _w (_rconcat _a _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _r $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _r $0) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _r _rempty $0) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _i _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _i _rempty) _q $0))",
        "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _i _q (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _i _q (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j)) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _rempty $0) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _j (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2))))) _s _e $0))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (if (_rmatch _u _l) $0 $0) (lambda (_rconcat _l $0))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $1 (lambda (_rconcat _l $0)))) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (car (map (lambda (_rconcat _l $1)) (_rsplit _rempty $1))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rdot $1))))))) $0 _q))",
        "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j)) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _rempty $0) _j))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _h $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _v _c $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) (lambda $0)) _v))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _v (_rconcat _rempty _c) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _c _rempty $0) _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_0",
            "utility": 5858,
            "final_cost": 25714,
            "compression_ratio": 1.2247024966944078,
            "cumulative_compression_ratio": 1.2247024966944078,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat (_rconcat _a _rempty) _w)": "(_rflatten (cons (_rconcat (_rconcat _a _rempty) _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _a _w) _rempty)": "(_rflatten (cons (_rconcat (_rconcat _a _w) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _e (_rconcat _rempty _e))": "(_rflatten (cons (_rconcat _e (_rconcat _rempty _e)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0)))) (_rconcat _e _a)": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) (_rconcat _e _a)": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) (_rconcat _e _a)": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _c $0))) (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _s)": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _m _rempty)": "(_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _n (_rconcat _a _rempty))": "(_rflatten (cons (_rconcat _n (_rconcat _a _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _q (_rconcat _i _rempty))": "(_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _b)": "(_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _m)": "(_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _rempty)": "(_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _y _c)": "(_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 $0 _m": "(_rflatten (cons _m (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 4040,
            "final_cost": 21694,
            "compression_ratio": 1.1853046925417166,
            "cumulative_compression_ratio": 1.4516456162994376,
            "num_uses": 45,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (_rconcat (_rconcat _a _rempty) _o)": "(_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat (_rconcat _rempty _c) _v)": "(_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _a (_rconcat _o _rempty))": "(_rflatten (_rappend (_rconcat _a (_rconcat _o _rempty)) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _j _rempty)": "(_rflatten (_rappend (_rconcat _j _rempty) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _j)": "(_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _rempty)": "(_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _c)": "(_rflatten (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _o)": "(_rflatten (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _r)": "(_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _rempty)": "(_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _c": "(_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_1 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _d (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _p (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 2121,
            "final_cost": 19600,
            "compression_ratio": 1.1068367346938774,
            "cumulative_compression_ratio": 1.606734693877551,
            "num_uses": 38,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _p (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _w (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (fn_1 $0 _a) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _a))))"
                },
                {
                    "fn_2 (fn_1 $0 _c) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _c))))"
                },
                {
                    "fn_2 (fn_1 $0 _o) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _o))))"
                },
                {
                    "fn_2 (fn_1 $0 _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _r))))"
                },
                {
                    "fn_2 (fn_1 $0 _rempty) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _rempty))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat (_rconcat _h _rempty) _s))": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _s) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _k _rempty))": "(_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $1 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_2 (if (_rmatch _u _l) $0 $0) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (if (_rmatch _u _l) $0 $0))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _rempty _k))": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat _l $1)) (_rsplit _rempty $1)))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _r) _j $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch _r $0) _j $0))": "(_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam _s)": "(_rflatten (map (lam _s) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 1515,
            "final_cost": 18093,
            "compression_ratio": 1.083291880837893,
            "cumulative_compression_ratio": 1.7405626485381087,
            "num_uses": 40,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _q _rempty)": "(_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_3 $0 (_rconcat _rempty _q)": "(_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _c $0)))"
                },
                {
                    "fn_3 $0 (_rconcat _w _rempty)": "(_rflatten (_rappend (_rconcat _w _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_3 $0 _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_3 (fn_1 $0 (_rconcat _rempty _o)) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_1 $0 (_rconcat _rempty _o)))))"
                },
                {
                    "fn_3 (fn_1 $0 _o) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_1 $0 _o))))"
                },
                {
                    "fn_3 (fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o))))"
                },
                {
                    "fn_3 (fn_2 (fn_1 $0 _o) (lam $0)) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_2 (fn_1 $0 _o) (lam $0)))))"
                },
                {
                    "fn_3 (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rsplit _c (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_3 (fn_1 $0 (_rconcat _r _rempty)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_1 $0 (_rconcat _r _rempty)))))"
                },
                {
                    "fn_3 (fn_1 $0 (_rconcat _rempty _r)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_1 $0 (_rconcat _rempty _r)))))"
                },
                {
                    "fn_3 (fn_1 $0 _r) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_1 $0 _r))))"
                },
                {
                    "fn_3 (fn_2 (fn_1 $0 _r) (lam $0)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 (fn_1 $0 _r) (lam $0)))))"
                },
                {
                    "fn_3 (fn_1 $0 _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_1 $0 _o))))"
                },
                {
                    "fn_3 (fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _o))))"
                },
                {
                    "fn_3 (fn_1 (fn_2 $0 (lam $0)) _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_1 (fn_2 $0 (lam $0)) _o))))"
                },
                {
                    "fn_3 (fn_2 (fn_1 $0 _o) (lam $0)) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 (fn_1 $0 _o) (lam $0)))))"
                },
                {
                    "fn_3 (fn_1 $0 _a) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_1 $0 _a))))"
                },
                {
                    "fn_3 (fn_2 (fn_1 $0 _a) (lam $0)) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_2 (fn_1 $0 _a) (lam $0)))))"
                },
                {
                    "fn_3 $0 _p": "(_rflatten (_rappend _p (_rsplit _c $0)))"
                },
                {
                    "fn_3 (fn_2 $0 (lam $0)) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_2 $0 (lam $0)))))"
                },
                {
                    "fn_3 $0 _q": "(_rflatten (_rappend _q (_rsplit _c $0)))"
                },
                {
                    "fn_3 (fn_2 $0 (lam $0)) _q": "(_rflatten (_rappend _q (_rsplit _c (fn_2 $0 (lam $0)))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _c $0)))"
                },
                {
                    "fn_3 (fn_0 $0 _b) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_0 $0 _b))))"
                },
                {
                    "fn_3 $0 _u": "(_rflatten (_rappend _u (_rsplit _c $0)))"
                },
                {
                    "fn_3 (fn_1 $0 (_rconcat _rempty _c)) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_1 $0 (_rconcat _rempty _c)))))"
                },
                {
                    "fn_3 (fn_1 $0 _c) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_1 $0 _c))))"
                },
                {
                    "fn_3 (fn_2 (fn_1 $0 _c) (lam $0)) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_2 (fn_1 $0 _c) (lam $0)))))"
                },
                {
                    "fn_3 $0 _w": "(_rflatten (_rappend _w (_rsplit _c $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _c $0))) _w": "(_rflatten (_rappend _w (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 (lam $0)) _w": "(_rflatten (_rappend _w (_rsplit _c (fn_2 $0 (lam $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #2 (_rconcat #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat $1 $2)))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 1010,
            "final_cost": 17102,
            "compression_ratio": 1.057946439012981,
            "cumulative_compression_ratio": 1.8414220558998948,
            "num_uses": 33,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 _w (_rconcat _a _rempty) $0": "(fn_0 $0 (_rconcat (_rconcat _a _rempty) _w))"
                },
                {
                    "fn_4 _rempty (_rconcat _a _w) $0": "(fn_0 $0 (_rconcat (_rconcat _a _w) _rempty))"
                },
                {
                    "fn_4 _w _a $0": "(fn_0 $0 (_rconcat _a _w))"
                },
                {
                    "fn_4 _rempty _b $0": "(fn_0 $0 (_rconcat _b _rempty))"
                },
                {
                    "fn_4 (_rconcat _rempty _e) _e $0": "(fn_0 $0 (_rconcat _e (_rconcat _rempty _e)))"
                },
                {
                    "fn_4 _e _e $0": "(fn_0 $0 (_rconcat _e _e))"
                },
                {
                    "fn_4 _s _e $0": "(fn_0 $0 (_rconcat _e _s))"
                },
                {
                    "fn_4 _s _i $0": "(fn_0 $0 (_rconcat _i _s))"
                },
                {
                    "fn_4 _rempty _m $0": "(fn_0 $0 (_rconcat _m _rempty))"
                },
                {
                    "fn_4 (_rconcat _a _rempty) _n $0": "(fn_0 $0 (_rconcat _n (_rconcat _a _rempty)))"
                },
                {
                    "fn_4 _a _n $0": "(fn_0 $0 (_rconcat _n _a))"
                },
                {
                    "fn_4 (_rconcat _i _rempty) _q $0": "(fn_0 $0 (_rconcat _q (_rconcat _i _rempty)))"
                },
                {
                    "fn_4 _i _q $0": "(fn_0 $0 (_rconcat _q _i))"
                },
                {
                    "fn_4 _r _r $0": "(fn_0 $0 (_rconcat _r _r))"
                },
                {
                    "fn_4 _b _rempty $0": "(fn_0 $0 (_rconcat _rempty _b))"
                },
                {
                    "fn_4 _m _rempty $0": "(fn_0 $0 (_rconcat _rempty _m))"
                },
                {
                    "fn_4 _rempty _rempty $0": "(fn_0 $0 (_rconcat _rempty _rempty))"
                },
                {
                    "fn_4 _i _w $0": "(fn_0 $0 (_rconcat _w _i))"
                },
                {
                    "fn_4 _c _y $0": "(fn_0 $0 (_rconcat _y _c))"
                },
                {
                    "fn_4 _a _n (_rflatten (cons _a (cdr (_rsplit _rempty $0))))": "(fn_0 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) (_rconcat _n _a))"
                },
                {
                    "fn_4 _i _q (_rflatten (cons _f (cdr (_rsplit _rempty $0))))": "(fn_0 (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) (_rconcat _q _i))"
                },
                {
                    "fn_4 _a _e (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))": "(fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) (_rconcat _e _a))"
                },
                {
                    "fn_4 _e _e (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))": "(fn_0 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) (_rconcat _e _e))"
                },
                {
                    "fn_4 _a _e (fn_0 $0 (_rconcat _rempty _rempty))": "(fn_0 (fn_0 $0 (_rconcat _rempty _rempty)) (_rconcat _e _a))"
                },
                {
                    "fn_4 _a _e (fn_0 $0 _rempty)": "(fn_0 (fn_0 $0 _rempty) (_rconcat _e _a))"
                },
                {
                    "fn_4 _i _q (fn_2 $0 (lam $0))": "(fn_0 (fn_2 $0 (lam $0)) (_rconcat _q _i))"
                },
                {
                    "fn_4 _e _e (fn_3 $0 _rempty)": "(fn_0 (fn_3 $0 _rempty) (_rconcat _e _e))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rdot $1)))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 808,
            "final_cost": 16300,
            "compression_ratio": 1.04920245398773,
            "cumulative_compression_ratio": 1.9320245398773006,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _e _a)": "(_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_5 $0 _w": "(_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (_rconcat #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2)))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 606,
            "final_cost": 15698,
            "compression_ratio": 1.038348834246401,
            "cumulative_compression_ratio": 2.006115428717034,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _o (_rconcat _a _rempty) $0": "(fn_1 $0 (_rconcat (_rconcat _a _rempty) _o))"
                },
                {
                    "fn_6 _v (_rconcat _rempty _c) $0": "(fn_1 $0 (_rconcat (_rconcat _rempty _c) _v))"
                },
                {
                    "fn_6 (_rconcat _o _rempty) _a $0": "(fn_1 $0 (_rconcat _a (_rconcat _o _rempty)))"
                },
                {
                    "fn_6 _o _a $0": "(fn_1 $0 (_rconcat _a _o))"
                },
                {
                    "fn_6 _v _c $0": "(fn_1 $0 (_rconcat _c _v))"
                },
                {
                    "fn_6 _y _i $0": "(fn_1 $0 (_rconcat _i _y))"
                },
                {
                    "fn_6 _g _o $0": "(fn_1 $0 (_rconcat _o _g))"
                },
                {
                    "fn_6 _m _o $0": "(fn_1 $0 (_rconcat _o _m))"
                },
                {
                    "fn_6 _j _r $0": "(fn_1 $0 (_rconcat _r _j))"
                },
                {
                    "fn_6 _rempty _r $0": "(fn_1 $0 (_rconcat _r _rempty))"
                },
                {
                    "fn_6 _c _rempty $0": "(fn_1 $0 (_rconcat _rempty _c))"
                },
                {
                    "fn_6 _o _rempty $0": "(fn_1 $0 (_rconcat _rempty _o))"
                },
                {
                    "fn_6 _r _rempty $0": "(fn_1 $0 (_rconcat _rempty _r))"
                },
                {
                    "fn_6 _rempty _rempty $0": "(fn_1 $0 (_rconcat _rempty _rempty))"
                },
                {
                    "fn_6 _rempty _j (fn_1 $0 _rempty)": "(fn_1 (fn_1 $0 _rempty) (_rconcat _j _rempty))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 (fn_2 (fn_1 #0 _rempty) (lam $0)) _j)",
            "dreamcoder": "#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j))",
            "arity": 1,
            "name": "fn_7",
            "utility": 606,
            "final_cost": 15092,
            "compression_ratio": 1.0401537238271932,
            "cumulative_compression_ratio": 2.086668433607209,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0": "(fn_1 (fn_2 (fn_1 $0 _rempty) (lam $0)) _j)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _g #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 606,
            "final_cost": 14494,
            "compression_ratio": 1.0412584517731476,
            "cumulative_compression_ratio": 2.1727611425417415,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _g $0)))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (_rsplit _g $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 #1 (lam (_rconcat _h #0)))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h $2)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 406,
            "final_cost": 14090,
            "compression_ratio": 1.0286728176011355,
            "cumulative_compression_ratio": 2.235060326472676,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _s $0": "(fn_2 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_9 _x $0": "(fn_2 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_9 _s (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _h _s)))"
                },
                {
                    "fn_9 _s (fn_2 $0 (lam _s))": "(fn_2 (fn_2 $0 (lam _s)) (lam (_rconcat _h _s)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}