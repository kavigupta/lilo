{
    "DSL": {
        "logVariable": -0.7566605862822708,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -4.75539654525016
            },
            {
                "expression": "_rempty",
                "logProbability": -2.4452413933955697
            },
            {
                "expression": "_a",
                "logProbability": -3.275589695468999
            },
            {
                "expression": "_b",
                "logProbability": -3.566737975897266
            },
            {
                "expression": "_c",
                "logProbability": -3.742414989972552
            },
            {
                "expression": "_d",
                "logProbability": -3.8133018014195743
            },
            {
                "expression": "_e",
                "logProbability": -3.186274169994519
            },
            {
                "expression": "_f",
                "logProbability": -3.8705996172253165
            },
            {
                "expression": "_g",
                "logProbability": -3.6035172274005625
            },
            {
                "expression": "_h",
                "logProbability": -4.361138890162384
            },
            {
                "expression": "_i",
                "logProbability": -3.0609248939548204
            },
            {
                "expression": "_j",
                "logProbability": -3.648711558856939
            },
            {
                "expression": "_k",
                "logProbability": -4.02789198986602
            },
            {
                "expression": "_l",
                "logProbability": -3.772669398330355
            },
            {
                "expression": "_m",
                "logProbability": -3.86309958206877
            },
            {
                "expression": "_n",
                "logProbability": -3.782961084366902
            },
            {
                "expression": "_o",
                "logProbability": -3.5321576423004872
            },
            {
                "expression": "_p",
                "logProbability": -3.7669972333778885
            },
            {
                "expression": "_q",
                "logProbability": -3.537538821205004
            },
            {
                "expression": "_r",
                "logProbability": -3.1749461696893118
            },
            {
                "expression": "_s",
                "logProbability": -3.5384385063759014
            },
            {
                "expression": "_t",
                "logProbability": -3.2210490841711295
            },
            {
                "expression": "_u",
                "logProbability": -3.759109868544723
            },
            {
                "expression": "_v",
                "logProbability": -3.8121176686583578
            },
            {
                "expression": "_w",
                "logProbability": -3.606403232289698
            },
            {
                "expression": "_x",
                "logProbability": -3.880687975169658
            },
            {
                "expression": "_y",
                "logProbability": -4.003235193253159
            },
            {
                "expression": "_z",
                "logProbability": -6.722812899526437
            },
            {
                "expression": "_rnot",
                "logProbability": -5.824066477303191
            },
            {
                "expression": "_ror",
                "logProbability": -6.1694276613416505
            },
            {
                "expression": "_rconcat",
                "logProbability": -1.9508394964602225
            },
            {
                "expression": "_rmatch",
                "logProbability": -0.06070829332215233
            },
            {
                "expression": "_rsplit",
                "logProbability": -1.5224485204726665
            },
            {
                "expression": "_rflatten",
                "logProbability": -2.3963151095912476
            },
            {
                "expression": "_rtail",
                "logProbability": -4.166259897017806
            },
            {
                "expression": "_rappend",
                "logProbability": -2.2031734348559917
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -2.5625796881062177
            },
            {
                "expression": "if",
                "logProbability": -4.724715536986461
            },
            {
                "expression": "cons",
                "logProbability": -1.7211598755032051
            },
            {
                "expression": "car",
                "logProbability": -6.1039226962232975
            },
            {
                "expression": "cdr",
                "logProbability": -2.0334608712929017
            },
            {
                "expression": "map",
                "logProbability": -3.71383571025975
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _w _rempty) (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n (_rconcat _a _rempty)) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda _k) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _g $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _h $0))))"
                }
            ]
        },
        {
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e (_rconcat _rempty _e)) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_67_if_there_is_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _a) $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _b) $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit (_rnot _rdot) $0))))"
                }
            ]
        },
        {
            "task": "re2_train_68_if_there_is_any_letter_replace_that_with_h_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _h _rempty) _s)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lambda _s) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_76_if_there_is_r_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _r $0) _j $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _g $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _j $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _c $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rsplit _c (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a (_rconcat _o _rempty)) (_rrevcdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _c (cons _c (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_223_if_there_is_any_letter_replace_that_with_n_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit (_rnot _m) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_312_if_there_is_any_letter_replace_that_with_h_x",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (map (lambda (_rconcat _h _x)) (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _rempty _rempty) (cdr (_rsplit _rdot $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat (_rconcat _a _w) _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat (_rconcat _a _rempty) _w) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _j _rempty) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_417_if_there_is_any_letter_add_l_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty (if (_rmatch _u _l) $0 $0)))))"
                },
                {
                    "program": "(lambda (car (map (lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (car (map (lambda (_rconcat _l $1)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _h $0))))"
                }
            ]
        },
        {
            "task": "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _g $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _j $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rsplit _c (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        }
    ]
}