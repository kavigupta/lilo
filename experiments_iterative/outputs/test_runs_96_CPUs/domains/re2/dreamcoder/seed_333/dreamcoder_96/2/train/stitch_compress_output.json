{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_96_CPUs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 222 333 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 55557,
    "final_cost": 24256,
    "compression_ratio": 2.2904436015831133,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons (_rconcat _l _n) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (if (_rmatch _e $0) $0 _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _rempty) $0 (_rflatten (_rappend _f (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend (_rconcat _rempty _t) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend (_rconcat _t _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _m) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _l $0))))",
        "(lam (_rflatten (cons _j (_rsplit _n $0))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _c (cdr (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _a) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _p _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _p (_rconcat _rempty _rempty))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _rempty) _p)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _p) _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _r _v))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r (_rconcat _rempty _v))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r (_rconcat _v _rempty))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _r) _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (cons _g (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _d (_rsplit _b $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _e $0)) (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _d (_rsplit _b $0)))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons (_rconcat _m _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _m _m) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _o (_rappend (_rconcat _a _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend (_rconcat _rempty _a) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _f (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _g (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _y (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _y) _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _w) _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _e _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _t _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))",
        "(lam (_rflatten (cons _y (_rsplit _a $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _y (_rsplit _a $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _a (_rsplit _a $0))))))))",
        "(lam (_rflatten (cons _y (cons (car (_rsplit _rempty $0)) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _e (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) (_rsplit _rempty $0) (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (_rrevcdr (_rsplit _rempty $0))) _i) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rnot (_rtail (_rsplit _rempty $0))) _e) (_rflatten (_rappend _p (_rsplit _rempty $0))) $0))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend (_rconcat _o _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _m) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _s) $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _b _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _rempty _b) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _b) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _b $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _g (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _g (cons _s (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))",
        "(lam (_rflatten (_rsplit _rempty (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _c _rempty) (_rsplit _b $0)))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _rempty _c) (_rsplit _b $0)))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e (_rflatten (_rappend _rempty (_rsplit _b $0)))))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _r (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _j) (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _q) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _q _rempty) (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _b $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _a (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0)))))))",
        "(lam (_rflatten (_rappend _a (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _b $0)))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _i) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rappend _p (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _b (_rsplit _a $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _b) (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (cons _a (_rsplit _l $0))))",
        "(lam (_rflatten (cons _a (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _s (cdr (_rsplit _rempty (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _s _rempty) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _s _b) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _s (_rsplit _a (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _u _r))",
        "(lam (fn_5 $0 (_rconcat _r _u)))",
        "(lam (fn_5 (fn_0 $0 _u _r) _r))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 (fn_5 $0 _rempty) _n _l))",
        "(lam (fn_0 (_rflatten (cdr (_rsplit _rempty $0))) _n _l))",
        "(lam (fn_0 (fn_0 $0 _rempty _rempty) _n _l))",
        "(lam (fn_5 (_rflatten (cdr (_rsplit _rempty $0))) (_rconcat _l _n)))",
        "(lam (fn_9 $0 (_rconcat _l _n)))",
        "(lam (fn_8 $0 (lam (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0))))",
        "(lam (fn_8 $0 (lam (_rconcat (if (_rmatch _e $0) $0 _rempty) $0))))",
        "(lam (fn_7 _u _o $0))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _o _u))",
        "(lam (fn_7 _u _o $0))",
        "(lam (fn_1 (fn_1 $0 _rempty (_rconcat _rempty _rempty)) _o _u))",
        "(lam (fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lam (fn_4 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lam (fn_1 $0 _f _rempty))",
        "(lam (fn_1 $0 _rempty _f))",
        "(lam (fn_1 $0 (_rconcat _rempty _rempty) _f))",
        "(lam (fn_4 (fn_1 $0 _rempty _rempty) _f))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _rempty) $0 (fn_1 $0 _rempty _f)))",
        "(lam (fn_1 $0 _t _m))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _t _m))))",
        "(lam (fn_1 $0 (_rconcat _rempty _t) _m))",
        "(lam (fn_1 $0 (_rconcat _t _rempty) _m))",
        "(lam (fn_1 $0 _t (_rconcat _rempty _m)))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (fn_5 $0 (_rconcat _e _e)))",
        "(lam (fn_5 (fn_0 $0 _e _e) _e))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _l $0))))",
        "(lam (_rflatten (cons _j (_rsplit _n $0))))",
        "(lam (fn_5 (fn_0 $0 _i _r) _w))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (fn_5 (fn_0 $0 _i _g) _w))",
        "(lam (fn_5 (fn_0 $0 _i _r) _w))",
        "(lam (fn_5 (fn_0 $0 _i _r) _w))",
        "(lam (fn_0 $0 _v _c))",
        "(lam (fn_5 $0 (_rconcat _c _v)))",
        "(lam (fn_5 (fn_0 $0 _v _c) _c))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (fn_5 $0 (_rconcat _q _a)))",
        "(lam (fn_0 $0 (_rconcat _a _rempty) _q))",
        "(lam (fn_0 $0 _a (_rconcat _q _rempty)))",
        "(lam (fn_0 $0 _rempty (_rconcat _q _a)))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_5 $0 (_rconcat _g _a)))",
        "(lam (fn_6 (fn_5 $0 _a) _g))",
        "(lam (fn_5 (fn_5 $0 (_rconcat _a _a)) _g))",
        "(lam (fn_2 $0 _p _rempty))",
        "(lam (fn_2 $0 _rempty _p))",
        "(lam (fn_2 $0 (_rconcat _rempty _rempty) _p))",
        "(lam (fn_2 $0 _p (_rconcat _rempty _rempty)))",
        "(lam (fn_2 $0 _rempty (_rconcat _rempty _p)))",
        "(lam (fn_2 $0 _v _r))",
        "(lam (fn_2 $0 (_rconcat _r _v) _rempty))",
        "(lam (fn_2 $0 (_rconcat _rempty _v) _r))",
        "(lam (fn_2 $0 (_rconcat _v _rempty) _r))",
        "(lam (fn_2 $0 _v (_rconcat _rempty _r)))",
        "(lam (fn_2 $0 _n _f))",
        "(lam (fn_8 $0 (lam (_rconcat _f _n))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (cons _g (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_4 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lam (fn_3 $0 _d))",
        "(lam (if (_rmatch (_rtail (_rsplit _e $0)) (_rtail (cdr (_rsplit _rempty $0)))) $0 (fn_4 $0 _d)))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_0 $0 (_rconcat _m _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat _rempty _m) _r))",
        "(lam (fn_5 $0 (_rconcat _r _m)))",
        "(lam (fn_5 (fn_5 $0 (_rconcat _m _m)) _r))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_5 $0 (_rconcat _b _w)))",
        "(lam (fn_0 $0 (_rconcat _w _rempty) _b))",
        "(lam (fn_0 $0 _rempty (_rconcat _b _w)))",
        "(lam (fn_0 $0 _w (_rconcat _b _rempty)))",
        "(lam (fn_1 $0 _a _o))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _a _o))",
        "(lam (fn_1 $0 (_rconcat _a _rempty) _o))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _o))",
        "(lam (fn_1 $0 _rempty (_rconcat _a _o)))",
        "(lam (fn_4 $0 _f))",
        "(lam (fn_4 (_rflatten (_rsplit _rempty $0)) _f))",
        "(lam (fn_4 $0 (_rconcat _f _rempty)))",
        "(lam (fn_4 (fn_4 $0 _f) _rempty))",
        "(lam (fn_4 (fn_4 $0 _rempty) _f))",
        "(lam (fn_5 $0 _f))",
        "(lam (fn_0 $0 _rempty _f))",
        "(lam (fn_4 (fn_5 $0 _f) _rempty))",
        "(lam (fn_9 $0 _w))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lam (fn_0 $0 _c _y))",
        "(lam (fn_5 (fn_0 $0 _c _g) _y))",
        "(lam (fn_5 (fn_0 $0 _c _r) _y))",
        "(lam (fn_0 $0 (_rconcat _y _c) _rempty))",
        "(lam (fn_0 $0 _rempty (_rconcat _y _c)))",
        "(lam (fn_2 $0 _t _y))",
        "(lam (fn_2 (_rflatten (_rsplit _rempty $0)) _t _y))",
        "(lam (fn_2 $0 (_rconcat _rempty _t) _y))",
        "(lam (fn_2 $0 _t (_rconcat _rempty _y)))",
        "(lam (fn_2 (fn_0 $0 _rempty _g) _t _y))",
        "(lam (fn_2 $0 _t _w))",
        "(lam (fn_2 $0 (_rconcat _rempty _t) _w))",
        "(lam (fn_2 $0 _t (_rconcat _rempty _w)))",
        "(lam (fn_2 (fn_2 $0 _rempty _e) _t _w))",
        "(lam (fn_2 (fn_2 $0 _rempty _t) _t _w))",
        "(lam (fn_1 $0 _i _y))",
        "(lam (fn_1 $0 (_rconcat _i _rempty) _y))",
        "(lam (fn_1 $0 (_rconcat _rempty _i) _y))",
        "(lam (fn_4 (fn_1 $0 _i _y) _rempty))",
        "(lam (fn_1 (fn_4 $0 _rempty) _i _y))",
        "(lam (fn_6 $0 _y))",
        "(lam (_rflatten (cons _y (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (fn_6 $0 _y))))",
        "(lam (fn_5 (fn_6 $0 _a) _y))",
        "(lam (fn_0 $0 (car (_rsplit _rempty $0)) _y))",
        "(lam (fn_5 $0 _h))",
        "(lam (fn_0 $0 _h _rempty))",
        "(lam (fn_0 $0 _rempty _h))",
        "(lam (_rflatten (_rsplit _rempty (fn_5 $0 _h))))",
        "(lam (fn_5 $0 _h))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_5 $0 (_rconcat _x _e)))",
        "(lam (fn_5 (fn_0 $0 _e _e) _x))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_5 $0 (_rconcat _m _i)))",
        "(lam (fn_5 (fn_0 $0 _i _g) _m))",
        "(lam (fn_5 (fn_0 $0 _i _r) _m))",
        "(lam (fn_5 (fn_0 $0 _i _e) _m))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_5 $0 (_rconcat _j _o)))",
        "(lam (fn_5 (fn_0 $0 _o _j) _j))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) (_rsplit _rempty $0) (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (_rrevcdr (_rsplit _rempty $0))) _i) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rnot (_rtail (_rsplit _rempty $0))) _e) (_rflatten (_rappend _p (_rsplit _rempty $0))) $0))",
        "(lam (fn_2 $0 _i _g))",
        "(lam (fn_2 (_rflatten (_rsplit _rempty $0)) _i _g))",
        "(lam (fn_2 (fn_4 $0 _rempty) _i _g))",
        "(lam (fn_2 (fn_0 $0 _rempty _g) _i _g))",
        "(lam (fn_0 (fn_2 $0 _i _g) _rempty _g))",
        "(lam (fn_1 $0 _o _m))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _o _m))",
        "(lam (fn_1 $0 (_rconcat _o _rempty) _m))",
        "(lam (fn_1 $0 (_rconcat _rempty _o) _m))",
        "(lam (fn_1 $0 _o (_rconcat _rempty _m)))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_5 $0 (_rconcat _r _r)))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _s) $0))))))",
        "(lam (fn_0 $0 _b _g))",
        "(lam (fn_0 $0 (_rconcat _b _rempty) _g))",
        "(lam (fn_0 $0 (_rconcat _rempty _b) _g))",
        "(lam (fn_5 $0 (_rconcat _g _b)))",
        "(lam (fn_0 $0 _rempty (_rconcat _g _b)))",
        "(lam (fn_5 $0 _i))",
        "(lam (fn_5 $0 (_rconcat _i _rempty)))",
        "(lam (fn_5 $0 (_rconcat _rempty _i)))",
        "(lam (fn_4 $0 _q))",
        "(lam (fn_4 $0 (_rconcat _q _rempty)))",
        "(lam (fn_4 $0 (_rconcat _rempty _q)))",
        "(lam (fn_1 (fn_4 $0 _q) _rempty _q))",
        "(lam (fn_1 (_rflatten (_rappend _p (_rsplit _rempty $0))) _rempty _q))",
        "(lam (fn_0 $0 _s _i))",
        "(lam (fn_5 $0 (_rconcat _i _s)))",
        "(lam (fn_5 (fn_0 $0 _s _g) _i))",
        "(lam (fn_5 (fn_0 $0 _s _r) _i))",
        "(lam (fn_5 (fn_0 (fn_5 $0 _i) _s _g) _i))",
        "(lam (fn_0 $0 _l _g))",
        "(lam (fn_5 $0 (_rconcat _g _l)))",
        "(lam (fn_5 (fn_0 $0 _l _g) _g))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_5 $0 _m))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_3 $0 _c))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 _c))))",
        "(lam (fn_3 $0 (_rconcat _c _rempty)))",
        "(lam (fn_3 $0 (_rconcat _rempty _c)))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e (fn_4 $0 _rempty)))) $0 (fn_4 $0 _c)))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_5 $0 (_rconcat _a _w)))",
        "(lam (fn_5 (fn_0 $0 _w _g) _a))",
        "(lam (fn_5 (fn_0 $0 _w _r) _a))",
        "(lam (fn_5 (fn_0 $0 _w _b) _a))",
        "(lam (fn_1 $0 _r _j))",
        "(lam (fn_1 $0 (_rconcat _r _rempty) _j))",
        "(lam (fn_1 $0 (_rconcat _rempty _r) _j))",
        "(lam (fn_1 $0 _r (_rconcat _rempty _j)))",
        "(lam (fn_1 (fn_4 $0 _rempty) _r _j))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _i _x))",
        "(lam (fn_0 $0 (_rconcat _i _rempty) _x))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _x))",
        "(lam (fn_0 $0 _rempty (_rconcat _x _i)))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_5 (fn_0 $0 _i _g) _q))",
        "(lam (fn_0 $0 (_rconcat _q _i) _rempty))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _q)))",
        "(lam (fn_0 $0 _rempty (_rconcat _q _i)))",
        "(lam (fn_7 _rempty _j $0))",
        "(lam (fn_7 _j _rempty $0))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _j _rempty))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _rempty _j))",
        "(lam (fn_7 _j _rempty $0))",
        "(lam (fn_8 $0 (lam (_rconcat _l $0))))",
        "(lam (fn_7 _q _r $0))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _r _q))",
        "(lam (fn_1 (fn_1 $0 _rempty (_rconcat _rempty _rempty)) _r _q))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _r (_rconcat _q _rempty)))",
        "(lam (fn_1 (fn_4 (fn_1 $0 _rempty _rempty) _rempty) _r _q))",
        "(lam (fn_2 $0 _r _h))",
        "(lam (fn_8 $0 (lam (_rconcat _h _r))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_4 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _l $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lam (fn_7 _j _rempty $0))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _j _rempty))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _rempty _j))",
        "(lam (fn_7 _j _rempty $0))",
        "(lam (fn_1 (fn_1 $0 _rempty (_rconcat _rempty _rempty)) _rempty _j))",
        "(lam (fn_4 $0 _a))",
        "(lam (_rflatten (_rsplit _rempty (fn_4 $0 _a))))",
        "(lam (fn_4 (fn_4 $0 _a) _rempty))",
        "(lam (fn_4 (fn_4 $0 _rempty) _a))",
        "(lam (fn_1 (fn_4 $0 _a) _rempty _a))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _i) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_4 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lam (fn_1 $0 _x _p))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rappend _p (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_6 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (fn_6 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (fn_6 $0 _b))))",
        "(lam (fn_6 $0 (_rconcat _b _rempty)))",
        "(lam (fn_6 $0 (_rconcat _rempty _b)))",
        "(lam (fn_6 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (cons _a (_rsplit _l $0))))",
        "(lam (_rflatten (cons _a (_rsplit _f $0))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))) _o _j))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _b _s))",
        "(lam (fn_5 (fn_0 $0 _b _g) _s))",
        "(lam (fn_0 $0 _b (_rconcat _s _rempty)))",
        "(lam (fn_0 $0 _rempty (_rconcat _s _b)))",
        "(lam (fn_6 (fn_5 $0 _b) _s))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _u _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _u)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _u _r) _r))",
        "(lambda (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _r (cons _u (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _n _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (_rsplit _rempty $0))) _n _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _n _l))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (cdr (_rsplit _rempty $0))) (_rconcat _l _n)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rempty $1))))))) $0 (_rconcat _l _n)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (if (_rmatch _e $0) $0 _rempty) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _o _u))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _u _o $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _rempty _rempty)) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _rempty) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _f))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _rempty) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _f)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _t _m))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _t _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _t) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _t _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _t (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _e _e)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e) _e))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _l $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _r) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _g) _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _r) _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _r) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _c _v)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c) _c))",
        "(lambda (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _g _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _a _a)) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _rempty _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _rempty) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _p (_rconcat _rempty _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _rempty _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _r _v) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _v) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _v _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _v (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _n _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _n))))",
        "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (cons _g (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _d $0))))",
        "(lambda (#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1)))))) $0 _d))",
        "(lambda (if (_rmatch (_rtail (_rsplit _e $0)) (_rtail (cdr (_rsplit _rempty $0)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _d)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _m _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _m) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _m _m)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _w _rempty) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _b _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _a _o)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (_rflatten (_rsplit _rempty $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 (_rconcat _f _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _f) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rempty $1))))))) $0 _w))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _g) _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _r) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _y _c) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _y _c)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _t _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _t _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _t) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _t (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _g) _t _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _t) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _t (_rconcat _rempty _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _rempty _e) _t _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _rempty _t) _t _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _i _rempty) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _i) _y))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _i _y) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty) _i _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _y))",
        "(lambda (_rflatten (cons _y (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _y))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _a) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (car (_rsplit _rempty $0)) _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _h))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _h))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _x _e)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e) _x))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _m _i)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _g) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _r) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _e) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _j _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j) _j))",
        "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) (_rsplit _rempty $0) (_rappend _p (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch (_rtail (_rrevcdr (_rsplit _rempty $0))) _i) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch (_rnot (_rtail (_rsplit _rempty $0))) _e) (_rflatten (_rappend _p (_rsplit _rempty $0))) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty) _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _g) _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _i _g) _rempty _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _o _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _o _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _o _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _o) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _o (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _r)))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _s) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _b _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _b) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _g _b)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _g _b)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 (_rconcat _rempty _q)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _q) _rempty _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rappend _p (_rsplit _rempty $0))) _rempty _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _s)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _g) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _r) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i) _s _g) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _g _l)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g) _g))",
        "(lambda (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _m))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1)))))) $0 _c))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1)))))) $0 _c))))",
        "(lambda (#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1)))))) $0 (_rconcat _c _rempty)))",
        "(lambda (#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1)))))) $0 (_rconcat _rempty _c)))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _c)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _g) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _r) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _b) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _r _rempty) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _r) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _rempty _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _i _rempty) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _i) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _x _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _g) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _q _i) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i (_rconcat _rempty _q)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _q _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _rempty _j $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _q _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _rempty _rempty)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _r (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _rempty) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2)))))))) $0 _r _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _h _r))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _l $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2)))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _rempty _rempty)) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _a))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _a))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _a) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _rempty) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _a) _rempty _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _i) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _l $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _x _p))",
        "(lambda (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rappend _p (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 (_rconcat _b _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 (_rconcat _rempty _b)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _l $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))) _o _j))",
        "(lambda (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b (_rconcat _s _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _s _b)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _s))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 11009,
            "final_cost": 44997,
            "compression_ratio": 1.2346823121541437,
            "cumulative_compression_ratio": 1.2346823121541437,
            "num_uses": 76,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _w (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _g _b)": "(_rflatten (cons (_rconcat _g _b) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a (_rconcat _q _rempty)": "(_rflatten (cons (_rconcat _q _rempty) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _q)": "(_rflatten (cons (_rconcat _rempty _q) (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _s _b)": "(_rflatten (cons (_rconcat _s _b) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b (_rconcat _s _rempty)": "(_rflatten (cons (_rconcat _s _rempty) (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _x _i)": "(_rflatten (cons (_rconcat _x _i) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _y _c)": "(_rflatten (cons (_rconcat _y _c) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _rempty) _b": "(_rflatten (cons _b (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _e": "(_rflatten (cons _e (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _b _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _b) _g": "(_rflatten (cons _g (cons (_rconcat _rempty _b) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _g": "(_rflatten (cons _g (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _g": "(_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _g": "(_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0))))) _rempty _g": "(_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 _s _g": "(_rflatten (cons _g (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _i (cdr (_rsplit _rempty $0)))) _s _g": "(_rflatten (cons _g (cons _s (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _w _g": "(_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _h": "(_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cdr (_rsplit _rempty $0))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _rempty) _q": "(_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _m _rempty) _r": "(_rflatten (cons _r (cons (_rconcat _m _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _m) _r": "(_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _r": "(_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _r": "(_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _s _r": "(_rflatten (cons _r (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _w _r": "(_rflatten (cons _r (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _q _i) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _y _c) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _h _rempty": "(_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _x": "(_rflatten (cons _x (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _x": "(_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 (car (_rsplit _rempty $0)) _y": "(_rflatten (cons _y (cons (car (_rsplit _rempty $0)) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 6464,
            "final_cost": 38692,
            "compression_ratio": 1.162953582135842,
            "cumulative_compression_ratio": 1.4358782177194251,
            "num_uses": 67,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _rempty (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _r (_rconcat _q _rempty)": "(_rflatten (_rappend (_rconcat _q _rempty) (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _rempty _j)": "(_rflatten (_rappend (_rconcat _rempty _j) (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (_rconcat _rempty _m)": "(_rflatten (_rappend (_rconcat _rempty _m) (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _t (_rconcat _rempty _m)": "(_rflatten (_rappend (_rconcat _rempty _m) (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _rempty _rempty)": "(_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _a (_rsplit _b $0))) _rempty _a": "(_rflatten (_rappend _a (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _b $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _rempty) _f": "(_rflatten (_rappend _f (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _f": "(_rflatten (_rappend _f (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _rempty) _j": "(_rflatten (_rappend _j (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _r) _j": "(_rflatten (_rappend _j (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))) _o _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _b $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _o _rempty) _m": "(_rflatten (_rappend _m (_rappend (_rconcat _o _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _o) _m": "(_rflatten (_rappend _m (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _t) _m": "(_rflatten (_rappend _m (_rappend (_rconcat _rempty _t) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _t _rempty) _m": "(_rflatten (_rappend _m (_rappend (_rconcat _t _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _rempty) _o": "(_rflatten (_rappend _o (_rappend (_rconcat _a _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _o": "(_rflatten (_rappend _o (_rappend (_rconcat _rempty _a) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _p (_rsplit _rempty $0))) _rempty _q": "(_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _q (_rsplit _b $0))) _rempty _q": "(_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _b $0))))))))"
                },
                {
                    "fn_1 $0 _f _rempty": "(_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _rempty _rempty": "(_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _i _rempty) _y": "(_rflatten (_rappend _y (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _i) _y": "(_rflatten (_rappend _y (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _b $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (cons _r (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (cons _r (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 4350,
            "final_cost": 34497,
            "compression_ratio": 1.1216047772270052,
            "cumulative_compression_ratio": 1.6104878685103052,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _rempty (_rconcat _rempty _p)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _p) _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _v (_rconcat _rempty _r)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _r) _v)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _p (_rconcat _rempty _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _rempty) _p)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _t (_rconcat _rempty _w)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _w) _t)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _t (_rconcat _rempty _y)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _y) _t)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _rempty _e": "(_rflatten (map (lam (_rconcat _e _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rsplit _b $0))) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (fn_0 $0 _rempty _g) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (fn_0 $0 _rempty _g))))))"
                },
                {
                    "fn_2 $0 _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _rempty) _p": "(_rflatten (map (lam (_rconcat _p (_rconcat _rempty _rempty))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _rempty _p": "(_rflatten (map (lam (_rconcat _p _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _v) _r": "(_rflatten (map (lam (_rconcat _r (_rconcat _rempty _v))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _v _rempty) _r": "(_rflatten (map (lam (_rconcat _r (_rconcat _v _rempty))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _v) _rempty": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _r _v))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _rempty _t": "(_rflatten (map (lam (_rconcat _t _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _t) _w": "(_rflatten (map (lam (_rconcat _w (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _e _rempty)) (cons _r (cdr (_rsplit _rempty $0))))) _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _e _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _t _rempty)) (cons _r (cdr (_rsplit _rempty $0))))) _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _t _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _t) _y": "(_rflatten (map (lam (_rconcat _y (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 $0 _t _y": "(_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _t _y": "(_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (fn_0 $0 _rempty _g) _t _y": "(_rflatten (map (lam (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (fn_0 $0 _rempty _g))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch (_rtail (cdr (_rsplit _rempty #0))) (_rtail (_rsplit _e #0))) #0 (_rflatten (_rappend #1 (_rsplit _b #0))))",
            "dreamcoder": "#(lambda (lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $1))) (_rtail (_rsplit _e $1))) $1 (_rflatten (_rappend $0 (_rsplit _b $1))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 3030,
            "final_cost": 31562,
            "compression_ratio": 1.0929915721437171,
            "cumulative_compression_ratio": 1.7602496673214625,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _c _rempty)": "(if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _c _rempty) (_rsplit _b $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _rempty _c)": "(if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _rempty _c) (_rsplit _b $0))))"
                },
                {
                    "fn_3 $0 _c": "(if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _c (_rsplit _b $0))))"
                },
                {
                    "fn_3 $0 _d": "(if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _d (_rsplit _b $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _b #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 2121,
            "final_cost": 29522,
            "compression_ratio": 1.0691010094167062,
            "cumulative_compression_ratio": 1.8818846961587967,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 (_rconcat _f _rempty)": "(_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _q _rempty)": "(_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _q)": "(_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _a": "(_rflatten (_rappend _a (_rsplit _b $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _rempty (_rsplit _b $0))) _a": "(_rflatten (_rappend _a (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0))))))"
                },
                {
                    "fn_4 $0 _c": "(_rflatten (_rappend _c (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _d": "(_rflatten (_rappend _d (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _f": "(_rflatten (_rappend _f (_rsplit _b $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _rempty (_rsplit _b $0))) _f": "(_rflatten (_rappend _f (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _rempty $0)) _f": "(_rflatten (_rappend _f (_rsplit _b (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_4 (fn_1 $0 _rempty _rempty) _f": "(_rflatten (_rappend _f (_rsplit _b (fn_1 $0 _rempty _rempty))))"
                },
                {
                    "fn_4 $0 _k": "(_rflatten (_rappend _k (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _p": "(_rflatten (_rappend _p (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _q": "(_rflatten (_rappend _q (_rsplit _b $0)))"
                },
                {
                    "fn_4 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _b $0)))"
                },
                {
                    "fn_4 (_rflatten (_rappend _a (_rsplit _b $0))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _a (_rsplit _b $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _f (_rsplit _b $0))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _f (_rsplit _b $0))))))"
                },
                {
                    "fn_4 (_rflatten (cons _f (cdr (_rsplit _rempty $0)))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_4 (fn_1 $0 _i _y) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (fn_1 $0 _i _y))))"
                },
                {
                    "fn_4 (fn_1 $0 _rempty _rempty) _rempty": "(_rflatten (_rappend _rempty (_rsplit _b (fn_1 $0 _rempty _rempty))))"
                },
                {
                    "fn_4 $0 _u": "(_rflatten (_rappend _u (_rsplit _b $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1515,
            "final_cost": 28098,
            "compression_ratio": 1.050679763684248,
            "cumulative_compression_ratio": 1.9772581678411274,
            "num_uses": 58,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _a _a)": "(_rflatten (cons (_rconcat _a _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _c _v)": "(_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _g _a)": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _g _b)": "(_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _g _l)": "(_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _i _s)": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (cdr (_rsplit _rempty $0))) (_rconcat _l _n)": "(_rflatten (cons (_rconcat _l _n) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 $0 (_rconcat _m _i)": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _m _m)": "(_rflatten (cons (_rconcat _m _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _r _u)": "(_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _x _e)": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _b) _a": "(_rflatten (cons _a (cdr (_rsplit _rempty (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _g) _a": "(_rflatten (cons _a (cdr (_rsplit _rempty (fn_0 $0 _w _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _r) _a": "(_rflatten (cons _a (cdr (_rsplit _rempty (fn_0 $0 _w _r)))))"
                },
                {
                    "fn_5 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _v _c) _c": "(_rflatten (cons _c (cdr (_rsplit _rempty (fn_0 $0 _v _c)))))"
                },
                {
                    "fn_5 (fn_0 $0 _e _e) _e": "(_rflatten (cons _e (cdr (_rsplit _rempty (fn_0 $0 _e _e)))))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (cons (_rconcat _a _a) (cdr (_rsplit _rempty $0)))) _g": "(_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _a) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (fn_0 $0 _l _g) _g": "(_rflatten (cons _g (cdr (_rsplit _rempty (fn_0 $0 _l _g)))))"
                },
                {
                    "fn_5 $0 _h": "(_rflatten (cons _h (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _s _g) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (fn_0 $0 _s _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _s _r) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (fn_0 $0 _s _r)))))"
                },
                {
                    "fn_5 (fn_0 (_rflatten (cons _i (cdr (_rsplit _rempty $0)))) _s _g) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (fn_0 (_rflatten (cons _i (cdr (_rsplit _rempty $0)))) _s _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _o _j) _j": "(_rflatten (cons _j (cdr (_rsplit _rempty (fn_0 $0 _o _j)))))"
                },
                {
                    "fn_5 $0 _m": "(_rflatten (cons _m (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _e) _m": "(_rflatten (cons _m (cdr (_rsplit _rempty (fn_0 $0 _i _e)))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _g) _m": "(_rflatten (cons _m (cdr (_rsplit _rempty (fn_0 $0 _i _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _r) _m": "(_rflatten (cons _m (cdr (_rsplit _rempty (fn_0 $0 _i _r)))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _g) _q": "(_rflatten (cons _q (cdr (_rsplit _rempty (fn_0 $0 _i _g)))))"
                },
                {
                    "fn_5 (_rflatten (cons (_rconcat _m _m) (cdr (_rsplit _rempty $0)))) _r": "(_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _m _m) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (fn_0 $0 _u _r) _r": "(_rflatten (cons _r (cdr (_rsplit _rempty (fn_0 $0 _u _r)))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _b _g) _s": "(_rflatten (cons _s (cdr (_rsplit _rempty (fn_0 $0 _b _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _g) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_0 $0 _i _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _i _r) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_0 $0 _i _r)))))"
                },
                {
                    "fn_5 (fn_0 $0 _e _e) _x": "(_rflatten (cons _x (cdr (_rsplit _rempty (fn_0 $0 _e _e)))))"
                },
                {
                    "fn_5 (_rflatten (cons _a (_rsplit _a $0))) _y": "(_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _a (_rsplit _a $0)))))))"
                },
                {
                    "fn_5 (fn_0 $0 _c _g) _y": "(_rflatten (cons _y (cdr (_rsplit _rempty (fn_0 $0 _c _g)))))"
                },
                {
                    "fn_5 (fn_0 $0 _c _r) _y": "(_rflatten (cons _y (cdr (_rsplit _rempty (fn_0 $0 _c _r)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1515,
            "final_cost": 26604,
            "compression_ratio": 1.0561569688768606,
            "cumulative_compression_ratio": 2.0882949932341,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0)))"
                },
                {
                    "fn_6 $0 (_rconcat _rempty _b)": "(_rflatten (cons (_rconcat _rempty _b) (_rsplit _a $0)))"
                },
                {
                    "fn_6 $0 _a": "(_rflatten (cons _a (_rsplit _a $0)))"
                },
                {
                    "fn_6 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_6 (fn_5 $0 _a) _g": "(_rflatten (cons _g (_rsplit _a (fn_5 $0 _a))))"
                },
                {
                    "fn_6 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_6 (fn_5 $0 _b) _s": "(_rflatten (cons _s (_rsplit _a (fn_5 $0 _b))))"
                },
                {
                    "fn_6 $0 _v": "(_rflatten (cons _v (_rsplit _a $0)))"
                },
                {
                    "fn_6 $0 _y": "(_rflatten (cons _y (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 (_rflatten (_rrevcdr (_rsplit _rempty #2))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rempty $2)))))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $1 $2))))",
            "arity": 3,
            "name": "fn_7",
            "utility": 1212,
            "final_cost": 25411,
            "compression_ratio": 1.0469481720514737,
            "cumulative_compression_ratio": 2.186336625870686,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 _rempty _j $0": "(fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j _rempty)"
                },
                {
                    "fn_7 _u _o $0": "(fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _o _u)"
                },
                {
                    "fn_7 _q _r $0": "(fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r _q)"
                },
                {
                    "fn_7 _j _rempty $0": "(fn_1 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _rempty _j)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 606,
            "final_cost": 24824,
            "compression_ratio": 1.0236464711569448,
            "cumulative_compression_ratio": 2.2380357718337094,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 (lam (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0))": "(_rflatten (map (lam (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 (lam (_rconcat (if (_rmatch _e $0) $0 _rempty) $0))": "(_rflatten (map (lam (_rconcat (if (_rmatch _e $0) $0 _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 606,
            "final_cost": 24256,
            "compression_ratio": 1.0234168865435356,
            "cumulative_compression_ratio": 2.2904436015831133,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 (_rconcat _l _n)": "(_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _w": "(_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}