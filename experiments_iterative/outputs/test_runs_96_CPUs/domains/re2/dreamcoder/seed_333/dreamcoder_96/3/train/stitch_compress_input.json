{
    "DSL": {
        "logVariable": -0.7830803150187178,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -4.658026361005317
            },
            {
                "expression": "_rempty",
                "logProbability": -2.2100039747095774
            },
            {
                "expression": "_a",
                "logProbability": -3.335101613818015
            },
            {
                "expression": "_b",
                "logProbability": -3.639944228229023
            },
            {
                "expression": "_c",
                "logProbability": -3.780535378270649
            },
            {
                "expression": "_d",
                "logProbability": -3.909747109750655
            },
            {
                "expression": "_e",
                "logProbability": -3.257328803312875
            },
            {
                "expression": "_f",
                "logProbability": -3.9415370069528715
            },
            {
                "expression": "_g",
                "logProbability": -3.6044999049428865
            },
            {
                "expression": "_h",
                "logProbability": -4.399093701839521
            },
            {
                "expression": "_i",
                "logProbability": -3.171953838232051
            },
            {
                "expression": "_j",
                "logProbability": -3.6822706855942915
            },
            {
                "expression": "_k",
                "logProbability": -4.109850348820788
            },
            {
                "expression": "_l",
                "logProbability": -3.831179111089404
            },
            {
                "expression": "_m",
                "logProbability": -3.880175908176194
            },
            {
                "expression": "_n",
                "logProbability": -3.879556137471509
            },
            {
                "expression": "_o",
                "logProbability": -3.6115837598312908
            },
            {
                "expression": "_p",
                "logProbability": -3.763840499698479
            },
            {
                "expression": "_q",
                "logProbability": -3.592803865179695
            },
            {
                "expression": "_r",
                "logProbability": -3.2444424528462967
            },
            {
                "expression": "_s",
                "logProbability": -3.6007422678300527
            },
            {
                "expression": "_t",
                "logProbability": -3.333664831961652
            },
            {
                "expression": "_u",
                "logProbability": -3.8329516374028234
            },
            {
                "expression": "_v",
                "logProbability": -3.928439242762807
            },
            {
                "expression": "_w",
                "logProbability": -3.7185253034864365
            },
            {
                "expression": "_x",
                "logProbability": -4.014682002929189
            },
            {
                "expression": "_y",
                "logProbability": -3.98326580669581
            },
            {
                "expression": "_z",
                "logProbability": -7.437385589812308
            },
            {
                "expression": "_rnot",
                "logProbability": -5.918919455583935
            },
            {
                "expression": "_ror",
                "logProbability": -6.884000351627522
            },
            {
                "expression": "_rconcat",
                "logProbability": -1.873281727669962
            },
            {
                "expression": "_rmatch",
                "logProbability": -0.30940389559861625
            },
            {
                "expression": "_rsplit",
                "logProbability": -1.2532016227112894
            },
            {
                "expression": "_rflatten",
                "logProbability": -2.704068255663941
            },
            {
                "expression": "_rtail",
                "logProbability": -4.565295876753593
            },
            {
                "expression": "_rappend",
                "logProbability": -2.4069626354195695
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -2.692054032847257
            },
            {
                "expression": "if",
                "logProbability": -4.915215373757384
            },
            {
                "expression": "cons",
                "logProbability": -1.5904277483560696
            },
            {
                "expression": "car",
                "logProbability": -6.241405810807569
            },
            {
                "expression": "cdr",
                "logProbability": -1.9004263533830548
            },
            {
                "expression": "map",
                "logProbability": -3.718315575247341
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _u (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _n) (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_20_if_there_is_e_add_e_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (if (_rmatch $0 _e) $0 _rempty) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (if (_rmatch _e $0) $0 _rempty) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda _k) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _d $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _f $0))))"
                }
            ]
        },
        {
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _rempty) $0 (_rflatten (_rappend _f (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend (_rconcat _rempty _t) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend (_rconcat _t _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _m) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _l $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _n $0))))"
                }
            ]
        },
        {
            "task": "re2_train_67_if_there_is_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _j)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _j _rempty)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _j)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _c (cdr (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _c (cons _v (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _rempty) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _a) (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_113_if_there_is_any_letter_replace_that_with_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _p)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _p _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _p (_rconcat _rempty _rempty))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _p) _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _rempty) _p)) (cons _r (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty (_rconcat _r _v))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r (_rconcat _rempty _v))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r (_rconcat _v _rempty))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _r) _v)) (cons _r (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_135_if_there_is_any_letter_replace_that_with_f_n",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (cons _g (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (cons _l (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _d $0))))"
                }
            ]
        },
        {
            "task": "re2_train_158_if_the_word_ends_with_consonant_consonant_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _d (_rsplit _b $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _e $0)) (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _d (_rsplit _b $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons (_rconcat _m _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _m _m) (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _w) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend (_rconcat _a _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend (_rconcat _rempty _a) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _f _rempty) (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _f (_rsplit _b $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _b (_rflatten (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _a) $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _b) $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit (_rnot _rdot) $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons (_rconcat _y _c) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _c) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _r (cons _c (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _g (cons _c (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_219_if_there_is_any_letter_replace_that_with_y_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _y) _t)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _y (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _y _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _w) _t)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w (_rconcat _rempty _t))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda (_rconcat _e _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda (_rconcat _t _rempty)) (cons _r (cdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_243_if_there_is_c_add_u_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (if (_rmatch $0 _c) _u _rempty) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (if (_rmatch $0 _c) _u _rempty) $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (_rconcat (if (_rmatch $0 _c) _u _rempty) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (if (_rmatch $0 _c) _u _rempty) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_244_if_there_is_any_letter_replace_that_with_u_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda _e) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons _y (_rsplit _a $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (_rsplit _rempty (_rflatten (cons _a (_rsplit _a $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cons (car (_rsplit _rempty $0)) (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _h (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _h (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _e _r) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))) _e) $0 (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _r (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _e (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_293_if_the_word_ends_with_consonant_add_j_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty (if (_rmatch (_rtail (cdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _b $0)))))) (_rtail (_rsplit _e (_rflatten (_rappend _j (_rsplit _b $0)))))) (_rflatten (_rappend _j (_rsplit _b $0))) (_rflatten (_rappend _j (_rsplit _b (_rflatten (_rappend _j (_rsplit _b $0)))))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _b (if (_rmatch (_rtail (cdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _b $0)))))) (_rtail (_rsplit _e (_rflatten (_rappend _j (_rsplit _b $0)))))) (_rflatten (_rappend _j (_rsplit _b $0))) (_rflatten (_rappend _j (_rsplit _b (_rflatten (_rappend _j (_rsplit _b $0)))))))))))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rrevcdr (_rsplit _rempty $0))) _i) $0 (_rflatten (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) (_rsplit _rempty $0) (_rappend _p (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rnot (_rtail (_rsplit _rempty $0))) _e) (_rflatten (_rappend _p (_rsplit _rempty $0))) $0))"
                }
            ]
        },
        {
            "task": "re2_train_299_if_there_is_any_letter_replace_that_with_g_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cons _rempty (cdr (_rsplit _rempty (_rflatten (map (lambda (_rconcat _g _i)) (cons _r (cdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend (_rconcat _o _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend (_rconcat _rempty _o) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _m) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _s) $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cons (_rconcat _b _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cons (_rconcat _rempty _b) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _b) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _g) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _g _rempty) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _q _rempty) (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _q) (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _b $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _g (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _g (cons _s (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cons _l (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_358_if_there_is_any_letter_replace_that_with_j_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _j _u)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _j _u)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _j (_rconcat _rempty _u))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _j _u) _rempty)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty (_rconcat _j _u))) (cons _r (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_369_if_the_word_ends_with_consonant_consonant_add_c_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _c _rempty) (_rsplit _b $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend (_rconcat _rempty _c) (_rsplit _b $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e $0))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) (_rtail (_rsplit _e (_rflatten (_rappend _rempty (_rsplit _b $0)))))) $0 (_rflatten (_rappend _c (_rsplit _b $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _r (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _j) (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_378_if_there_is_any_letter_replace_that_with_i_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _i _p)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty (_rconcat _i _p))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _i (_rconcat _rempty _p))) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _i _rempty) _p)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _i) _p)) (cons _r (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_381_if_there_is_any_letter_replace_that_with_n_g",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _n) _g)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda _g) (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _i) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _q) (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _i) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _g (cons _i (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _b $0))))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons (_rconcat _rempty _s) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons (_rconcat _s _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _e) (cons _s (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_401_if_there_is_r_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 (if (_rmatch $0 _r) _q _rempty))) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_417_if_there_is_any_letter_add_l_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f _s) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f _s) (cdr (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f (_rconcat _s _rempty)) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat (_rconcat _rempty _f) _s) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _l _s) (cdr (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _q) (cdr (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _q _rempty) (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_442_if_there_is_any_letter_replace_that_with_h_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _l $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _n $0))))"
                }
            ]
        },
        {
            "task": "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend (_rconcat _x _rempty) (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _x _s) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _b (_rflatten (_rappend _rempty (_rsplit _b $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rsplit _b (_rflatten (_rappend _a (_rsplit _b $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _b $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _b $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _i) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit (_rnot _b) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _l $0))))"
                }
            ]
        },
        {
            "task": "re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rappend _p (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _f $0))))"
                }
            ]
        },
        {
            "task": "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _b) (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons _b (_rsplit _a $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _c $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _l $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _f $0))))"
                }
            ]
        },
        {
            "task": "re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _s _b) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _s _rempty) (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _s (_rsplit _a (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _s (cdr (_rsplit _rempty (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        }
    ]
}