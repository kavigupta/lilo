{
    "DSL": {
        "logVariable": -0.7969971219124048,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -2.3211614785669816
            },
            {
                "expression": "_rempty",
                "logProbability": -2.068459125011227
            },
            {
                "expression": "_a",
                "logProbability": -2.1705886200876066
            },
            {
                "expression": "_b",
                "logProbability": -2.483680408064756
            },
            {
                "expression": "_c",
                "logProbability": -3.1478400517514493
            },
            {
                "expression": "_d",
                "logProbability": -2.896525623470543
            },
            {
                "expression": "_e",
                "logProbability": -2.2843475054442646
            },
            {
                "expression": "_f",
                "logProbability": -2.8745467167517678
            },
            {
                "expression": "_g",
                "logProbability": -3.1478400517514493
            },
            {
                "expression": "_h",
                "logProbability": -3.3019907315787074
            },
            {
                "expression": "_i",
                "logProbability": -2.5443050298811913
            },
            {
                "expression": "_j",
                "logProbability": -2.6601368454063126
            },
            {
                "expression": "_k",
                "logProbability": -2.8745467167517678
            },
            {
                "expression": "_l",
                "logProbability": -3.0143086591269266
            },
            {
                "expression": "_m",
                "logProbability": -3.0396264671112165
            },
            {
                "expression": "_n",
                "logProbability": -2.896525623470543
            },
            {
                "expression": "_o",
                "logProbability": -2.4546928711915035
            },
            {
                "expression": "_p",
                "logProbability": -3.2374522104411363
            },
            {
                "expression": "_q",
                "logProbability": -2.8319871023329717
            },
            {
                "expression": "_r",
                "logProbability": -2.7519443946594353
            },
            {
                "expression": "_s",
                "logProbability": -3.0143086591269266
            },
            {
                "expression": "_t",
                "logProbability": -2.6427451026944437
            },
            {
                "expression": "_u",
                "logProbability": -3.119669174784753
            },
            {
                "expression": "_v",
                "logProbability": -2.5600533868493303
            },
            {
                "expression": "_w",
                "logProbability": -2.498495493849897
            },
            {
                "expression": "_x",
                "logProbability": -2.989616046536555
            },
            {
                "expression": "_y",
                "logProbability": -3.3019907315787074
            },
            {
                "expression": "_z",
                "logProbability": -3.2066805517743826
            },
            {
                "expression": "_rnot",
                "logProbability": -2.791165107812717
            },
            {
                "expression": "_ror",
                "logProbability": -3.3019907315787074
            },
            {
                "expression": "_rconcat",
                "logProbability": -2.108068263106273
            },
            {
                "expression": "_rmatch",
                "logProbability": -0.23638877806423064
            },
            {
                "expression": "_rsplit",
                "logProbability": -1.0305008628089647
            },
            {
                "expression": "_rflatten",
                "logProbability": -1.512471188904743
            },
            {
                "expression": "_rtail",
                "logProbability": -3.0143086591269266
            },
            {
                "expression": "_rappend",
                "logProbability": -1.4877638212847506
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -1.7917594692280554
            },
            {
                "expression": "if",
                "logProbability": -3.721669276936927
            },
            {
                "expression": "cons",
                "logProbability": -1.5686159179138457
            },
            {
                "expression": "car",
                "logProbability": -4.001971242091085
            },
            {
                "expression": "cdr",
                "logProbability": -1.7657839828247948
            },
            {
                "expression": "map",
                "logProbability": -1.9953584244692948
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_20_if_there_is_e_add_e_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat $0 _e) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (map (lambda _rdot) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty (_rflatten (map (lambda _k) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (map (lambda (_rconcat _k _rempty)) (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (map (lambda (_rconcat _rempty _k)) (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_35_if_there_is_any_letter_replace_that_with_q_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q _j)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty (_rflatten (map (lambda _j) (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_37_if_there_is_g_add_q_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_41_if_there_is_any_letter_add_v_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _w) $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty (car (map (lambda $1) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (car (map (lambda (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _e (_rtail (_rsplit _rempty $0))) (_rsplit _rempty $0) (_rappend _o (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _v $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _d $0))))"
                }
            ]
        },
        {
            "task": "re2_train_68_if_there_is_any_letter_replace_that_with_h_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _s)) (_rsplit _rempty (_rflatten (map (lambda _h) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lambda _w) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lambda _h) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_76_if_there_is_r_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _j _rempty) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _rempty _j) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_99_if_there_is_t_replace_that_with_d_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_113_if_there_is_any_letter_replace_that_with_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda _p) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_118_if_there_is_l_replace_that_with_n_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _l) (_rconcat _n _k) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _w $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _t $0))))"
                }
            ]
        },
        {
            "task": "re2_train_135_if_there_is_any_letter_replace_that_with_f_n",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f $0)) (_rsplit _rempty (_rflatten (map (lambda _n) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_150_if_the_word_ends_with_s_remove_that",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))"
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rdot $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))"
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rflatten (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_155_if_there_is_t_replace_that_with_x_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (_rsplit _a $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_172_if_there_is_c_replace_that_with_k_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_177_if_there_is_e_replace_that_with_t_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (_rsplit _b (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (_rsplit _r (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _e (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _u (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_230_if_there_is_m_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) _l $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rsplit _a (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_243_if_there_is_c_add_u_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_244_if_there_is_any_letter_replace_that_with_u_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _e) (_rconcat _u $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _e) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _e)) (_rsplit _rempty (_rflatten (map (lambda _u) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_246_if_there_is_t_replace_that_with_n",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _k _rempty) (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_270_if_there_is_r_replace_that_with_e_d",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _w) _d $0)) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _m (_rsplit _r (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_280_if_there_is_any_letter_add_q_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _q) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _e (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _rdot (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _f (cons _o (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _x (cons _o (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_299_if_there_is_any_letter_replace_that_with_g_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _i) (_rconcat _g $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _i) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda (_rconcat _g _i)) (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_312_if_there_is_any_letter_replace_that_with_h_x",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _x) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _x) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lambda _x) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lambda _x) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lambda _x) (_rsplit _rempty (_rflatten (map (lambda _x) (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _r) (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons _e (cons _r (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_319_if_there_is_g_replace_that_with_c",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) (_rconcat _rempty _c) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 (_rconcat _rempty _g)) _c $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_330_if_there_is_t_replace_that_with_l_p",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _l _p) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _p $0)) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (map (lambda $0) (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _w $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _q $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _n $0))))"
                }
            ]
        },
        {
            "task": "re2_train_351_if_there_is_g_add_w_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_371_if_there_is_p_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _rdot (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _p (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (car (map (lambda (_rconcat $0 _o)) (_rsplit _rempty $0))) (cdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_394_if_there_is_t_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_414_if_there_is_i_replace_that_with_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _i) (_rconcat _rempty _v) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _i) (_rconcat _v _rempty) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _b (_rflatten (map (lambda (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_417_if_there_is_any_letter_add_l_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rdot $0))))"
                }
            ]
        },
        {
            "task": "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rdot (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rappend _q (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_439_if_there_is_c_replace_that_with_n_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _b (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _w (_rflatten (map (lambda (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_442_if_there_is_any_letter_replace_that_with_h_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _r) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lambda _r) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lambda _r) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _r)) (_rsplit _rempty (_rflatten (map (lambda _h) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rempty (_rflatten (map (lambda _r) (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _j $0))))"
                }
            ]
        },
        {
            "task": "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _a (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rdot (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _x (_rsplit _a $0))))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _t $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _k $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _z $0))))"
                }
            ]
        },
        {
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (map (lambda $0) (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))))"
                }
            ]
        },
        {
            "task": "re2_train_471_if_there_is_o_add_r_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _e $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _f $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _c $0))))"
                }
            ]
        },
        {
            "task": "re2_train_473_if_there_is_o_replace_that_with_l",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 (_rconcat _o _rempty)) _l $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_474_if_there_is_t_replace_that_with_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (map (lambda (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _b (_rflatten (map (lambda (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _w $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _t $0))))"
                }
            ]
        }
    ]
}