{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_96_CPUs --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 222 333 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 98064,
    "final_cost": 45825,
    "compression_ratio": 2.1399672667757774,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _k _rempty) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _rempty _k) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _rdot) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _w) $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (car (map (lam $1) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (_rflatten (if (_rmatch _e (_rtail (_rsplit _rempty $0))) (_rsplit _rempty $0) (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _a (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rsplit _a $0))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _i $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _v $0))))",
        "(lam (_rflatten (cons _j (_rsplit _d $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _w) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _s)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _j _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty _j) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cdr (_rsplit _rempty (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _n _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) (_rconcat _p $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _w $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _t $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f $0)) (_rsplit _rempty (_rflatten (map (lam _n) (_rsplit _rempty $0)))))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rflatten (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (_rsplit _a $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _v _q) _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _v _rempty) _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (_rsplit _r (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _r (_rsplit _b (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _e (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _u (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _n _rempty) _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _n $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rsplit _a (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _u $0) $0)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _e)) (_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _rempty) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _w) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _m (_rsplit _r (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _e (cons _o (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _rdot (cons _o (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _f (cons _o (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rempty (_rflatten (cons _x (cons _o (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty (_rconcat _t _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _s _rempty)) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _g $0) $0)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _k $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rdot _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _k $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _x) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _r) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rempty (_rflatten (cons _e (cons _r (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rempty _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _g)) _c $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l _p) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _p $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rsplit _a (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rsplit _a $0))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _rdot (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _p (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _b (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _i (_rconcat _p _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i (_rconcat _rempty _p))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _n $0) $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (car (map (lam (_rconcat $0 _o)) (_rsplit _rempty $0))) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rdot (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _rempty _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _u)) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _u _rempty)) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _rempty _v) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _v _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rdot (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rappend _q (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _w (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _r)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lam (_rflatten (_rappend _s (_rsplit _a (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rdot (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _x (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _z $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (map (lam $0) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _u) (_rsplit _a $0))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (_rappend _u (_rsplit _a $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _x (_rsplit _a $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _p _o) _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _p _rempty) _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _o _rempty)) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _w $0))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _a $0))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0))))))))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _y _d))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _y _d))",
        "(lam (fn_0 $0 (_rconcat _rempty _y) _d))",
        "(lam (fn_0 $0 (_rconcat _y _rempty) _d))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _y _d))))",
        "(lam (fn_6 _k _b $0))",
        "(lam (fn_6 _k _b (fn_2 $0 (lam $0))))",
        "(lam (fn_6 (_rconcat _k _rempty) _b $0))",
        "(lam (fn_6 (_rconcat _rempty _k) _b $0))",
        "(lam (fn_0 $0 (_rconcat _k _b) _b))",
        "(lam (fn_6 _e _e $0))",
        "(lam (fn_0 $0 (_rconcat _e _e) _e))",
        "(lam (fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0))))",
        "(lam (fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat $0 _e) $0))))",
        "(lam (fn_1 $0 _a _n))",
        "(lam (fn_7 $0 (_rconcat _n _a)))",
        "(lam (fn_7 (fn_1 $0 _a _a) _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_2 $0 (lam _k)))",
        "(lam (fn_2 (fn_2 $0 (lam _rdot)) (lam _k)))",
        "(lam (fn_2 (fn_2 $0 (lam _k)) (lam _k)))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (map (lam (_rconcat _k _rempty)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (map (lam (_rconcat _rempty _k)) (_rsplit _rempty $0)))))",
        "(lam (fn_3 $0 _r))",
        "(lam (fn_2 (fn_3 $0 _r) (lam $0)))",
        "(lam (fn_3 (fn_3 $0 _r) _r))",
        "(lam (fn_3 (fn_3 $0 _f) _r))",
        "(lam (fn_4 $0 _o _u))",
        "(lam (fn_2 (fn_4 $0 _o _u) (lam $0)))",
        "(lam (fn_3 (fn_4 $0 _o _a) _u))",
        "(lam (fn_4 (fn_3 $0 _e) _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_5 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_8 _j _q $0))",
        "(lam (fn_6 _q _j (fn_2 $0 (lam _j))))",
        "(lam (fn_2 (fn_2 $0 (lam _j)) (lam (_rconcat _q $0))))",
        "(lam (fn_2 (fn_6 _q _j (fn_2 $0 (lam _j))) (lam $0)))",
        "(lam (fn_6 _q _j (fn_2 (fn_2 $0 (lam _j)) (lam _j))))",
        "(lam (fn_6 _q _g $0))",
        "(lam (fn_0 $0 (_rconcat _q _g) _g))",
        "(lam (fn_2 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit (_rnot _w) $0))))",
        "(lam (fn_2 (car (map (lam $1) (_rsplit _rempty $0))) (lam (_rconcat $0 _v))))",
        "(lam (fn_2 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1))))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (_rflatten (if (_rmatch _e (_rtail (_rsplit _rempty $0))) (_rsplit _rempty $0) (_rappend _o (_rsplit _rempty $0)))))",
        "(lam (fn_3 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_3 $0 (_rconcat _t _m)))",
        "(lam (fn_5 (fn_3 $0 _t) _m))",
        "(lam (fn_4 (fn_5 $0 _k) _t _m))",
        "(lam (fn_4 (fn_5 $0 _m) _t _m))",
        "(lam (fn_4 (fn_5 $0 _y) _t _m))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (fn_7 $0 (_rconcat _e _e)))",
        "(lam (fn_1 $0 (_rconcat _e _rempty) _e))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _e _e))))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (fn_9 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _i $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _v $0))))",
        "(lam (_rflatten (cons _j (_rsplit _d $0))))",
        "(lam (fn_2 $0 (lam _j)))",
        "(lam (fn_8 _j _rempty $0))",
        "(lam (fn_2 (fn_2 $0 (lam $0)) (lam _j)))",
        "(lam (fn_2 (fn_2 $0 (lam _j)) (lam $0)))",
        "(lam (fn_2 (fn_2 $0 (lam _j)) (lam _j)))",
        "(lam (fn_8 _s _h $0))",
        "(lam (fn_8 _s _h (fn_2 $0 (lam _w))))",
        "(lam (fn_2 (fn_2 $0 (lam _h)) (lam (_rconcat $0 _s))))",
        "(lam (fn_8 _s _h (fn_2 $0 (lam _h))))",
        "(lam (fn_6 _w _g (fn_8 _s _h $0)))",
        "(lam (fn_1 $0 _i _w))",
        "(lam (fn_7 $0 (_rconcat _w _i)))",
        "(lam (fn_7 (fn_1 $0 _i _i) _w))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _j _r))",
        "(lam (fn_2 (fn_0 $0 _j _r) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _j _r))",
        "(lam (fn_0 $0 (_rconcat _j _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat _rempty _j) _r))",
        "(lam (fn_1 $0 _w _y))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _w _y))",
        "(lam (fn_1 $0 _w (_rconcat _rempty _y)))",
        "(lam (fn_1 $0 _w (_rconcat _y _rempty)))",
        "(lam (fn_1 (fn_7 $0 _w) _w _y))",
        "(lam (fn_0 $0 (_rconcat _d _q) _t))",
        "(lam (fn_2 (fn_0 $0 (_rconcat _d _q) _t) (lam $0)))",
        "(lam (fn_1 $0 _a _q))",
        "(lam (fn_7 $0 (_rconcat _q _a)))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rempty $0)))))))",
        "(lam (fn_1 $0 _a _g))",
        "(lam (fn_7 $0 (_rconcat _g _a)))",
        "(lam (fn_9 (fn_7 $0 _a) _g))",
        "(lam (fn_2 (fn_1 $0 _a _g) (lam $0)))",
        "(lam (fn_7 (fn_1 $0 _a _r) _g))",
        "(lam (fn_2 $0 (lam _p)))",
        "(lam (fn_2 (fn_2 $0 (lam $0)) (lam _p)))",
        "(lam (fn_2 (fn_2 $0 (lam _p)) (lam $0)))",
        "(lam (fn_2 (fn_4 $0 _o _u) (lam _p)))",
        "(lam (fn_0 $0 (_rconcat _n _k) _l))",
        "(lam (fn_0 $0 (_rconcat _t _y) _t))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 (_rconcat _t _y) _t))))",
        "(lam (fn_1 $0 _r _i))",
        "(lam (fn_7 $0 (_rconcat _i _r)))",
        "(lam (fn_2 (fn_1 $0 _r _i) (lam $0)))",
        "(lam (fn_1 (fn_7 $0 _b) _r _i))",
        "(lam (fn_1 (fn_7 $0 _z) _r _i))",
        "(lam (fn_8 _v _r $0))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lam (fn_4 $0 _d _t))",
        "(lam (fn_2 (fn_4 $0 _d _t) (lam $0)))",
        "(lam (fn_3 (fn_4 $0 _d _t) _t))",
        "(lam (fn_4 (fn_3 $0 _t) _d _t))",
        "(lam (fn_6 _p _p $0))",
        "(lam (fn_6 _p _p (fn_2 $0 (lam $0))))",
        "(lam (fn_6 (_rconcat _rempty _p) _p $0))",
        "(lam (fn_6 _p (_rconcat _rempty _p) $0))",
        "(lam (fn_0 $0 (_rconcat _p _p) _p))",
        "(lam (fn_9 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _w $0))))",
        "(lam (_rflatten (cons _f (_rsplit _b $0))))",
        "(lam (_rflatten (cons _f (_rsplit _t $0))))",
        "(lam (fn_8 _n _f $0))",
        "(lam (fn_2 (fn_8 _n _f $0) (lam $0)))",
        "(lam (fn_8 _n _f (fn_3 $0 _b)))",
        "(lam (fn_8 _n _f (fn_3 $0 _f)))",
        "(lam (fn_2 (fn_2 $0 (lam _n)) (lam (_rconcat _f $0))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (fn_3 $0 _rempty) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (fn_3 $0 _rempty) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _s) (fn_3 $0 _rempty) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (fn_3 $0 _rempty) (_rflatten (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 (_rconcat _x _w) _t))",
        "(lam (fn_2 (fn_0 $0 (_rconcat _x _w) _t) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _x _w) _t))",
        "(lam (fn_0 (_rflatten (_rsplit _a $0)) (_rconcat _x _w) _t))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _x _w) _t) _n _t))",
        "(lam (fn_0 $0 (_rconcat _v _q) _l))",
        "(lam (fn_2 (fn_0 $0 (_rconcat _v _q) _l) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _v _q) _l))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _v _q) _rempty) _l))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _v _rempty) _q) _l))",
        "(lam (fn_7 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 (_rconcat _k _b) _c))",
        "(lam (fn_0 $0 (_rconcat _t _u) _e))",
        "(lam (fn_1 $0 _m _r))",
        "(lam (fn_7 $0 (_rconcat _r _m)))",
        "(lam (fn_1 $0 (_rconcat _rempty _m) _r))",
        "(lam (_rflatten (cons _r (_rsplit _r (fn_7 $0 _m)))))",
        "(lam (_rflatten (cons _r (_rsplit _b (fn_7 $0 _m)))))",
        "(lam (fn_1 $0 _w _b))",
        "(lam (fn_7 $0 (_rconcat _b _w)))",
        "(lam (fn_7 (fn_1 $0 _w _e) _b))",
        "(lam (fn_7 (fn_1 $0 _w _u) _b))",
        "(lam (fn_7 (fn_1 $0 _w _g) _b))",
        "(lam (fn_3 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_1 $0 _d (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _d (car (_rsplit _rdot $0))))",
        "(lam (fn_1 $0 _d (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (fn_2 (fn_1 $0 _d (car (_rsplit _rempty $0))) (lam $0)))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _d (car (_rsplit _rempty $0))))))",
        "(lam (fn_7 $0 _f))",
        "(lam (fn_1 $0 _f _rempty))",
        "(lam (fn_1 $0 _rempty _f))",
        "(lam (fn_7 $0 (_rconcat _rempty _f)))",
        "(lam (fn_7 (fn_7 $0 _a) _f))",
        "(lam (fn_7 (fn_7 $0 _rempty) _w))",
        "(lam (fn_7 (fn_1 $0 _rempty _rempty) _w))",
        "(lam (fn_1 (fn_7 $0 _rempty) _rempty _w))",
        "(lam (fn_1 (fn_7 $0 _rempty) _w _rempty))",
        "(lam (fn_7 (fn_2 (fn_7 $0 _rempty) (lam $0)) _w))",
        "(lam (fn_8 _i _n $0))",
        "(lam (fn_8 _i (_rconcat _n _rempty) $0))",
        "(lam (fn_8 _i _n (fn_2 $0 (lam _i))))",
        "(lam (fn_3 (fn_8 _i _n $0) _i))",
        "(lam (fn_0 (fn_8 _i _g $0) _n _g))",
        "(lam (fn_8 _t _w $0))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _l _m))",
        "(lam (fn_2 (fn_0 $0 _l _m) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _l _m))",
        "(lam (fn_2 $0 (lam (if (_rmatch _m $0) _l $0))))",
        "(lam (fn_5 (fn_3 $0 _i) _y))",
        "(lam (fn_4 (fn_5 $0 _e) _i _y))",
        "(lam (fn_4 (fn_5 $0 _t) _i _y))",
        "(lam (fn_4 (fn_5 $0 _v) _i _y))",
        "(lam (fn_4 (fn_5 $0 _s) _i _y))",
        "(lam (fn_6 _u _c $0))",
        "(lam (fn_2 (fn_6 _u _c $0) (lam $0)))",
        "(lam (fn_6 (_rconcat _rempty _u) _c $0))",
        "(lam (fn_6 (_rconcat _u _rempty) _c $0))",
        "(lam (fn_0 $0 (_rconcat _u _c) _c))",
        "(lam (fn_8 _e _u $0))",
        "(lam (fn_6 _u _e (fn_2 $0 (lam _e))))",
        "(lam (fn_8 _e _u (fn_3 $0 _i)))",
        "(lam (fn_8 _e _u (fn_3 $0 _f)))",
        "(lam (fn_2 (fn_2 $0 (lam _u)) (lam (_rconcat $0 _e))))",
        "(lam (fn_0 $0 _n _t))",
        "(lam (fn_0 $0 (_rconcat _s _x) _s))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _s _x) _s))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (fn_7 $0 (_rconcat _k _e)))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _e _k))",
        "(lam (fn_1 $0 _e (_rconcat _rempty _k)))",
        "(lam (fn_1 $0 _e (_rconcat _k _rempty)))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (fn_7 $0 (_rconcat _x _e)))",
        "(lam (fn_1 $0 (_rconcat _e _rempty) _x))",
        "(lam (fn_7 (fn_1 $0 _e _e) _x))",
        "(lam (fn_1 (fn_7 $0 _z) _e _x))",
        "(lam (fn_0 $0 (_rconcat _e _d) _r))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _e _d) _r))",
        "(lam (fn_0 (fn_6 _e _r $0) _d _r))",
        "(lam (fn_0 $0 (_rconcat _e _d) (_rconcat _rempty _r)))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _e _w) _r) _d _w))",
        "(lam (fn_0 $0 (_rconcat _c _e) _c))",
        "(lam (fn_1 $0 _i _m))",
        "(lam (fn_7 $0 (_rconcat _m _i)))",
        "(lam (fn_7 (fn_1 $0 _i _i) _m))",
        "(lam (fn_1 (fn_7 $0 _i) _i _m))",
        "(lam (_rflatten (cons _m (_rsplit _r (fn_7 $0 _i)))))",
        "(lam (fn_2 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _q $0))))",
        "(lam (fn_2 (fn_2 $0 (lam (_rconcat _q $0))) (lam $0)))",
        "(lam (fn_2 $0 (lam (_rconcat (_rconcat _q $0) _rempty))))",
        "(lam (fn_2 $0 (lam (_rconcat (_rconcat _rempty _q) $0))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (fn_7 (fn_1 $0 _o _e) _j))",
        "(lam (fn_7 (fn_1 $0 _o _rdot) _j))",
        "(lam (fn_7 (fn_1 $0 _o _f) _j))",
        "(lam (fn_7 (fn_1 $0 _o _x) _j))",
        "(lam (fn_0 $0 (_rconcat _t _q) _s))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _t _q) _s))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _t _q)) _s))",
        "(lam (fn_0 $0 (_rconcat _t (_rconcat _rempty _q)) _s))",
        "(lam (fn_0 $0 (_rconcat _t _q) (_rconcat _s _rempty)))",
        "(lam (fn_8 _i _g $0))",
        "(lam (fn_8 _i _g (fn_2 $0 (lam $0))))",
        "(lam (fn_3 (fn_8 _i _g $0) _i))",
        "(lam (fn_8 _i _g (fn_3 $0 _i)))",
        "(lam (fn_6 _g _i (fn_2 $0 (lam _i))))",
        "(lam (fn_3 $0 (_rconcat _o _m)))",
        "(lam (fn_3 (fn_2 $0 (lam $0)) (_rconcat _o _m)))",
        "(lam (fn_2 (fn_3 $0 (_rconcat _o _m)) (lam $0)))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 (_rconcat _k _a) _g))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _k _a) _g))",
        "(lam (fn_0 (fn_5 $0 _rempty) (_rconcat _k _a) _g))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _rdot _a) _g) _k _g))",
        "(lam (fn_0 (fn_0 $0 (_rconcat _k _a) _g) _k _g))",
        "(lam (fn_8 _x _h $0))",
        "(lam (fn_8 _x _h (fn_2 $0 (lam _x))))",
        "(lam (fn_2 (fn_2 $0 (lam _x)) (lam (_rconcat _h $0))))",
        "(lam (fn_6 _h _x (fn_2 $0 (lam _x))))",
        "(lam (fn_2 (fn_2 (fn_2 $0 (lam _x)) (lam _x)) (lam (_rconcat _h $0))))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (fn_7 $0 (_rconcat _r _r)))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _r _r))",
        "(lam (fn_1 $0 _r (_rconcat _rempty _r)))",
        "(lam (fn_7 (fn_1 $0 _r _e) _r))",
        "(lam (fn_0 $0 _c _g))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _c _g))",
        "(lam (fn_0 $0 (_rconcat _rempty _c) _g))",
        "(lam (fn_0 $0 _c (_rconcat _rempty _g)))",
        "(lam (fn_0 (fn_5 $0 _rempty) _c _g))",
        "(lam (fn_7 $0 _i))",
        "(lam (fn_1 $0 _i _rempty))",
        "(lam (fn_1 $0 _rempty _i))",
        "(lam (fn_7 $0 (_rconcat _i _rempty)))",
        "(lam (fn_7 (fn_7 $0 _b) _i))",
        "(lam (fn_0 $0 (_rconcat _l _p) _t))",
        "(lam (fn_0 (fn_6 _l _t $0) _p _t))",
        "(lam (fn_3 $0 (_rconcat _o _g)))",
        "(lam (fn_5 (fn_3 $0 _o) _g))",
        "(lam (fn_4 (fn_5 $0 _a) _o _g))",
        "(lam (fn_4 (fn_5 $0 _o) _o _g))",
        "(lam (fn_4 (fn_5 $0 _g) _o _g))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (fn_7 $0 _a))))))))",
        "(lam (fn_7 (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))) _e))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lam (fn_6 _w _g $0))",
        "(lam (fn_0 $0 (_rconcat _a _w) _p))",
        "(lam (fn_1 $0 _w _a))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _a (fn_7 $0 _w))))))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _rdot (fn_7 $0 _w))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _rempty (cons _a (_rsplit _p (fn_7 $0 _w))))))",
        "(lam (fn_3 $0 (_rconcat _r _j)))",
        "(lam (fn_4 (fn_5 $0 _r) _r _j))",
        "(lam (fn_4 (fn_5 $0 _b) _r _j))",
        "(lam (fn_4 (fn_5 $0 _j) _r _j))",
        "(lam (fn_4 (fn_5 $0 _k) _r _j))",
        "(lam (fn_8 _p _i $0))",
        "(lam (fn_8 _p _i $0))",
        "(lam (fn_8 _p _i (fn_2 $0 (lam $0))))",
        "(lam (fn_8 (_rconcat _p _rempty) _i $0))",
        "(lam (fn_8 (_rconcat _rempty _p) _i $0))",
        "(lam (fn_8 _g _n $0))",
        "(lam (fn_8 _g _n $0))",
        "(lam (fn_8 _g _n (fn_2 $0 (lam $0))))",
        "(lam (fn_6 _n _g (fn_2 $0 (lam _g))))",
        "(lam (fn_6 _e _e (fn_8 _g _n $0)))",
        "(lam (fn_1 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_7 $0 (_rconcat (car (_rsplit _rempty $0)) _o)))",
        "(lam (fn_7 $0 (_rconcat (car (_rsplit _rdot $0)) _o)))",
        "(lam (fn_7 $0 (car (map (lam (_rconcat $0 _o)) (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 _i _x))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _i _x))",
        "(lam (fn_1 (fn_7 $0 _i) _i _x))",
        "(lam (fn_1 (fn_7 $0 _rdot) _i _x))",
        "(lam (fn_1 (fn_7 $0 _w) _i _x))",
        "(lam (fn_1 $0 _i _q))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _i _q))",
        "(lam (fn_1 (fn_7 $0 _a) _i _q))",
        "(lam (fn_1 (fn_7 $0 _w) _i _q))",
        "(lam (fn_1 (fn_5 $0 _rempty) _i _q))",
        "(lam (fn_4 $0 _j _rempty))",
        "(lam (fn_4 $0 _rempty _j))",
        "(lam (fn_3 (fn_3 $0 _rempty) _j))",
        "(lam (fn_3 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_3 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 _k _t))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _k _t))",
        "(lam (fn_0 $0 (_rconcat _k _rempty) _t))",
        "(lam (fn_0 $0 (_rconcat _rempty _k) _t))",
        "(lam (fn_0 (fn_5 $0 _rempty) _k _t))",
        "(lam (fn_1 $0 _s _e))",
        "(lam (fn_7 $0 (_rconcat _e _s)))",
        "(lam (fn_7 (fn_1 $0 _s _e) _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _b _u))",
        "(lam (fn_0 $0 (_rconcat _b _rempty) _u))",
        "(lam (fn_0 $0 (_rconcat _rempty _b) _u))",
        "(lam (fn_0 $0 _b (_rconcat _rempty _u)))",
        "(lam (fn_0 $0 _b (_rconcat _u _rempty)))",
        "(lam (fn_1 (fn_7 $0 _rempty) _s _e))",
        "(lam (fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _v _i))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _v _i))",
        "(lam (fn_0 $0 (_rconcat _rempty _v) _i))",
        "(lam (fn_0 $0 (_rconcat _v _rempty) _i))",
        "(lam (_rflatten (_rsplit _b (fn_0 $0 _v _i))))",
        "(lam (fn_2 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (fn_4 $0 _r _q))",
        "(lam (fn_2 (fn_4 $0 _r _q) (lam $0)))",
        "(lam (fn_4 (fn_2 $0 (lam $0)) _r _q))",
        "(lam (fn_4 (fn_3 $0 _rdot) _r _q))",
        "(lam (fn_4 (fn_4 $0 _q _q) _r _q))",
        "(lam (fn_4 $0 _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_0 $0 (_rconcat _n _m) _c))",
        "(lam (fn_2 (fn_0 $0 (_rconcat _n _m) _c) (lam $0)))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 (_rconcat _n _m) _c))))",
        "(lam (_rflatten (_rsplit _w (fn_0 $0 (_rconcat _n _m) _c))))",
        "(lam (_rflatten (_rsplit _b (fn_0 $0 (_rconcat _n _m) _c))))",
        "(lam (fn_8 _r _h $0))",
        "(lam (fn_8 _r _h (fn_2 $0 (lam _r))))",
        "(lam (fn_6 _h _r (fn_2 $0 (lam _r))))",
        "(lam (fn_2 (fn_2 $0 (lam _h)) (lam (_rconcat $0 _r))))",
        "(lam (fn_2 (fn_2 $0 (lam _r)) (lam (_rconcat _h $0))))",
        "(lam (fn_5 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lam (fn_5 (fn_3 $0 _x) _s))",
        "(lam (fn_4 (fn_5 $0 _e) _x _s))",
        "(lam (fn_4 (fn_5 $0 _rdot) _x _s))",
        "(lam (fn_4 (fn_5 $0 _x) _x _s))",
        "(lam (fn_4 (fn_5 $0 _s) _x _s))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _z $0))))",
        "(lam (fn_7 $0 _a))",
        "(lam (fn_1 $0 _a _rempty))",
        "(lam (fn_1 (fn_2 $0 (lam $0)) _a _rempty))",
        "(lam (_rflatten (cons _rempty (cons _a (map (lam $0) (cdr (_rsplit _rempty $0)))))))",
        "(lam (fn_5 $0 _u))",
        "(lam (fn_5 (fn_2 $0 (lam $0)) _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lam (fn_5 $0 (_rconcat _rempty _u)))",
        "(lam (_rflatten (_rsplit _t (fn_5 $0 _u))))",
        "(lam (fn_3 $0 (_rconcat _x _p)))",
        "(lam (fn_5 (fn_3 $0 _x) _p))",
        "(lam (fn_4 (fn_5 $0 _r) _x _p))",
        "(lam (fn_4 (fn_5 $0 _f) _x _p))",
        "(lam (fn_4 (fn_5 $0 _x) _x _p))",
        "(lam (fn_0 $0 (_rconcat _p _o) _p))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) (_rconcat _p _o) _p))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _p _o) _rempty) _p))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _p _rempty) _o) _p))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _p) _o) _p))",
        "(lam (fn_6 _r _o $0))",
        "(lam (fn_2 (fn_6 _r _o $0) (lam $0)))",
        "(lam (fn_6 _r _o (fn_2 $0 (lam $0))))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (fn_6 _r _o (fn_5 $0 _rempty)))",
        "(lam (fn_9 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (fn_0 $0 _l _o))",
        "(lam (fn_2 (fn_0 $0 _l _o) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _l _o))",
        "(lam (fn_0 $0 _l (_rconcat _o _rempty)))",
        "(lam (fn_2 $0 (lam (if (_rmatch _o $0) _l $0))))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_2 (fn_0 $0 _o _t) (lam $0)))",
        "(lam (fn_0 (fn_2 $0 (lam $0)) _o _t))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _o _t))))",
        "(lam (_rflatten (_rsplit _b (fn_0 $0 _o _t))))",
        "(lam (fn_9 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _w $0))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (fn_3 $0 (_rconcat _c _v)))",
        "(lam (fn_4 (fn_5 $0 _a) _c _v))",
        "(lam (fn_4 (fn_5 $0 _r) _c _v))",
        "(lam (fn_4 (fn_5 $0 _v) _c _v))",
        "(lam (fn_4 (fn_5 $0 _k) _c _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _y _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _y) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _rempty) _d))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _d))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _k _b $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _k _b (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _k _rempty) _b $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _k) _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _b))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _e _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _e) (_rconcat $0 $0) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _e) (_rconcat $0 _e) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _a) _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _rdot)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (map (lambda (_rconcat _k _rempty)) (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (map (lambda (_rconcat _rempty _k)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _a) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _e) _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _j (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _j (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j))) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _j (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda _j))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _g $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _g) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit (_rnot _w) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (car (map (lambda $1) (_rsplit _rempty $0))) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (car (map (lambda (_rconcat $1 _v)) (_rsplit _rempty $1))))))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lambda (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _o (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (if (_rmatch _e (_rtail (_rsplit _rempty $0))) (_rsplit _rempty $0) (_rappend _o (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _t _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _k) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _m) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _y) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _e _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _e _rempty) _e))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _v $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _d $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _w))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _h)) (lambda (_rconcat $0 _s))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _h))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _w _g (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _w _i)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _i) _w))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _j _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _j _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _j _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _j _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _j) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _y _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _q) _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _g _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _r) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _k) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _r)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _z) _r _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _v _r $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) _d _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _p _p $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _p _p (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _p) _p $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _p (_rconcat _rempty _p) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _p) _p))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _w $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _b)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _n)) (lambda (_rconcat _f $0))))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rdot $0)) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (_rflatten (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _x _w) _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _x _w) _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _x _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _a $0)) (_rconcat _x _w) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _x _w) _t) _n _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _v _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _v _q) _rempty) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _v _rempty) _q) _l))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _m) _r))",
        "(lambda (_rflatten (cons _r (_rsplit _r (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _m)))))",
        "(lambda (_rflatten (cons _r (_rsplit _b (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _m)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _e) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _u) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _g) _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rempty $0))) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _f)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _rempty _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _w _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _w))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i (_rconcat _n _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n $0) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0) _n _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l _m) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _l _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _m $0) _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _e) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _t) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _v) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _s) _i _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _u _c $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _u _c $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _u) _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _u _rempty) _c $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _c))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _u _e (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _e))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _u)) (lambda (_rconcat $0 _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _n _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _s _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _k _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e (_rconcat _rempty _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e (_rconcat _k _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _x _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _e _rempty) _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _z) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _e _r $0) _d _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _w) _r) _d _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _m _i)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _i) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i) _i _m))",
        "(lambda (_rflatten (cons _m (_rsplit _r (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (_rconcat _q $0) _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (_rconcat _rempty _q) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _e) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _rdot) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _f) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _x) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _t _q)) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t (_rconcat _rempty _q)) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) (_rconcat _s _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _g _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _m)) (lambda $0)))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _k _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) (_rconcat _k _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rdot _a) _g) _k _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g) _k _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _x)) (lambda (_rconcat _h $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _h _x (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _x))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _x)) (lambda _x)) (lambda (_rconcat _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _e) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _c _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _c) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _c (_rconcat _rempty _g)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) _c _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _l _p) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _l _t $0) _p _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _o _g)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _a) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _o) _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _g) _o _g))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (map (lambda $0) (_rsplit _rempty $0))))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a))))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))) _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _w $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _q $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _w _g $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _a))",
        "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _a (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (_rsplit _p (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _r _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _r) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _b) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _j) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _k) _r _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _p _rempty) _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _p) _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _n _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _g))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _e _e (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat (car (_rsplit _rempty $0)) _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat (car (_rsplit _rdot $0)) _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (car (map (lambda (_rconcat $0 _o)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rdot) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _w) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _k _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _k _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _rempty) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _k) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty) _k _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _e _s)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _e) _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _rempty) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _b) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b (_rconcat _rempty _u)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b (_rconcat _u _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _v) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _rempty) _i))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _q) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rdot) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _q _q) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _m) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _m) _c) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _m) _c))))",
        "(lambda (_rflatten (_rsplit _w (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _m) _c))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _n _m) _c))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _r))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _h _r (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _h)) (lambda (_rconcat $0 _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _r)) (lambda (_rconcat _h $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _e) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rdot) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _x) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _s) _x _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _t $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _z $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _a _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _a (map (lambda $0) (cdr (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 (_rconcat _rempty _u)))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _u))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _x _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _r) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _f) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _x) _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _p _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _p _o) _rempty) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _p _rempty) _o) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _p) _o) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _r _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _r _o $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _r _o (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _r _o (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l _o))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l _o) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _l _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l (_rconcat _o _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _o $0) _l $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _o _t))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _w $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat _c _v)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _a) _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _r) _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _v) _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _k) _c _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 22656,
            "final_cost": 76774,
            "compression_ratio": 1.2773074217834162,
            "cumulative_compression_ratio": 1.2773074217834162,
            "num_uses": 135,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _l (_rconcat _o _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _o _rempty)) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _c (_rconcat _rempty _g)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _g)) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p #0) (_rconcat _rempty _p)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) (_rconcat _p $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) (_rconcat _rempty _r)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b (_rconcat _rempty _u)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _u)) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) (_rconcat _s _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _s _rempty)) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b (_rconcat _u _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _u _rempty)) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _k _rempty) #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _k _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _k) #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _rempty _k) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _k #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _k _b) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _u) #0) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _u _rempty) #0) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _n _m) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _n _m) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u #0) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _y) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y _rempty) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _y _d": "(_rflatten (map (lam (if (_rmatch $0 _d) _y $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat #0 #0) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e #0) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))) (_rconcat _e #0) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam _e) (_rsplit _rempty $0))) (_rconcat _u #0) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _u $0) $0)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _a $0))) (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam _g) (_rsplit _rempty $0))) (_rconcat _n #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _n $0) $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _q #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rdot _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rdot _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _c) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rempty _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _w #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))) (_rconcat _w #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _c _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _a $0))) _c _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _c _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _c $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))) _k _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _k $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rdot _a) $0)) (_rsplit _rempty $0))) _k _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _k $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rdot _a) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))) _n _g": "(_rflatten (map (lam (if (_rmatch $0 _g) _n $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (_rconcat _g #0) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _g $0) $0)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _v) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _rempty _v) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _rempty) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _v _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (_rconcat _q #0) _j": "(_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))) (_rconcat _q #0) _j": "(_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _v _q) _rempty) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _v _q) _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _v _rempty) _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _v _rempty) _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _n _k) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _n _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _l _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _l _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _r #0) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _a $0))) (_rconcat _r #0) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _r #0) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _l _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _l _o": "(_rflatten (map (lam (if (_rmatch $0 _o) _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _p _o) _rempty) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _p _o) _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _p _rempty) _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _p _rempty) _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _p) #0) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _p) _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p #0) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _p #0) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _p _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _p _o) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _o) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _p _p) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e #0) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _e _w) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam _r) (_rsplit _rempty $0))) (_rconcat _h #0) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _j _rempty) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _j _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _j) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty _j) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0))) _d _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _t _q)) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty (_rconcat _t _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _t (_rconcat _rempty _q)) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _q) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _d _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _rempty) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _k _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _l #0) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _l _p) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l _p) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _k) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _k) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _x _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _a $0)) (_rconcat _x _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (_rsplit _a $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _x _w) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _a $0))) _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _n _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0))) _n _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _n $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _x _w) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _o _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _o _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0))) _p _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _p $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _rempty) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _b) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _rempty _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _w) $0)) (_rsplit _rempty $0))) _d _w": "(_rflatten (map (lam (if (_rmatch $0 _w) _d $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _w) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam _x) (_rsplit _rempty $0))) (_rconcat _h #0) _x": "(_rflatten (map (lam (if (_rmatch $0 _x) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 11514,
            "final_cost": 66109,
            "compression_ratio": 1.161324479269086,
            "cumulative_compression_ratio": 1.4833683764691645,
            "num_uses": 78,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _e (_rconcat _k _rempty)": "(_rflatten (cons (_rconcat _k _rempty) (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e (_rconcat _rempty _k)": "(_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _rempty _r)": "(_rflatten (cons (_rconcat _rempty _r) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w (_rconcat _y _rempty)": "(_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _d (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _a": "(_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _b": "(_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _e _rempty) _e": "(_rflatten (cons _e (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _e": "(_rflatten (cons _e (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r _e": "(_rflatten (cons _e (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _w _e": "(_rflatten (cons _e (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _f": "(_rflatten (cons _f (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _g": "(_rflatten (cons _g (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _i": "(_rflatten (cons _i (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _z (cdr (_rsplit _rempty $0)))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _rempty _i": "(_rflatten (cons _i (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (_rsplit _rempty $0)))) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _a _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _a $0))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _m) _r": "(_rflatten (cons _r (cons (_rconcat _rempty _m) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _r": "(_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _m _r": "(_rflatten (cons _r (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _o _rdot": "(_rflatten (cons _rdot (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _w _u": "(_rflatten (cons _u (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _e _rempty) _x": "(_rflatten (cons _x (cons (_rconcat _e _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _z (cdr (_rsplit _rempty $0)))) _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty (_rflatten (cons _z (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (_rsplit _rempty $0)))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rdot (cdr (_rsplit _rempty $0)))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rdot (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _o _x": "(_rflatten (cons _x (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 5757,
            "final_cost": 60661,
            "compression_ratio": 1.0898105867031536,
            "cumulative_compression_ratio": 1.6165905606567645,
            "num_uses": 183,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _d _q) _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _d _q) _t))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _n _m) _c) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _n _m) _c))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _v _q) _l) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _v _q) _l))))"
                },
                {
                    "fn_2 (fn_0 $0 (_rconcat _x _w) _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _x _w) _t))))"
                },
                {
                    "fn_2 (fn_0 $0 _j _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _j _r))))"
                },
                {
                    "fn_2 (fn_0 $0 _l _m) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _l _m))))"
                },
                {
                    "fn_2 (fn_0 $0 _l _o) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _l _o))))"
                },
                {
                    "fn_2 (fn_0 $0 _o _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _o _t))))"
                },
                {
                    "fn_2 (fn_1 $0 _a _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _a _g))))"
                },
                {
                    "fn_2 (fn_1 $0 _d (car (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _d (car (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (fn_1 $0 _r _i) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _r _i))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _u) (_rsplit _rempty $0))) (lam (_rconcat $0 _e))": "(_rflatten (map (lam (_rconcat $0 _e)) (_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _h) (_rsplit _rempty $0))) (lam (_rconcat $0 _r))": "(_rflatten (map (lam (_rconcat $0 _r)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _h) (_rsplit _rempty $0))) (lam (_rconcat $0 _s))": "(_rflatten (map (lam (_rconcat $0 _s)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (car (map (lam $1) (_rsplit _rempty $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (car (map (lam $1) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat (_rconcat _n _rempty) _i))": "(_rflatten (map (lam (_rconcat (_rconcat _n _rempty) _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat (_rconcat _q $0) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _q $0) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat (_rconcat _rempty _q) $0))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _n) (_rsplit _rempty $0))) (lam (_rconcat _f $0))": "(_rflatten (map (lam (_rconcat _f $0)) (_rsplit _rempty (_rflatten (map (lam _n) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _r) (_rsplit _rempty $0))) (lam (_rconcat _h $0))": "(_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _x) (_rsplit _rempty $0))) (lam (_rconcat _h $0))": "(_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _x) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0)))))) (lam (_rconcat _h $0))": "(_rflatten (map (lam (_rconcat _h $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _r) (_rsplit _rempty $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _h) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _w) (_rsplit _rempty $0))) (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _w) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _x) (_rsplit _rempty $0))) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _i (_rconcat _p _rempty)))": "(_rflatten (map (lam (_rconcat _i (_rconcat _p _rempty))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _i (_rconcat _rempty _p)))": "(_rflatten (map (lam (_rconcat _i (_rconcat _rempty _p))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _rempty _j))": "(_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 (_rconcat _rempty _p)) (_rconcat _p $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) (_rconcat _p $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _k _rempty) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _k _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _rempty _k) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _rempty _k) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat $0 _e) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat $0 _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _e) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _e) (_rconcat _u $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _u $0) $0)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _g) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _g) (_rconcat _n $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _n $0) $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _i) (_rconcat _g $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _g $0) $0)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))) (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rsplit _a $0))) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _r) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _r) (_rconcat _h $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _r) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _x) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _x) (_rconcat _h $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _x) (_rconcat _h $0) $0)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch _m $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _m $0) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _g)": "(_rflatten (map (lam _g) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _h)": "(_rflatten (map (lam _h) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _i)": "(_rflatten (map (lam _i) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _rdot) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _rdot) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam _n)": "(_rflatten (map (lam _n) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (lam _r)": "(_rflatten (map (lam _r) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _rdot)": "(_rflatten (map (lam _rdot) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _u)": "(_rflatten (map (lam _u) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _w)": "(_rflatten (map (lam _w) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 $0 (lam _x)": "(_rflatten (map (lam _x) (_rsplit _rempty $0)))"
                },
                {
                    "fn_2 (_rflatten (map (lam _x) (_rsplit _rempty $0))) (lam _x)": "(_rflatten (map (lam _x) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 5353,
            "final_cost": 55543,
            "compression_ratio": 1.092144824730389,
            "cumulative_compression_ratio": 1.7655510145292836,
            "num_uses": 41,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (fn_2 $0 (lam $0)) (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty (fn_2 $0 (lam $0))))))"
                },
                {
                    "fn_3 $0 (_rconcat _r _j)": "(_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _t _m)": "(_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _x _p)": "(_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _b": "(_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (fn_2 $0 (lam (_rconcat _g _i))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (fn_2 $0 (lam (_rconcat _g _i)))))))"
                },
                {
                    "fn_3 (fn_2 $0 (lam (_rconcat _n _i))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (fn_2 $0 (lam (_rconcat _n _i)))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_3 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_3 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_3 $0 _rdot": "(_rflatten (_rappend _rdot (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_3 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2)))))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 2525,
            "final_cost": 53256,
            "compression_ratio": 1.0429435181012467,
            "cumulative_compression_ratio": 1.8413699864803965,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _o _a": "(_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _a (_rsplit _a $0))) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _g (_rsplit _a $0))) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _o (_rsplit _a $0))) _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _b (_rsplit _a $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _b (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _j (_rsplit _a $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _k (_rsplit _a $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _r (_rsplit _a $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _k (_rsplit _a $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _m (_rsplit _a $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _y (_rsplit _a $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _f (_rsplit _a $0))) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _r (_rsplit _a $0))) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _x (_rsplit _a $0))) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _x (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 $0 _q _q": "(_rflatten (_rappend _q (_rappend _q (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _q (_rappend _q (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rappend _q (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_4 (fn_2 $0 (lam $0)) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_2 $0 (lam $0))))))))"
                },
                {
                    "fn_4 (fn_3 $0 _rdot) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_3 $0 _rdot)))))))"
                },
                {
                    "fn_4 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _e (_rsplit _a $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _rdot (_rsplit _a $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rdot (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _s (_rsplit _a $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _x (_rsplit _a $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _x (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (fn_3 $0 _t) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_3 $0 _t)))))))"
                },
                {
                    "fn_4 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (fn_3 $0 _e) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_3 $0 _e)))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _a (_rsplit _a $0))) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _k (_rsplit _a $0))) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _r (_rsplit _a $0))) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _v (_rsplit _a $0))) _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _e (_rsplit _a $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _e (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _s (_rsplit _a $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _t (_rsplit _a $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _a $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _v (_rsplit _a $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _v (_rsplit _a $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 2121,
            "final_cost": 51218,
            "compression_ratio": 1.0397906985825296,
            "cumulative_compression_ratio": 1.9146393845913545,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _rempty _u)": "(_rflatten (_rappend (_rconcat _rempty _u) (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _a": "(_rflatten (_rappend _a (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _b": "(_rflatten (_rappend _b (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _d": "(_rflatten (_rappend _d (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _e": "(_rflatten (_rappend _e (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (_rappend _f (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _g": "(_rflatten (_rappend _g (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_3 $0 _o) _g": "(_rflatten (_rappend _g (_rsplit _a (fn_3 $0 _o))))"
                },
                {
                    "fn_5 $0 _j": "(_rflatten (_rappend _j (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _m": "(_rflatten (_rappend _m (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_3 $0 _t) _m": "(_rflatten (_rappend _m (_rsplit _a (fn_3 $0 _t))))"
                },
                {
                    "fn_5 $0 _o": "(_rflatten (_rappend _o (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_3 $0 _x) _p": "(_rflatten (_rappend _p (_rsplit _a (fn_3 $0 _x))))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _r": "(_rflatten (_rappend _r (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _rdot": "(_rflatten (_rappend _rdot (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _s": "(_rflatten (_rappend _s (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_3 $0 _x) _s": "(_rflatten (_rappend _s (_rsplit _a (fn_3 $0 _x))))"
                },
                {
                    "fn_5 $0 _t": "(_rflatten (_rappend _t (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _u": "(_rflatten (_rappend _u (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_2 $0 (lam $0)) _u": "(_rflatten (_rappend _u (_rsplit _a (fn_2 $0 (lam $0)))))"
                },
                {
                    "fn_5 $0 _v": "(_rflatten (_rappend _v (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _x": "(_rflatten (_rappend _x (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _y": "(_rflatten (_rappend _y (_rsplit _a $0)))"
                },
                {
                    "fn_5 (fn_3 $0 _i) _y": "(_rflatten (_rappend _y (_rsplit _a (fn_3 $0 _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 #2 (lam (if (_rmatch $0 #1) (_rconcat #0 $0) $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1819,
            "final_cost": 49553,
            "compression_ratio": 1.0336003874639275,
            "cumulative_compression_ratio": 1.9789720097673198,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _p (_rconcat _rempty _p) $0": "(fn_2 $0 (lam (if (_rmatch $0 (_rconcat _rempty _p)) (_rconcat _p $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _k _rempty) _b $0": "(fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _k _rempty) $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _k) _b $0": "(fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat (_rconcat _rempty _k) $0) $0)))"
                },
                {
                    "fn_6 _k _b $0": "(fn_2 $0 (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _u) _c $0": "(fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _u) $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _u _rempty) _c $0": "(fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _u _rempty) $0) $0)))"
                },
                {
                    "fn_6 _u _c $0": "(fn_2 $0 (lam (if (_rmatch $0 _c) (_rconcat _u $0) $0)))"
                },
                {
                    "fn_6 #0 _e $0": "(fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat $0 $0) $0)))"
                },
                {
                    "fn_6 _e _e $0": "(fn_2 $0 (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)))"
                },
                {
                    "fn_6 _q _g $0": "(fn_2 $0 (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)))"
                },
                {
                    "fn_6 _w _g $0": "(fn_2 $0 (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)))"
                },
                {
                    "fn_6 _r _o $0": "(fn_2 $0 (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _p) _p $0": "(fn_2 $0 (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _p) $0) $0)))"
                },
                {
                    "fn_6 _p _p $0": "(fn_2 $0 (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)))"
                },
                {
                    "fn_6 _e _r $0": "(fn_2 $0 (lam (if (_rmatch $0 _r) (_rconcat _e $0) $0)))"
                },
                {
                    "fn_6 _l _t $0": "(fn_2 $0 (lam (if (_rmatch $0 _t) (_rconcat _l $0) $0)))"
                },
                {
                    "fn_6 _k _b (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)))"
                },
                {
                    "fn_6 _r _o (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_6 _p _p (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (if (_rmatch $0 _p) (_rconcat _p $0) $0)))"
                },
                {
                    "fn_6 _w _g (fn_2 $0 (lam (_rconcat _h _s)))": "(fn_2 (fn_2 $0 (lam (_rconcat _h _s))) (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)))"
                },
                {
                    "fn_6 _e _e (fn_2 $0 (lam (_rconcat _n _g)))": "(fn_2 (fn_2 $0 (lam (_rconcat _n _g))) (lam (if (_rmatch $0 _e) (_rconcat _e $0) $0)))"
                },
                {
                    "fn_6 _u _e (fn_2 $0 (lam _e))": "(fn_2 (fn_2 $0 (lam _e)) (lam (if (_rmatch $0 _e) (_rconcat _u $0) $0)))"
                },
                {
                    "fn_6 _n _g (fn_2 $0 (lam _g))": "(fn_2 (fn_2 $0 (lam _g)) (lam (if (_rmatch $0 _g) (_rconcat _n $0) $0)))"
                },
                {
                    "fn_6 _g _i (fn_2 $0 (lam _i))": "(fn_2 (fn_2 $0 (lam _i)) (lam (if (_rmatch $0 _i) (_rconcat _g $0) $0)))"
                },
                {
                    "fn_6 _q _j (fn_2 $0 (lam _j))": "(fn_2 (fn_2 $0 (lam _j)) (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)))"
                },
                {
                    "fn_6 _h _r (fn_2 $0 (lam _r))": "(fn_2 (fn_2 $0 (lam _r)) (lam (if (_rmatch $0 _r) (_rconcat _h $0) $0)))"
                },
                {
                    "fn_6 _h _x (fn_2 $0 (lam _x))": "(fn_2 (fn_2 $0 (lam _x)) (lam (if (_rmatch $0 _x) (_rconcat _h $0) $0)))"
                },
                {
                    "fn_6 _q _j (fn_2 (fn_2 $0 (lam _j)) (lam _j))": "(fn_2 (fn_2 (fn_2 $0 (lam _j)) (lam _j)) (lam (if (_rmatch $0 _j) (_rconcat _q $0) $0)))"
                },
                {
                    "fn_6 _r _o (fn_5 $0 _rempty)": "(fn_2 (fn_5 $0 _rempty) (lam (if (_rmatch $0 _o) (_rconcat _r $0) $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1414,
            "final_cost": 48184,
            "compression_ratio": 1.0284119209696165,
            "cumulative_compression_ratio": 2.035198406109912,
            "num_uses": 67,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (_rconcat (car (_rsplit _rdot $0)) _o)": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat (car (_rsplit _rempty $0)) _o)": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _e _e)": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _g _a)": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _i _r)": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _k _e)": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _m _i)": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _rempty _f)": "(_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (_rconcat _x _e)": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 (car (map (lam (_rconcat $0 _o)) (_rsplit _rempty $0)))": "(_rflatten (cons (car (map (lam (_rconcat $0 _o)) (_rsplit _rempty $0))) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (fn_1 $0 _w _e) _b": "(_rflatten (cons _b (cdr (_rsplit _rempty (fn_1 $0 _w _e)))))"
                },
                {
                    "fn_7 (fn_1 $0 _w _g) _b": "(_rflatten (cons _b (cdr (_rsplit _rempty (fn_1 $0 _w _g)))))"
                },
                {
                    "fn_7 (fn_1 $0 _w _u) _b": "(_rflatten (cons _b (cdr (_rsplit _rempty (fn_1 $0 _w _u)))))"
                },
                {
                    "fn_7 (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0)))))) _e": "(_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _a (cons _a (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_7 (fn_1 $0 _s _e) _e": "(_rflatten (cons _e (cdr (_rsplit _rempty (fn_1 $0 _s _e)))))"
                },
                {
                    "fn_7 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _f": "(_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_7 (fn_1 $0 _a _r) _g": "(_rflatten (cons _g (cdr (_rsplit _rempty (fn_1 $0 _a _r)))))"
                },
                {
                    "fn_7 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_7 (fn_1 $0 _o _e) _j": "(_rflatten (cons _j (cdr (_rsplit _rempty (fn_1 $0 _o _e)))))"
                },
                {
                    "fn_7 (fn_1 $0 _o _f) _j": "(_rflatten (cons _j (cdr (_rsplit _rempty (fn_1 $0 _o _f)))))"
                },
                {
                    "fn_7 (fn_1 $0 _o _rdot) _j": "(_rflatten (cons _j (cdr (_rsplit _rempty (fn_1 $0 _o _rdot)))))"
                },
                {
                    "fn_7 (fn_1 $0 _o _x) _j": "(_rflatten (cons _j (cdr (_rsplit _rempty (fn_1 $0 _o _x)))))"
                },
                {
                    "fn_7 $0 _m": "(_rflatten (cons _m (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (fn_1 $0 _i _i) _m": "(_rflatten (cons _m (cdr (_rsplit _rempty (fn_1 $0 _i _i)))))"
                },
                {
                    "fn_7 (fn_1 $0 _a _a) _n": "(_rflatten (cons _n (cdr (_rsplit _rempty (fn_1 $0 _a _a)))))"
                },
                {
                    "fn_7 (fn_1 $0 _r _e) _r": "(_rflatten (cons _r (cdr (_rsplit _rempty (fn_1 $0 _r _e)))))"
                },
                {
                    "fn_7 $0 _rdot": "(_rflatten (cons _rdot (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 $0 _w": "(_rflatten (cons _w (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_7 (fn_1 $0 _i _i) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_1 $0 _i _i)))))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _rempty) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_1 $0 _rempty _rempty)))))"
                },
                {
                    "fn_7 (fn_2 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) (lam $0)) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_2 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) (lam $0))))))"
                },
                {
                    "fn_7 (fn_1 $0 _e _e) _x": "(_rflatten (cons _x (cdr (_rsplit _rempty (fn_1 $0 _e _e)))))"
                },
                {
                    "fn_7 $0 _z": "(_rflatten (cons _z (cdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 #2 (lam (_rconcat #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 1224,
            "final_cost": 47021,
            "compression_ratio": 1.024733629654835,
            "cumulative_compression_ratio": 2.0855362497607453,
            "num_uses": 53,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 _v #0 $0": "(fn_2 $0 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_8 _i (_rconcat _n _rempty) $0": "(fn_2 $0 (lam (_rconcat (_rconcat _n _rempty) _i)))"
                },
                {
                    "fn_8 _rempty (_rconcat _q #0) $0": "(fn_2 $0 (lam (_rconcat (_rconcat _q $0) _rempty)))"
                },
                {
                    "fn_8 #0 (_rconcat _rempty _q) $0": "(fn_2 $0 (lam (_rconcat (_rconcat _rempty _q) $0)))"
                },
                {
                    "fn_8 _n _f $0": "(fn_2 $0 (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _i _g $0": "(fn_2 $0 (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _r _h $0": "(fn_2 $0 (lam (_rconcat _h _r)))"
                },
                {
                    "fn_8 _s _h $0": "(fn_2 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_8 _x _h $0": "(fn_2 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_8 (_rconcat _p _rempty) _i $0": "(fn_2 $0 (lam (_rconcat _i (_rconcat _p _rempty))))"
                },
                {
                    "fn_8 (_rconcat _rempty _p) _i $0": "(fn_2 $0 (lam (_rconcat _i (_rconcat _rempty _p))))"
                },
                {
                    "fn_8 _p _i $0": "(fn_2 $0 (lam (_rconcat _i _p)))"
                },
                {
                    "fn_8 #0 _l $0": "(fn_2 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_8 _g _n $0": "(fn_2 $0 (lam (_rconcat _n _g)))"
                },
                {
                    "fn_8 _i _n $0": "(fn_2 $0 (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 #0 _q $0": "(fn_2 $0 (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _j _q $0": "(fn_2 $0 (lam (_rconcat _q _j)))"
                },
                {
                    "fn_8 _v _r $0": "(fn_2 $0 (lam (_rconcat _r _v)))"
                },
                {
                    "fn_8 _j _rempty $0": "(fn_2 $0 (lam (_rconcat _rempty _j)))"
                },
                {
                    "fn_8 _e _u $0": "(fn_2 $0 (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _t _w $0": "(fn_2 $0 (lam (_rconcat _w _t)))"
                },
                {
                    "fn_8 _v #0 (car (map (lam $1) (_rsplit _rempty $0)))": "(fn_2 (car (map (lam $1) (_rsplit _rempty $0))) (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_8 _i _g (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _p _i (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _i _p)))"
                },
                {
                    "fn_8 _g _n (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _n _g)))"
                },
                {
                    "fn_8 #0 _q (fn_2 $0 (lam $0))": "(fn_2 (fn_2 $0 (lam $0)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _r #0 (fn_2 $0 (lam _h))": "(fn_2 (fn_2 $0 (lam _h)) (lam (_rconcat $0 _r)))"
                },
                {
                    "fn_8 _s #0 (fn_2 $0 (lam _h))": "(fn_2 (fn_2 $0 (lam _h)) (lam (_rconcat $0 _s)))"
                },
                {
                    "fn_8 _s _h (fn_2 $0 (lam _h))": "(fn_2 (fn_2 $0 (lam _h)) (lam (_rconcat _h _s)))"
                },
                {
                    "fn_8 _i _n (fn_2 $0 (lam _i))": "(fn_2 (fn_2 $0 (lam _i)) (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 #0 _q (fn_2 $0 (lam _j))": "(fn_2 (fn_2 $0 (lam _j)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 #0 _f (fn_2 $0 (lam _n))": "(fn_2 (fn_2 $0 (lam _n)) (lam (_rconcat _f $0)))"
                },
                {
                    "fn_8 #0 _h (fn_2 $0 (lam _r))": "(fn_2 (fn_2 $0 (lam _r)) (lam (_rconcat _h $0)))"
                },
                {
                    "fn_8 _r _h (fn_2 $0 (lam _r))": "(fn_2 (fn_2 $0 (lam _r)) (lam (_rconcat _h _r)))"
                },
                {
                    "fn_8 _e #0 (fn_2 $0 (lam _u))": "(fn_2 (fn_2 $0 (lam _u)) (lam (_rconcat $0 _e)))"
                },
                {
                    "fn_8 _s _h (fn_2 $0 (lam _w))": "(fn_2 (fn_2 $0 (lam _w)) (lam (_rconcat _h _s)))"
                },
                {
                    "fn_8 #0 _h (fn_2 $0 (lam _x))": "(fn_2 (fn_2 $0 (lam _x)) (lam (_rconcat _h $0)))"
                },
                {
                    "fn_8 _x _h (fn_2 $0 (lam _x))": "(fn_2 (fn_2 $0 (lam _x)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_8 #0 _h (fn_2 (fn_2 $0 (lam _x)) (lam _x))": "(fn_2 (fn_2 (fn_2 $0 (lam _x)) (lam _x)) (lam (_rconcat _h $0)))"
                },
                {
                    "fn_8 _n _f (fn_3 $0 _b)": "(fn_2 (fn_3 $0 _b) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _n _f (fn_3 $0 _f)": "(fn_2 (fn_3 $0 _f) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _e _u (fn_3 $0 _f)": "(fn_2 (fn_3 $0 _f) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _i _g (fn_3 $0 _i)": "(fn_2 (fn_3 $0 _i) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _e _u (fn_3 $0 _i)": "(fn_2 (fn_3 $0 _i) (lam (_rconcat _u _e)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1212,
            "final_cost": 45825,
            "compression_ratio": 1.0260992907801418,
            "cumulative_compression_ratio": 2.1399672667757774,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_9 $0 _f": "(_rflatten (cons _f (_rsplit _a $0)))"
                },
                {
                    "fn_9 (fn_7 $0 _a) _g": "(_rflatten (cons _g (_rsplit _a (fn_7 $0 _a))))"
                },
                {
                    "fn_9 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_9 $0 _v": "(_rflatten (cons _v (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}