{
    "cmd": "python run_iterative_experiment.py --experiment_name test_runs_96_CPUs --experiment_type dreamcoder --domain math --encoder math --iterations 15 --global_batch_sizes 96 --enumeration_timeout 1800 --recognition_train_steps 10000 --random_seeds 111 --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 3030,
    "final_cost": 1616,
    "compression_ratio": 1.875,
    "num_abstractions": 4,
    "original": [
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_3))",
        "(lam (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_swap (mathDomain_simplify $0 mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_1))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_simplify $0 mathDomain_0) mathDomain_0))",
        "(lam $0)",
        "(lam (mathDomain_dist $0 mathDomain_1))",
        "(lam (mathDomain_simplify $0 mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_1))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_dist $0 mathDomain_1) mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_div $0 mathDomain_8) mathDomain_2) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_mult $0 mathDomain_8) mathDomain_2) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_rrotate $0 mathDomain_0) mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_simplify $0 mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_swap $0 mathDomain_0) mathDomain_1) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_swap $0 mathDomain_0) mathDomain_1) mathDomain_1))",
        "(lam (mathDomain_simplify (mathDomain_swap (mathDomain_dist $0 mathDomain_2) mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_swap (mathDomain_dist $0 mathDomain_2) mathDomain_0) mathDomain_1))",
        "(lam (mathDomain_swap (mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_swap $0 mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_1))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lam (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_0))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (mathDomain_simplify $0 mathDomain_3))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_2))"
    ],
    "rewritten": [
        "(lam (fn_2 (mathDomain_swap $0 mathDomain_0)))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_3))",
        "(lam (fn_1 $0))",
        "(lam (mathDomain_swap (mathDomain_simplify $0 mathDomain_1) mathDomain_0))",
        "(lam (fn_2 $0))",
        "(lam (mathDomain_simplify $0 mathDomain_1))",
        "(lam (fn_0 $0))",
        "(lam (fn_2 (fn_3 $0)))",
        "(lam (fn_2 (fn_2 $0)))",
        "(lam $0)",
        "(lam (mathDomain_dist $0 mathDomain_1))",
        "(lam (fn_2 $0))",
        "(lam (mathDomain_simplify $0 mathDomain_1))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (fn_0 $0))",
        "(lam (fn_0 (mathDomain_dist $0 mathDomain_1)))",
        "(lam (fn_2 (fn_3 (mathDomain_div $0 mathDomain_8))))",
        "(lam (fn_2 (fn_3 (mathDomain_mult $0 mathDomain_8))))",
        "(lam (fn_0 (mathDomain_rrotate $0 mathDomain_0)))",
        "(lam (fn_2 $0))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lam (mathDomain_simplify (fn_3 $0) mathDomain_2))",
        "(lam (fn_2 (fn_2 $0)))",
        "(lam (fn_0 (mathDomain_swap $0 mathDomain_0)))",
        "(lam (mathDomain_simplify (mathDomain_dist (mathDomain_swap $0 mathDomain_0) mathDomain_1) mathDomain_1))",
        "(lam (fn_2 (mathDomain_swap (fn_3 $0) mathDomain_0)))",
        "(lam (mathDomain_simplify (mathDomain_swap (fn_3 $0) mathDomain_0) mathDomain_1))",
        "(lam (fn_1 (fn_3 $0)))",
        "(lam (mathDomain_swap $0 mathDomain_0))",
        "(lam (fn_2 (mathDomain_swap $0 mathDomain_0)))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_1))",
        "(lam (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lam (fn_1 $0))",
        "(lam (fn_2 $0))",
        "(lam (mathDomain_simplify $0 mathDomain_2))",
        "(lam (mathDomain_simplify $0 mathDomain_3))",
        "(lam (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lam (mathDomain_simplify (fn_3 $0) mathDomain_2))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (mathDomain_swap $0 mathDomain_0)))",
        "(lambda (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lambda (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_3))",
        "(lambda (#(lambda (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0)) $0))",
        "(lambda (mathDomain_swap (mathDomain_simplify $0 mathDomain_1) mathDomain_0))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0))",
        "(lambda (mathDomain_simplify $0 mathDomain_1))",
        "(lambda (#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)) $0))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (#(lambda (mathDomain_dist $0 mathDomain_2)) $0)))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0)))",
        "(lambda $0)",
        "(lambda (mathDomain_dist $0 mathDomain_1))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0))",
        "(lambda (mathDomain_simplify $0 mathDomain_1))",
        "(lambda (mathDomain_simplify $0 mathDomain_2))",
        "(lambda (#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)) $0))",
        "(lambda (#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)) (mathDomain_dist $0 mathDomain_1)))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (#(lambda (mathDomain_dist $0 mathDomain_2)) (mathDomain_div $0 mathDomain_8))))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (#(lambda (mathDomain_dist $0 mathDomain_2)) (mathDomain_mult $0 mathDomain_8))))",
        "(lambda (#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)) (mathDomain_rrotate $0 mathDomain_0)))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0))",
        "(lambda (mathDomain_simplify $0 mathDomain_2))",
        "(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lambda (mathDomain_simplify (#(lambda (mathDomain_dist $0 mathDomain_2)) $0) mathDomain_2))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0)))",
        "(lambda (#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)) (mathDomain_swap $0 mathDomain_0)))",
        "(lambda (mathDomain_simplify (mathDomain_dist (mathDomain_swap $0 mathDomain_0) mathDomain_1) mathDomain_1))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (mathDomain_swap (#(lambda (mathDomain_dist $0 mathDomain_2)) $0) mathDomain_0)))",
        "(lambda (mathDomain_simplify (mathDomain_swap (#(lambda (mathDomain_dist $0 mathDomain_2)) $0) mathDomain_0) mathDomain_1))",
        "(lambda (#(lambda (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0)) (#(lambda (mathDomain_dist $0 mathDomain_2)) $0)))",
        "(lambda (mathDomain_swap $0 mathDomain_0))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) (mathDomain_swap $0 mathDomain_0)))",
        "(lambda (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_1))",
        "(lambda (mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_2))",
        "(lambda (#(lambda (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0)) $0))",
        "(lambda (#(lambda (mathDomain_simplify $0 mathDomain_0)) $0))",
        "(lambda (mathDomain_simplify $0 mathDomain_2))",
        "(lambda (mathDomain_simplify $0 mathDomain_3))",
        "(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_2))",
        "(lambda (mathDomain_simplify (#(lambda (mathDomain_dist $0 mathDomain_2)) $0) mathDomain_2))"
    ],
    "abstractions": [
        {
            "body": "(mathDomain_simplify (mathDomain_dist #0 mathDomain_1) mathDomain_0)",
            "dreamcoder": "#(lambda (mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0))",
            "arity": 1,
            "name": "fn_0",
            "utility": 707,
            "final_cost": 2323,
            "compression_ratio": 1.3043478260869565,
            "cumulative_compression_ratio": 1.3043478260869565,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0": "(mathDomain_simplify (mathDomain_dist $0 mathDomain_1) mathDomain_0)"
                },
                {
                    "fn_0 (mathDomain_dist $0 mathDomain_1)": "(mathDomain_simplify (mathDomain_dist (mathDomain_dist $0 mathDomain_1) mathDomain_1) mathDomain_0)"
                },
                {
                    "fn_0 (mathDomain_rrotate $0 mathDomain_0)": "(mathDomain_simplify (mathDomain_dist (mathDomain_rrotate $0 mathDomain_0) mathDomain_1) mathDomain_0)"
                },
                {
                    "fn_0 (mathDomain_swap $0 mathDomain_0)": "(mathDomain_simplify (mathDomain_dist (mathDomain_swap $0 mathDomain_0) mathDomain_1) mathDomain_0)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(mathDomain_swap (mathDomain_simplify #0 mathDomain_0) mathDomain_0)",
            "dreamcoder": "#(lambda (mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0))",
            "arity": 1,
            "name": "fn_1",
            "utility": 404,
            "final_cost": 1919,
            "compression_ratio": 1.2105263157894737,
            "cumulative_compression_ratio": 1.5789473684210527,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0": "(mathDomain_swap (mathDomain_simplify $0 mathDomain_0) mathDomain_0)"
                },
                {
                    "fn_1 (mathDomain_dist $0 mathDomain_2)": "(mathDomain_swap (mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_0) mathDomain_0)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(mathDomain_simplify #0 mathDomain_0)",
            "dreamcoder": "#(lambda (mathDomain_simplify $0 mathDomain_0))",
            "arity": 1,
            "name": "fn_2",
            "utility": 202,
            "final_cost": 1717,
            "compression_ratio": 1.1176470588235294,
            "cumulative_compression_ratio": 1.7647058823529411,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0": "(mathDomain_simplify $0 mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_dist $0 mathDomain_2)": "(mathDomain_simplify (mathDomain_dist $0 mathDomain_2) mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_dist (mathDomain_div $0 mathDomain_8) mathDomain_2)": "(mathDomain_simplify (mathDomain_dist (mathDomain_div $0 mathDomain_8) mathDomain_2) mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_dist (mathDomain_mult $0 mathDomain_8) mathDomain_2)": "(mathDomain_simplify (mathDomain_dist (mathDomain_mult $0 mathDomain_8) mathDomain_2) mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_simplify $0 mathDomain_0)": "(mathDomain_simplify (mathDomain_simplify $0 mathDomain_0) mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_swap $0 mathDomain_0)": "(mathDomain_simplify (mathDomain_swap $0 mathDomain_0) mathDomain_0)"
                },
                {
                    "fn_2 (mathDomain_swap (mathDomain_dist $0 mathDomain_2) mathDomain_0)": "(mathDomain_simplify (mathDomain_swap (mathDomain_dist $0 mathDomain_2) mathDomain_0) mathDomain_0)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(mathDomain_dist #0 mathDomain_2)",
            "dreamcoder": "#(lambda (mathDomain_dist $0 mathDomain_2))",
            "arity": 1,
            "name": "fn_3",
            "utility": 101,
            "final_cost": 1616,
            "compression_ratio": 1.0625,
            "cumulative_compression_ratio": 1.875,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0": "(mathDomain_dist $0 mathDomain_2)"
                },
                {
                    "fn_3 (mathDomain_div $0 mathDomain_8)": "(mathDomain_dist (mathDomain_div $0 mathDomain_8) mathDomain_2)"
                },
                {
                    "fn_3 (mathDomain_mult $0 mathDomain_8)": "(mathDomain_dist (mathDomain_mult $0 mathDomain_8) mathDomain_2)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}