{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_enum_test_10000 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 83246,
    "final_cost": 34346,
    "compression_ratio": 2.4237465789320445,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _l (cons _a (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _d (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _e (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _l (cons _f (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _b (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _e (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _e (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _f _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _d _c) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _d $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _f (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _f (cons _d (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _f (cons _e (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _f (cons _f (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _b (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _c $0))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _v $0))))",
        "(lam (_rflatten (cons _c (_rsplit _b $0))))",
        "(lam (_rflatten (cons _c (_rsplit _v $0))))",
        "(lam (_rflatten (cons _d (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (cons _b (_rsplit _v $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _i $0))))",
        "(lam (_rflatten (cons _b (_rsplit _u $0))))",
        "(lam (_rflatten (cons _c (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _c _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _j (_rsplit _a (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _b (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _e (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _f (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _s (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _s (cons _d (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _s (cons _e (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _s (cons _f (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))"
    ],
    "rewritten": [
        "(lam (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lam (fn_5 $0 _w))",
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _r))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _l (cons _a (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_0 (fn_3 $0 _rempty) _l))",
        "(lam (_rflatten (cons _l (cons _d (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _l (cons _e (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _l (cons _f (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _n))",
        "(lam (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _rempty))))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (fn_6 $0 (lam (_rconcat _c _rempty))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _rempty))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _rempty))))",
        "(lam (fn_2 (fn_4 $0) _rempty))",
        "(lam (fn_2 (fn_4 $0) _rempty))",
        "(lam (fn_9 $0 _rempty))",
        "(lam (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_2 (_rrevcdr (fn_4 $0)) _u))",
        "(lam (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (fn_8 (_rsplit _a $0)))",
        "(lam (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lam (fn_5 $0 _b))",
        "(lam (fn_5 $0 _c))",
        "(lam (fn_8 (_rsplit _c $0)))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (fn_6 $0 (lam (_rconcat $0 _v))))",
        "(lam (fn_6 (_rflatten (fn_4 $0)) (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (fn_4 (fn_6 $0 (lam (_rconcat $0 _v))))))",
        "(lam (fn_6 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _v))))",
        "(lam (fn_6 (_rflatten (_rsplit _e $0)) (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_4 $0)))))",
        "(lam (fn_8 (_rrevcdr (fn_4 $0))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (fn_4 $0)))))",
        "(lam (fn_2 (fn_4 $0) _m))",
        "(lam (fn_2 (fn_4 $0) _m))",
        "(lam (fn_9 $0 _m))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _e))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_7 $0 _rempty))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (fn_6 $0 (lam _j)))",
        "(lam (_rflatten (fn_4 (fn_6 $0 (lam _j)))))",
        "(lam (_rflatten (_rsplit _rempty (fn_6 $0 (lam _j)))))",
        "(lam (fn_6 $0 (lam (_rconcat _rempty _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _rempty _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _w))",
        "(lam (_rflatten (cons _w (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _y))",
        "(lam (_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _c))",
        "(lam (_rflatten (cons _c (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _c (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _q))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _g))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam _p)))",
        "(lam (fn_6 (_rflatten (_rsplit _rempty $0)) (lam _p)))",
        "(lam (fn_6 (fn_3 $0 _f) (lam _p)))",
        "(lam (_rflatten (map (lam _p) (fn_4 $0))))",
        "(lam (fn_6 (fn_6 $0 (lam _k)) (lam _p)))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _i))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (fn_2 (_rrevcdr (fn_4 $0)) _t))",
        "(lam (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (fn_7 $0 _rempty))",
        "(lam (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (_rflatten (_rappend _a (fn_4 $0))))",
        "(lam (fn_8 (fn_4 $0)))",
        "(lam (_rflatten (_rappend _c (fn_4 $0))))",
        "(lam (_rflatten (_rappend _e (fn_4 $0))))",
        "(lam (_rflatten (_rappend _f (fn_4 $0))))",
        "(lam (fn_3 $0 _b))",
        "(lam (_rflatten (cons _e (cdr (fn_4 $0)))))",
        "(lam (fn_3 (_rflatten (fn_4 $0)) _b))",
        "(lam (_rflatten (cons _b (cdr (fn_4 $0)))))",
        "(lam (_rflatten (cons _a (cdr (fn_4 $0)))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _r))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _b))",
        "(lam (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 (fn_4 $0) _o))",
        "(lam (fn_2 (fn_4 $0) _o))",
        "(lam (fn_9 $0 _o))",
        "(lam (_rflatten (_rappend _o (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _a (fn_4 $0))))",
        "(lam (fn_8 (fn_4 $0)))",
        "(lam (_rflatten (_rappend _c (fn_4 $0))))",
        "(lam (_rflatten (_rappend _e (fn_4 $0))))",
        "(lam (_rflatten (_rappend _f (fn_4 $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 (car (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_3 $0 _f))",
        "(lam (fn_3 (_rflatten (fn_4 $0)) _f))",
        "(lam (fn_3 (fn_6 $0 (lam $0)) _f))",
        "(lam (fn_3 (_rflatten (_rsplit _rempty $0)) _f))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 _f))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_0 (fn_3 $0 _rempty) _rempty))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_3 $0 (_rconcat _e _c)))",
        "(lam (fn_3 $0 (_rconcat _b _c)))",
        "(lam (fn_3 $0 (_rconcat _a _c)))",
        "(lam (fn_3 $0 (_rconcat _f _c)))",
        "(lam (fn_3 $0 (_rconcat _d _c)))",
        "(lam (fn_6 $0 (lam (_rconcat _a _t))))",
        "(lam (fn_1 $0 _t))",
        "(lam (fn_6 $0 (lam (_rconcat _c _t))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _t))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _t))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _b))))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_6 $0 (lam (_rconcat _c _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (fn_2 (fn_4 $0) _y))",
        "(lam (fn_2 (fn_4 $0) _y))",
        "(lam (fn_9 $0 _y))",
        "(lam (_rflatten (_rappend _y (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (_rflatten (cons _e (fn_4 $0))))",
        "(lam (_rflatten (cons _b (fn_4 $0))))",
        "(lam (_rflatten (cons _a (fn_4 $0))))",
        "(lam (_rflatten (cons _f (fn_4 $0))))",
        "(lam (_rflatten (cons _d (fn_4 $0))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (fn_0 $0 _k))",
        "(lam (fn_0 (fn_3 $0 _b) _k))",
        "(lam (_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _x))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _m))",
        "(lam (_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _f $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _d $0))))",
        "(lam (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _j))",
        "(lam (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (fn_2 (fn_4 $0) _m))",
        "(lam (fn_2 (fn_4 $0) _m))",
        "(lam (fn_9 $0 _m))",
        "(lam (_rflatten (_rappend _m (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _r))",
        "(lam (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (fn_3 $0 _m)))))))",
        "(lam (fn_0 (fn_3 $0 _b) _g))",
        "(lam (fn_0 (fn_3 $0 _m) _g))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (fn_3 $0 _i))",
        "(lam (fn_3 (_rflatten (fn_4 $0)) _i))",
        "(lam (_rflatten (fn_4 (fn_3 $0 _i))))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 _i))))",
        "(lam (fn_3 $0 (_rconcat _rempty _i)))",
        "(lam (fn_2 (fn_4 $0) _g))",
        "(lam (fn_2 (fn_4 $0) _g))",
        "(lam (fn_9 $0 _g))",
        "(lam (_rflatten (_rappend _g (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (fn_4 $0)))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _i))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _g))",
        "(lam (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _u))))",
        "(lam (fn_1 $0 _u))",
        "(lam (fn_6 $0 (lam (_rconcat _c _u))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _u))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _u))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _a))",
        "(lam (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 (fn_4 $0) _j))",
        "(lam (fn_2 (fn_4 $0) _j))",
        "(lam (fn_9 $0 _j))",
        "(lam (_rflatten (_rappend _j (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _b))))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_6 $0 (lam (_rconcat _c _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _b))))",
        "(lam (fn_1 $0 _b))",
        "(lam (fn_6 $0 (lam (_rconcat _c _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _b))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _b))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 (car (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _x))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _q))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 (_rrevcdr (fn_4 $0)) _rempty))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (fn_4 $0)))))",
        "(lam (fn_8 (_rrevcdr (fn_4 $0))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _e))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_0 (fn_3 $0 _rempty) _e))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_6 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _f $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _d $0))))",
        "(lam (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_0 (fn_3 $0 _rempty) _f))",
        "(lam (_rflatten (cons _f (cons _d (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _f (cons _e (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _f (cons _f (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_0 (fn_3 $0 _rempty) _rempty))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (fn_3 $0 _rempty)))))))",
        "(lam (fn_2 (_rrevcdr (fn_4 $0)) _q))",
        "(lam (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _d (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (fn_2 (_rrevcdr (fn_4 $0)) _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0)))))))",
        "(lam (fn_6 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_6 (_rflatten (fn_4 $0)) (lam (_rconcat $0 _b))))",
        "(lam (_rflatten (fn_4 (fn_6 $0 (lam (_rconcat $0 _b))))))",
        "(lam (fn_6 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _b))))",
        "(lam (_rflatten (_rsplit _rempty (fn_6 $0 (lam (_rconcat $0 _b))))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _e))))",
        "(lam (fn_1 $0 _e))",
        "(lam (fn_6 $0 (lam (_rconcat _c _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _e))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _e))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (fn_5 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (fn_2 (fn_4 $0) _s))",
        "(lam (fn_2 (fn_4 $0) _s))",
        "(lam (fn_9 $0 _s))",
        "(lam (_rflatten (_rappend _s (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_8 (_rrevcdr (_rrevcdr (fn_4 $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_8 (_rsplit _a $0)))",
        "(lam (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lam (fn_5 $0 _b))",
        "(lam (fn_5 $0 _c))",
        "(lam (fn_8 (_rsplit _c $0)))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _rempty))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (fn_8 (_rsplit _rempty $0)))",
        "(lam (_rflatten (_rappend _c (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rempty $0))))",
        "(lam (fn_2 (fn_4 $0) _p))",
        "(lam (fn_2 (fn_4 $0) _p))",
        "(lam (fn_9 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend _d (_rrevcdr (fn_4 $0))))))",
        "(lam (fn_7 $0 _b))",
        "(lam (fn_7 $0 _v))",
        "(lam (_rflatten (cons _c (_rsplit _b $0))))",
        "(lam (_rflatten (cons _c (_rsplit _v $0))))",
        "(lam (_rflatten (cons _d (_rsplit _b $0))))",
        "(lam (fn_7 $0 _a))",
        "(lam (fn_7 $0 _b))",
        "(lam (fn_7 $0 _e))",
        "(lam (fn_7 $0 _r))",
        "(lam (fn_7 $0 _v))",
        "(lam (fn_7 $0 _a))",
        "(lam (fn_7 $0 _e))",
        "(lam (fn_7 $0 _i))",
        "(lam (fn_7 $0 _u))",
        "(lam (_rflatten (cons _c (_rsplit _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a _rempty))))",
        "(lam (fn_1 $0 _rempty))",
        "(lam (fn_6 $0 (lam (_rconcat _c _rempty))))",
        "(lam (fn_6 $0 (lam (_rconcat _e _rempty))))",
        "(lam (fn_6 $0 (lam (_rconcat _f _rempty))))",
        "(lam (_rflatten (_rappend _j (_rsplit _a (_rflatten (_rappend _o (_rrevcdr (fn_4 $0))))))))",
        "(lam (fn_5 (_rflatten (_rappend _o (_rrevcdr (fn_4 $0)))) _j))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (fn_4 $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _e (_rflatten (_rappend _o (_rrevcdr (fn_4 $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _f (_rflatten (_rappend _o (_rrevcdr (fn_4 $0))))))))",
        "(lam (_rflatten (cons _s (cons _a (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (fn_0 (fn_3 $0 _b) _s))",
        "(lam (_rflatten (cons _s (cons _d (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (_rflatten (cons _s (cons _e (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (_rflatten (cons _s (cons _f (cdr (_rsplit _rempty (fn_3 $0 _b)))))))",
        "(lam (fn_2 (fn_4 $0) _v))",
        "(lam (fn_2 (fn_4 $0) _v))",
        "(lam (fn_9 $0 _v))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (fn_4 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _d (_rrevcdr (fn_4 $0))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _w))",
        "(lambda (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _w (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _l (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _l))",
        "(lambda (_rflatten (cons _l (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _l (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _l (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _n))",
        "(lambda (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _rempty))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rsplit _a $0)))",
        "(lambda (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _c))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rsplit _c $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _e $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _rempty))",
        "(lambda (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _rempty _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _rempty _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _w))",
        "(lambda (_rflatten (cons _w (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _w (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _w (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _y))",
        "(lambda (_rflatten (cons _y (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _y (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _c (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _c))",
        "(lambda (_rflatten (cons _c (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _c (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _c (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f) (lambda _p)))",
        "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _p)))",
        "(lambda (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _i))",
        "(lambda (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _rempty))",
        "(lambda (_rflatten (cons _c (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _d (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (#(lambda (_rsplit _rdot $0)) $0)))",
        "(lambda (_rflatten (_rappend _c (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _e (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _b (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _o))",
        "(lambda (_rflatten (_rappend _o (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (#(lambda (_rsplit _rdot $0)) $0)))",
        "(lambda (_rflatten (_rappend _c (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _e (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 (car (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (_rsplit _rempty $0)) _f))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _e _c)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _b _c)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _a _c)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _f _c)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _d _c)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _t))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _y))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _y))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _y))",
        "(lambda (_rflatten (_rappend _y (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _y (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _k))",
        "(lambda (_rflatten (cons _k (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _x))",
        "(lambda (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _m))",
        "(lambda (_rflatten (cons _m (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _m (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _d $0))))",
        "(lambda (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _j))",
        "(lambda (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _j (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _r))",
        "(lambda (_rflatten (cons _r (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _r (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _m)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _m) _g))",
        "(lambda (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
        "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _g))",
        "(lambda (_rflatten (_rappend _g (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _g (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _b (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _a (cons _e (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _i))",
        "(lambda (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _i (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (_rflatten (cons _g (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _g (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _u))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _u))))",
        "(lambda (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _a))",
        "(lambda (_rflatten (cons _a (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _a (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _b))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 (car (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (car (_rsplit _rempty $0)) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _x))",
        "(lambda (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _rempty))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))",
        "(lambda (_rflatten (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _e))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _e))",
        "(lambda (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _d $0))))",
        "(lambda (_rflatten (cons _f (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _f))",
        "(lambda (_rflatten (cons _f (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _f (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _f (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _q))",
        "(lambda (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _e))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _e))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _s))",
        "(lambda (_rflatten (_rappend _s (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _s (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
        "(lambda (_rflatten (_rappend _c (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rsplit _a $0)))",
        "(lambda (_rflatten (_rappend _c (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) $0 _c))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rsplit _c $0)))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lambda (#(lambda (_rflatten (_rappend _b $0))) (_rsplit _rempty $0)))",
        "(lambda (_rflatten (_rappend _c (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _e (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _p (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _v))",
        "(lambda (_rflatten (cons _c (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _c (_rsplit _v $0))))",
        "(lambda (_rflatten (cons _d (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _u))",
        "(lambda (_rflatten (cons _c (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1))))) $0 _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _c _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _f _rempty))))",
        "(lambda (_rflatten (_rappend _j (_rsplit _a (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1))))) (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _j))",
        "(lambda (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
        "(lambda (_rflatten (_rappend _j (_rsplit _e (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
        "(lambda (_rflatten (_rappend _j (_rsplit _f (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
        "(lambda (_rflatten (cons _s (cons _a (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _s))",
        "(lambda (_rflatten (cons _s (cons _d (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (_rflatten (cons _s (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (_rflatten (cons _s (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1)))))) (#(lambda (_rsplit _rdot $0)) $0) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1))))))) $0 _v))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _d (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #1 (cons _b (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cons _b (cdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_0",
            "utility": 20604,
            "final_cost": 62642,
            "compression_ratio": 1.3289167012547491,
            "cumulative_compression_ratio": 1.3289167012547491,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a": "(_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b": "(_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c": "(_rflatten (cons _c (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e": "(_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _e": "(_rflatten (cons _e (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _f": "(_rflatten (cons _f (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _m (cdr (_rsplit _rempty $0)))) _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _i": "(_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _j": "(_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _k": "(_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _k": "(_rflatten (cons _k (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _l": "(_rflatten (cons _l (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _m": "(_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _n": "(_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _q": "(_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r": "(_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _w": "(_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _x": "(_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _y": "(_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat _b #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map (lambda (_rconcat _b $1)) (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 8096,
            "final_cost": 54546,
            "compression_ratio": 1.1484251824148426,
            "cumulative_compression_ratio": 1.5261614050526162,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 #0": "(_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b": "(_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e": "(_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty": "(_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _t": "(_rflatten (map (lam (_rconcat _b _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _u": "(_rflatten (map (lam (_rconcat _b _u)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _a (_rrevcdr #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _a (_rrevcdr $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 6060,
            "final_cost": 48486,
            "compression_ratio": 1.124984531617374,
            "cumulative_compression_ratio": 1.716907973435631,
            "num_uses": 25,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 (_rsplit _rdot $0) _g": "(_rflatten (_rappend _g (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _j": "(_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _j": "(_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _m": "(_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _p": "(_rflatten (_rappend _p (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _q": "(_rflatten (_rappend _q (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _rempty": "(_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _rempty": "(_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _s": "(_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _t": "(_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rrevcdr (_rsplit _rdot $0)) _u": "(_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _v": "(_rflatten (_rappend _v (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rsplit _rdot $0) _y": "(_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 4444,
            "final_cost": 44042,
            "compression_ratio": 1.1009036828481904,
            "cumulative_compression_ratio": 1.890150311066709,
            "num_uses": 55,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (_rconcat _a _c)": "(_rflatten (cons (_rconcat _a _c) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _b _c)": "(_rflatten (cons (_rconcat _b _c) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _d _c)": "(_rflatten (cons (_rconcat _d _c) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _e _c)": "(_rflatten (cons (_rconcat _e _c) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _f _c)": "(_rflatten (cons (_rconcat _f _c) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) _b": "(_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _f": "(_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_3 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _m": "(_rflatten (cons _m (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rdot #0)",
            "dreamcoder": "#(lambda (_rsplit _rdot $0))",
            "arity": 1,
            "name": "fn_4",
            "utility": 2424,
            "final_cost": 41618,
            "compression_ratio": 1.0582440290259023,
            "cumulative_compression_ratio": 2.000240280647797,
            "num_uses": 124,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0": "(_rsplit _rdot $0)"
                },
                {
                    "fn_4 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))": "(_rsplit _rdot (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_4 (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))": "(_rsplit _rdot (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))"
                },
                {
                    "fn_4 (_rflatten (map (lam _j) (_rsplit _rempty $0)))": "(_rsplit _rdot (_rflatten (map (lam _j) (_rsplit _rempty $0))))"
                },
                {
                    "fn_4 (fn_3 $0 _i)": "(_rsplit _rdot (fn_3 $0 _i))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _b #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _b $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1818,
            "final_cost": 39800,
            "compression_ratio": 1.045678391959799,
            "cumulative_compression_ratio": 2.091608040201005,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _b": "(_rflatten (_rappend _b (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _c": "(_rflatten (_rappend _c (_rsplit _b $0)))"
                },
                {
                    "fn_5 (_rflatten (_rappend _o (_rrevcdr (fn_4 $0)))) _j": "(_rflatten (_rappend _j (_rsplit _b (_rflatten (_rappend _o (_rrevcdr (fn_4 $0)))))))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _b $0)))"
                },
                {
                    "fn_5 $0 _w": "(_rflatten (_rappend _w (_rsplit _b $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1717,
            "final_cost": 38083,
            "compression_ratio": 1.0450857337919808,
            "cumulative_compression_ratio": 2.185909723498674,
            "num_uses": 95,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rflatten (fn_4 $0)) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (fn_4 $0)))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _e $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rflatten (fn_4 $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (fn_4 $0)))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a $0))": "(_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _b))": "(_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _e))": "(_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _rempty))": "(_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _t))": "(_rflatten (map (lam (_rconcat _a _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a _u))": "(_rflatten (map (lam (_rconcat _a _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b $0))": "(_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _c _b))": "(_rflatten (map (lam (_rconcat _c _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _c _e))": "(_rflatten (map (lam (_rconcat _c _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _c _rempty))": "(_rflatten (map (lam (_rconcat _c _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _c _t))": "(_rflatten (map (lam (_rconcat _c _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _c _u))": "(_rflatten (map (lam (_rconcat _c _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _d $0))": "(_rflatten (map (lam (_rconcat _d $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e $0))": "(_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e _b))": "(_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e _e))": "(_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e _rempty))": "(_rflatten (map (lam (_rconcat _e _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e _t))": "(_rflatten (map (lam (_rconcat _e _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e _u))": "(_rflatten (map (lam (_rconcat _e _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f $0))": "(_rflatten (map (lam (_rconcat _f $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f _b))": "(_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f _e))": "(_rflatten (map (lam (_rconcat _f _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f _rempty))": "(_rflatten (map (lam (_rconcat _f _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f _t))": "(_rflatten (map (lam (_rconcat _f _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _f _u))": "(_rflatten (map (lam (_rconcat _f _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _rempty _b))": "(_rflatten (map (lam (_rconcat _rempty _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _rempty _e))": "(_rflatten (map (lam (_rconcat _rempty _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rempty $0)) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (fn_3 $0 _f) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (fn_3 $0 _f))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _b (_rsplit #1 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1515,
            "final_cost": 36568,
            "compression_ratio": 1.0414296652811201,
            "cumulative_compression_ratio": 2.2764712316779696,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _a": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _b $0)))"
                },
                {
                    "fn_7 $0 _e": "(_rflatten (cons _b (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _i": "(_rflatten (cons _b (_rsplit _i $0)))"
                },
                {
                    "fn_7 $0 _r": "(_rflatten (cons _b (_rsplit _r $0)))"
                },
                {
                    "fn_7 $0 _rempty": "(_rflatten (cons _b (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _u": "(_rflatten (cons _b (_rsplit _u $0)))"
                },
                {
                    "fn_7 $0 _v": "(_rflatten (cons _b (_rsplit _v $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend _b #0))",
            "dreamcoder": "#(lambda (_rflatten (_rappend _b $0)))",
            "arity": 1,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 35356,
            "compression_ratio": 1.0342798959158275,
            "cumulative_compression_ratio": 2.3545084285552664,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 (_rrevcdr (_rrevcdr (fn_4 $0)))": "(_rflatten (_rappend _b (_rrevcdr (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_8 (_rrevcdr (fn_4 $0))": "(_rflatten (_rappend _b (_rrevcdr (fn_4 $0))))"
                },
                {
                    "fn_8 (_rsplit _a $0)": "(_rflatten (_rappend _b (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rsplit _c $0)": "(_rflatten (_rappend _b (_rsplit _c $0)))"
                },
                {
                    "fn_8 (_rsplit _rempty $0)": "(_rflatten (_rappend _b (_rsplit _rempty $0)))"
                },
                {
                    "fn_8 (fn_4 $0)": "(_rflatten (_rappend _b (fn_4 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _b (_rrevcdr (fn_4 #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _b (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1010,
            "final_cost": 34346,
            "compression_ratio": 1.0294066266814186,
            "cumulative_compression_ratio": 2.4237465789320445,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _g": "(_rflatten (_rappend _g (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _m": "(_rflatten (_rappend _m (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _o": "(_rflatten (_rappend _o (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _p": "(_rflatten (_rappend _p (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _rempty": "(_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _s": "(_rflatten (_rappend _s (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _v": "(_rflatten (_rappend _v (_rappend _b (_rrevcdr (fn_4 $0)))))"
                },
                {
                    "fn_9 $0 _y": "(_rflatten (_rappend _y (_rappend _b (_rrevcdr (fn_4 $0)))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}