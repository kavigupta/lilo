{
    "cmd": "python run_iterative_experiment.py --experiment_name symetric_rewrite_enum_test_10000 --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 60618,
    "final_cost": 26669,
    "compression_ratio": 2.2729761145899734,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _b (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _v (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _b (_rsplit _d $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (car (map (lam $1) (_rsplit _rempty $0)))))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rempty $1)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend (_rconcat _t _rempty) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (_rflatten (cons _u (cons _e (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _rempty) _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _a)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _v (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons (_rconcat _d _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n (_rconcat _i _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _n _rempty) _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _b _a)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _y (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _k (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _g _rempty) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _g) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _v (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _v (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _k (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i (_rconcat _p _rempty))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i (_rconcat _rempty _p))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _i _p))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _v $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _r $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _x (_rsplit _v (_rflatten (cons _i (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _b _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _v _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _a _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _e _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _p $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _p (_rappend (_rconcat _x _rempty) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _p _rempty) (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _v $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _b $0))))",
        "(lam (_rflatten (cons _b (_rsplit _v $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend (_rconcat _c _rempty) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))))))"
    ],
    "rewritten": [
        "(lam (fn_4 _n $0))",
        "(lam (fn_0 $0 _b _n))",
        "(lam (fn_0 $0 _c _n))",
        "(lam (fn_0 $0 _d _n))",
        "(lam (fn_0 $0 _f _n))",
        "(lam (fn_9 _rempty $0))",
        "(lam (fn_1 $0 _rempty _v))",
        "(lam (fn_1 $0 _rempty _a))",
        "(lam (fn_1 $0 _rempty _e))",
        "(lam (fn_1 $0 _rempty _r))",
        "(lam (fn_2 $0 _b _rempty))",
        "(lam (fn_2 $0 _v _rempty))",
        "(lam (fn_2 $0 _a _rempty))",
        "(lam (fn_2 $0 _e _rempty))",
        "(lam (fn_2 $0 _r _rempty))",
        "(lam (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_3 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _b (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _v (_rsplit _a $0))))",
        "(lam (fn_8 $0 _b))",
        "(lam (fn_8 $0 _v))",
        "(lam (_rflatten (_rappend _b (_rsplit _d $0))))",
        "(lam (fn_9 _j $0))",
        "(lam (fn_1 $0 _b _q))",
        "(lam (fn_1 $0 _j _v))",
        "(lam (fn_1 $0 _v _q))",
        "(lam (fn_1 $0 _j _a))",
        "(lam (fn_6 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (fn_6 (car (map (lam $1) (_rsplit _rempty $0))) (lam (_rconcat $0 _v))))",
        "(lam (car (map (lam (fn_6 $1 (lam (_rconcat $0 _v)))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rempty $1)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (fn_2 $0 _t _m))",
        "(lam (fn_2 $0 (_rconcat _t _rempty) _m))",
        "(lam (fn_2 (fn_6 $0 (lam $0)) _t _m))",
        "(lam (fn_2 (fn_2 $0 _t _m) _rempty _m))",
        "(lam (fn_2 (fn_2 $0 _rempty _m) _t _m))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _e _e))",
        "(lam (fn_0 (fn_6 $0 (lam $0)) _e _e))",
        "(lam (fn_0 (fn_0 $0 _e _u) _e _rempty))",
        "(lam (fn_7 $0 _rempty))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (fn_6 $0 (lam _j)))",
        "(lam (fn_1 $0 _j _rempty))",
        "(lam (fn_1 $0 _rempty _j))",
        "(lam (fn_1 $0 _j (_rconcat _rempty _rempty)))",
        "(lam (fn_1 (fn_5 $0 _b) _j _rempty))",
        "(lam (fn_9 _s $0))",
        "(lam (fn_1 $0 _b _h))",
        "(lam (fn_1 $0 _s _v))",
        "(lam (fn_1 $0 _s _a))",
        "(lam (fn_1 $0 _v _h))",
        "(lam (fn_4 _w $0))",
        "(lam (fn_0 $0 _b _w))",
        "(lam (fn_0 $0 _c _w))",
        "(lam (fn_0 $0 _d _w))",
        "(lam (fn_0 $0 _f _w))",
        "(lam (fn_0 $0 _b _y))",
        "(lam (fn_0 $0 _v _y))",
        "(lam (fn_4 _y $0))",
        "(lam (fn_0 $0 _e _y))",
        "(lam (fn_0 $0 _r _y))",
        "(lam (fn_4 _q $0))",
        "(lam (fn_0 $0 _b _q))",
        "(lam (fn_0 $0 _c _q))",
        "(lam (fn_0 $0 _d _q))",
        "(lam (fn_0 $0 _f _q))",
        "(lam (fn_4 _g $0))",
        "(lam (fn_4 _g (_rflatten (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (fn_4 _g $0))))",
        "(lam (fn_4 _g (_rflatten (_rsplit _b $0))))",
        "(lam (fn_4 _g (_rflatten (_rsplit _r $0))))",
        "(lam (fn_6 $0 (lam _p)))",
        "(lam (fn_6 (_rflatten (_rsplit _rempty $0)) (lam _p)))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (fn_6 (fn_6 $0 (lam _k)) (lam _p)))",
        "(lam (fn_4 _i $0))",
        "(lam (fn_0 $0 _b _i))",
        "(lam (fn_0 $0 _c _i))",
        "(lam (fn_0 $0 _d _i))",
        "(lam (fn_0 $0 _f _i))",
        "(lam (fn_9 _b $0))",
        "(lam (fn_9 _v $0))",
        "(lam (fn_9 _a $0))",
        "(lam (fn_1 $0 _b _a))",
        "(lam (fn_1 $0 _b _e))",
        "(lam (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_3 $0 _t))",
        "(lam (_rflatten (_rappend _t (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_7 $0 _rempty))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lam (fn_9 _n $0))",
        "(lam (fn_1 $0 _b _f))",
        "(lam (fn_1 $0 _n _v))",
        "(lam (fn_1 $0 _n _a))",
        "(lam (fn_1 $0 _n _e))",
        "(lam (fn_5 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _v (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _b _r))",
        "(lam (fn_0 $0 _v _r))",
        "(lam (fn_4 _r $0))",
        "(lam (fn_0 $0 _e _r))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_0 $0 _b _b))",
        "(lam (fn_0 $0 _v _b))",
        "(lam (fn_4 _b $0))",
        "(lam (fn_0 $0 _e _b))",
        "(lam (fn_0 $0 _r _b))",
        "(lam (fn_2 $0 _b _o))",
        "(lam (fn_2 $0 _v _o))",
        "(lam (fn_2 $0 _a _o))",
        "(lam (fn_2 $0 _e _o))",
        "(lam (fn_2 $0 _r _o))",
        "(lam (fn_0 $0 _d (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _d (car (_rsplit _rdot $0))))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 (_rconcat _d _rempty) (car (_rsplit _rempty $0))))",
        "(lam (fn_0 (_rflatten (_rsplit _b $0)) _d (car (_rsplit _rempty $0))))",
        "(lam (fn_5 $0 _f))",
        "(lam (fn_0 $0 _rempty _f))",
        "(lam (_rflatten (_rsplit _rempty (fn_5 $0 _f))))",
        "(lam (_rflatten (_rsplit _b (fn_5 $0 _f))))",
        "(lam (_rflatten (_rsplit _v (fn_5 $0 _f))))",
        "(lam (fn_5 (fn_5 $0 _rempty) _w))",
        "(lam (fn_5 (fn_0 $0 _rempty _rempty) _w))",
        "(lam (fn_0 (fn_5 $0 _rempty) _rempty _w))",
        "(lam (fn_0 (fn_5 $0 _rempty) _w _rempty))",
        "(lam (fn_5 (fn_5 (fn_5 $0 _rempty) _i) _w))",
        "(lam (fn_1 $0 _i _n))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _i _n))))",
        "(lam (fn_1 $0 (_rconcat _i _rempty) _n))",
        "(lam (fn_1 $0 _i (_rconcat _n _rempty)))",
        "(lam (fn_1 $0 _i _n))",
        "(lam (fn_9 _b $0))",
        "(lam (fn_9 _v $0))",
        "(lam (fn_9 _a $0))",
        "(lam (fn_1 $0 _b _a))",
        "(lam (fn_1 $0 _b _e))",
        "(lam (fn_2 $0 _b _y))",
        "(lam (fn_2 $0 _v _y))",
        "(lam (fn_2 $0 _a _y))",
        "(lam (fn_2 $0 _e _y))",
        "(lam (fn_2 $0 _r _y))",
        "(lam (fn_9 _e $0))",
        "(lam (fn_1 $0 _e _v))",
        "(lam (fn_1 $0 _e _a))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (fn_1 $0 _e _r))",
        "(lam (fn_4 _k $0))",
        "(lam (fn_4 _k (fn_5 $0 _b)))",
        "(lam (fn_0 $0 _b _k))",
        "(lam (fn_0 (fn_5 $0 _b) _b _k))",
        "(lam (fn_0 $0 _c _k))",
        "(lam (fn_4 _x $0))",
        "(lam (fn_0 $0 _b _x))",
        "(lam (fn_0 $0 _c _x))",
        "(lam (fn_0 $0 _d _x))",
        "(lam (fn_0 $0 _f _x))",
        "(lam (fn_0 $0 _b _m))",
        "(lam (fn_0 $0 _v _m))",
        "(lam (fn_4 _m $0))",
        "(lam (fn_0 $0 _e _m))",
        "(lam (fn_0 $0 _r _m))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _v $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _r $0))))",
        "(lam (fn_4 _j $0))",
        "(lam (fn_0 $0 _b _j))",
        "(lam (fn_0 $0 _c _j))",
        "(lam (fn_0 $0 _d _j))",
        "(lam (fn_0 $0 _f _j))",
        "(lam (fn_9 _i $0))",
        "(lam (fn_1 $0 _i _v))",
        "(lam (fn_1 $0 _i _a))",
        "(lam (fn_1 $0 _i _e))",
        "(lam (fn_1 $0 _i _r))",
        "(lam (fn_2 $0 _b _m))",
        "(lam (fn_2 $0 _v _m))",
        "(lam (fn_2 $0 _a _m))",
        "(lam (fn_2 $0 _e _m))",
        "(lam (fn_2 $0 _r _m))",
        "(lam (fn_9 _x $0))",
        "(lam (fn_1 $0 _b _h))",
        "(lam (fn_1 $0 _x _v))",
        "(lam (fn_1 $0 _x _a))",
        "(lam (fn_1 $0 _x _e))",
        "(lam (fn_0 $0 _b _r))",
        "(lam (fn_0 $0 _v _r))",
        "(lam (fn_4 _r $0))",
        "(lam (fn_0 $0 _e _r))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_5 $0 _i))",
        "(lam (_rflatten (_rsplit _rempty (fn_5 $0 _i))))",
        "(lam (fn_5 $0 (_rconcat _rempty _i)))",
        "(lam (_rflatten (_rsplit _b (fn_5 $0 _i))))",
        "(lam (_rflatten (_rsplit _v (fn_5 $0 _i))))",
        "(lam (fn_2 $0 _o _g))",
        "(lam (fn_2 $0 _rempty (_rconcat _o _g)))",
        "(lam (fn_2 $0 (_rconcat _o _g) _rempty))",
        "(lam (fn_2 $0 _o (_rconcat _g _rempty)))",
        "(lam (fn_2 $0 _o (_rconcat _rempty _g)))",
        "(lam (_rflatten (cons _b (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _v (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _v (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _a (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (fn_8 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lam (fn_0 $0 _b _a))",
        "(lam (fn_0 $0 _v _a))",
        "(lam (fn_4 _a $0))",
        "(lam (fn_0 $0 _e _a))",
        "(lam (fn_0 $0 _r _a))",
        "(lam (fn_2 $0 _r _j))",
        "(lam (_rflatten (_rsplit _rempty (fn_2 $0 _r _j))))",
        "(lam (fn_2 $0 (_rconcat _r _j) _rempty))",
        "(lam (_rflatten (_rsplit _b (fn_2 $0 _r _j))))",
        "(lam (_rflatten (_rsplit _k (fn_2 $0 _r _j))))",
        "(lam (fn_1 $0 _p _i))",
        "(lam (fn_1 $0 (_rconcat _p _rempty) _i))",
        "(lam (fn_1 $0 (_rconcat _rempty _p) _i))",
        "(lam (fn_1 $0 (_rconcat _i _p) _rempty))",
        "(lam (fn_1 $0 _p _i))",
        "(lam (fn_1 $0 _g _n))",
        "(lam (fn_1 $0 _g _n))",
        "(lam (fn_1 (_rflatten (_rsplit _v $0)) _g _n))",
        "(lam (fn_1 (_rflatten (_rsplit _e $0)) _g _n))",
        "(lam (fn_1 (_rflatten (_rsplit _r $0)) _g _n))",
        "(lam (fn_0 $0 _b (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _v (car (_rsplit _rempty $0))))",
        "(lam (fn_4 (car (_rsplit _rempty $0)) $0))",
        "(lam (fn_0 $0 _e (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _r (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _x))",
        "(lam (fn_0 $0 _rempty (_rconcat _x _i)))",
        "(lam (_rflatten (cons _x (_rsplit _rempty (fn_5 $0 _i)))))",
        "(lam (_rflatten (cons _x (_rsplit _v (fn_5 $0 _i)))))",
        "(lam (fn_0 $0 _b _q))",
        "(lam (fn_0 $0 _v _q))",
        "(lam (fn_4 _q $0))",
        "(lam (fn_0 $0 _e _q))",
        "(lam (fn_0 $0 _r _q))",
        "(lam (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_3 $0 _rempty))",
        "(lam (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (fn_4 _e $0))",
        "(lam (fn_0 $0 _b _e))",
        "(lam (fn_0 $0 _c _e))",
        "(lam (fn_0 $0 _d _e))",
        "(lam (fn_0 $0 _f _e))",
        "(lam (fn_0 (fn_5 $0 _rempty) _s _e))",
        "(lam (fn_0 (fn_0 $0 _rempty _rempty) _s _e))",
        "(lam (fn_0 (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lam (fn_0 (fn_5 (_rflatten (_rsplit _rempty $0)) _rempty) _s _e))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty (fn_5 $0 _rempty))) _s _e))",
        "(lam (fn_6 $0 (lam (_rconcat _b $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _v $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _a $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _e $0))))",
        "(lam (fn_6 $0 (lam (_rconcat _r $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_3 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_3 $0 _j))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_9 _r $0))",
        "(lam (fn_1 $0 _r _v))",
        "(lam (fn_1 $0 _r _a))",
        "(lam (fn_1 $0 _r _e))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (fn_8 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lam (fn_2 $0 _b _s))",
        "(lam (fn_2 $0 _v _s))",
        "(lam (fn_2 $0 _a _s))",
        "(lam (fn_2 $0 _e _s))",
        "(lam (fn_2 $0 _r _s))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (fn_8 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lam (fn_4 _rempty $0))",
        "(lam (fn_0 $0 _b _rempty))",
        "(lam (fn_0 $0 _c _rempty))",
        "(lam (fn_0 $0 _d _rempty))",
        "(lam (fn_0 $0 _f _rempty))",
        "(lam (_rflatten (_rappend _u (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _o $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _p $0))))",
        "(lam (fn_2 $0 _x _p))",
        "(lam (fn_2 $0 (_rconcat _x _p) _rempty))",
        "(lam (fn_2 $0 (_rconcat _x _rempty) _p))",
        "(lam (fn_2 $0 _rempty (_rconcat _x _p)))",
        "(lam (fn_2 $0 _x (_rconcat _p _rempty)))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (fn_7 $0 _b))",
        "(lam (fn_7 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (fn_7 $0 _b))",
        "(lam (fn_7 $0 _v))",
        "(lam (fn_7 $0 _a))",
        "(lam (fn_7 $0 _e))",
        "(lam (fn_7 $0 _r))",
        "(lam (fn_2 $0 _c _v))",
        "(lam (fn_2 $0 (_rconcat _c _rempty) _v))",
        "(lam (fn_2 $0 (_rconcat _rempty _c) _v))",
        "(lam (fn_2 $0 _rempty (_rconcat _c _v)))",
        "(lam (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot (fn_2 $0 _c _m))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _n $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _n))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _v _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _e _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _rempty))",
        "(lambda (_rflatten (_rappend _u (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1)))))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _b (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _v (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _v))",
        "(lambda (_rflatten (_rappend _b (_rsplit _d $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _j $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _a))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (car (map (lambda $1) (_rsplit _rempty $0))) (lambda (_rconcat $0 _v))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (car (map (lambda (_rsplit _rempty $1)) (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _t _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _t _m) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _rempty _m) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _u) _e _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _rempty))",
        "(lambda (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j (_rconcat _rempty _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _j _rempty))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _s $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _h))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _w $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _y))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _y $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _y))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _g $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _g (_rflatten (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _g $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _g (_rflatten (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _g (_rflatten (_rsplit _r $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda _p)))",
        "(lambda (_rflatten (map (lambda _p) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _p)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _i))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _b $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _v $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _e))",
        "(lambda (_rflatten (_rappend _t (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1)))))))) $0 _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _rempty))",
        "(lambda (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _e (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _r (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _n $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _v (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _b))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _b $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _b _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _v _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _e _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _d _rempty) (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _b $0)) _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _f))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _rempty _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _w _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _i) _w))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i (_rconcat _n _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _b $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _v $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _b _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _v _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _e _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _y))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _k $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _k (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b) _b _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _k))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _m $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _v $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _j $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _j))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _i $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _b _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _v _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _e _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _x $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _rempty _i)))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _o _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _o _g)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _o _g) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _g _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _rempty _g)))",
        "(lambda (_rflatten (cons _b (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _b (cons _v (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _v (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _a (cons _b (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _b (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _a))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _a $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _j))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _j) _rempty))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _j))))",
        "(lambda (_rflatten (_rsplit _k (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _rempty) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _p) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _p) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _v $0)) _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _e $0)) _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _r $0)) _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) (car (_rsplit _rempty $0)) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _i) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _x _i)))",
        "(lambda (_rflatten (cons _x (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i)))))",
        "(lambda (_rflatten (cons _x (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _q $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _q))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1)))))))) $0 _rempty))",
        "(lambda (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _d (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _e $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (_rsplit _rempty $0))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (_rsplit _rempty $0)) _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _rempty))) _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _v $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _r $0))))",
        "(lambda (_rflatten (_rappend _q (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _q (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1)))))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1)))))))) $0 _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b))) _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _r))",
        "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _v _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _e _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _r _s))",
        "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _f $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1))) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _d _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (_rflatten (_rappend _u (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _r $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _o $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _p $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _x _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _x _p) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _x _rempty) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _x _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _x (_rconcat _p _rempty)))",
        "(lambda (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1))))) $0 _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _rempty) _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _c) _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _c _v)))",
        "(lambda (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _c _m))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 11817,
            "final_cost": 48801,
            "compression_ratio": 1.242146677322186,
            "cumulative_compression_ratio": 1.242146677322186,
            "num_uses": 114,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _rempty (_rconcat _x _i)": "(_rflatten (cons (_rconcat _x _i) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _d _rempty) (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons (_rconcat _d _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _d (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _d (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _e (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _a": "(_rflatten (cons _a (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _a": "(_rflatten (cons _a (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _a": "(_rflatten (cons _a (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _a": "(_rflatten (cons _a (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _a": "(_rflatten (cons _a (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _b": "(_rflatten (cons _b (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _b": "(_rflatten (cons _b (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _b": "(_rflatten (cons _b (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _b": "(_rflatten (cons _b (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _b": "(_rflatten (cons _b (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _e": "(_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _e": "(_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _e": "(_rflatten (cons _e (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _e": "(_rflatten (cons _e (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _f _e": "(_rflatten (cons _e (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_0 (_rflatten (cdr (_rsplit _rempty $0))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _b $0)) _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _b $0)))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _r $0)) _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _r $0)))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 $0 _a _i": "(_rflatten (cons _i (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _i": "(_rflatten (cons _i (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _i": "(_rflatten (cons _i (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _i": "(_rflatten (cons _i (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _i": "(_rflatten (cons _i (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _j": "(_rflatten (cons _j (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _j": "(_rflatten (cons _j (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _j": "(_rflatten (cons _j (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _j": "(_rflatten (cons _j (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _j": "(_rflatten (cons _j (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _k": "(_rflatten (cons _k (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _a _k": "(_rflatten (cons _k (cons _a (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _b _k": "(_rflatten (cons _k (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _b _k": "(_rflatten (cons _k (cons _b (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _c _k": "(_rflatten (cons _k (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _m": "(_rflatten (cons _m (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _m": "(_rflatten (cons _m (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _m": "(_rflatten (cons _m (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _m": "(_rflatten (cons _m (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _m": "(_rflatten (cons _m (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _n": "(_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _n": "(_rflatten (cons _n (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _n": "(_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _n": "(_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _q": "(_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _q": "(_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _q": "(_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _q": "(_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _q": "(_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _q": "(_rflatten (cons _q (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _q": "(_rflatten (cons _q (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _r": "(_rflatten (cons _r (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _r": "(_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _r": "(_rflatten (cons _r (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _r": "(_rflatten (cons _r (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _rempty": "(_rflatten (cons _rempty (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _rempty": "(_rflatten (cons _rempty (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _u (cons _e (cdr (_rsplit _rempty $0))))) _e _rempty": "(_rflatten (cons _rempty (cons _e (cdr (_rsplit _rempty (_rflatten (cons _u (cons _e (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 _e _u": "(_rflatten (cons _u (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _w": "(_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _w": "(_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _w": "(_rflatten (cons _w (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _w": "(_rflatten (cons _w (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _w": "(_rflatten (cons _w (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _x": "(_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _x": "(_rflatten (cons _x (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _x": "(_rflatten (cons _x (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _c _x": "(_rflatten (cons _x (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _d _x": "(_rflatten (cons _x (cons _d (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _f _x": "(_rflatten (cons _x (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _y": "(_rflatten (cons _y (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _y": "(_rflatten (cons _y (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _y": "(_rflatten (cons _y (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _y": "(_rflatten (cons _y (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _y": "(_rflatten (cons _y (cons _v (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 5468,
            "final_cost": 43333,
            "compression_ratio": 1.1261855860429695,
            "cumulative_compression_ratio": 1.3988876837514135,
            "num_uses": 82,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $1 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_1 (car (map (lam $1) (_rsplit _rempty $0))) _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (car (map (lam $1) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _n _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _n _rempty) _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j (_rconcat _rempty _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _rempty) _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 #0 _a": "(_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _a": "(_rflatten (map (lam (_rconcat _a _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e _a": "(_rflatten (map (lam (_rconcat _a _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _i _a": "(_rflatten (map (lam (_rconcat _a _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j _a": "(_rflatten (map (lam (_rconcat _a _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _n _a": "(_rflatten (map (lam (_rconcat _a _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _r _a": "(_rflatten (map (lam (_rconcat _a _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _a": "(_rflatten (map (lam (_rconcat _a _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _s _a": "(_rflatten (map (lam (_rconcat _a _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _x _a": "(_rflatten (map (lam (_rconcat _a _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 #0 _b": "(_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _a _b": "(_rflatten (map (lam (_rconcat _b _a)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _b": "(_rflatten (map (lam (_rconcat _b _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e _b": "(_rflatten (map (lam (_rconcat _b _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _i _b": "(_rflatten (map (lam (_rconcat _b _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j _b": "(_rflatten (map (lam (_rconcat _b _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _n _b": "(_rflatten (map (lam (_rconcat _b _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _r _b": "(_rflatten (map (lam (_rconcat _b _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _b": "(_rflatten (map (lam (_rconcat _b _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _s _b": "(_rflatten (map (lam (_rconcat _b _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _v _b": "(_rflatten (map (lam (_rconcat _b _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _x _b": "(_rflatten (map (lam (_rconcat _b _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 #0 _e": "(_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _e": "(_rflatten (map (lam (_rconcat _e _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (map (lam (_rconcat _e _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _i _e": "(_rflatten (map (lam (_rconcat _e _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _n _e": "(_rflatten (map (lam (_rconcat _e _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _r _e": "(_rflatten (map (lam (_rconcat _e _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _e": "(_rflatten (map (lam (_rconcat _e _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _x _e": "(_rflatten (map (lam (_rconcat _e _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _f": "(_rflatten (map (lam (_rconcat _f _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _h": "(_rflatten (map (lam (_rconcat _h _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _v _h": "(_rflatten (map (lam (_rconcat _h _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _p _rempty) _i": "(_rflatten (map (lam (_rconcat _i (_rconcat _p _rempty))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _p) _i": "(_rflatten (map (lam (_rconcat _i (_rconcat _rempty _p))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _j": "(_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _i _rempty) _n": "(_rflatten (map (lam (_rconcat _n (_rconcat _i _rempty))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _e $0)) _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _r $0)) _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _r $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _v $0)) _g _n": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (_rsplit _v $0)))))"
                },
                {
                    "fn_1 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _b _q": "(_rflatten (map (lam (_rconcat _q _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _v _q": "(_rflatten (map (lam (_rconcat _q _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 #0 _r": "(_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e _r": "(_rflatten (map (lam (_rconcat _r _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _i _r": "(_rflatten (map (lam (_rconcat _r _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (map (lam (_rconcat _r _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _r": "(_rflatten (map (lam (_rconcat _r _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _i _p) _rempty": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _i _p))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j _rempty": "(_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _j _rempty": "(_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 #0 _v": "(_rflatten (map (lam (_rconcat _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _e _v": "(_rflatten (map (lam (_rconcat _v _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _i _v": "(_rflatten (map (lam (_rconcat _v _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _j _v": "(_rflatten (map (lam (_rconcat _v _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _n _v": "(_rflatten (map (lam (_rconcat _v _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _r _v": "(_rflatten (map (lam (_rconcat _v _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _v": "(_rflatten (map (lam (_rconcat _v _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _s _v": "(_rflatten (map (lam (_rconcat _v _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _x _v": "(_rflatten (map (lam (_rconcat _v _x)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 5050,
            "final_cost": 38283,
            "compression_ratio": 1.1319123370686728,
            "cumulative_compression_ratio": 1.5834182274116448,
            "num_uses": 52,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _rempty (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _o (_rconcat _g _rempty)": "(_rflatten (_rappend (_rconcat _g _rempty) (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _rempty (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _x (_rconcat _p _rempty)": "(_rflatten (_rappend (_rconcat _p _rempty) (_rappend _x (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _o (_rconcat _rempty _g)": "(_rflatten (_rappend (_rconcat _rempty _g) (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _rempty (_rconcat _x _p)": "(_rflatten (_rappend (_rconcat _x _p) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _o _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _t _rempty) _m": "(_rflatten (_rappend _m (_rappend (_rconcat _t _rempty) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _a _m": "(_rflatten (_rappend _m (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _b _m": "(_rflatten (_rappend _m (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _c _m": "(_rflatten (_rappend _m (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _e _m": "(_rflatten (_rappend _m (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _m": "(_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _rempty _m": "(_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0))))) _rempty _m": "(_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_2 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 $0 _v _m": "(_rflatten (_rappend _m (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _b _o": "(_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _e _o": "(_rflatten (_rappend _o (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _o": "(_rflatten (_rappend _o (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _v _o": "(_rflatten (_rappend _o (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _rempty) _p": "(_rflatten (_rappend _p (_rappend (_rconcat _x _rempty) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _g) _rempty": "(_rflatten (_rappend _rempty (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _j) _rempty": "(_rflatten (_rappend _rempty (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _p) _rempty": "(_rflatten (_rappend _rempty (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _a _rempty": "(_rflatten (_rappend _rempty (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _b _rempty": "(_rflatten (_rappend _rempty (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _e _rempty": "(_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _rempty": "(_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _v _rempty": "(_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _a _s": "(_rflatten (_rappend _s (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _b _s": "(_rflatten (_rappend _s (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _e _s": "(_rflatten (_rappend _s (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _s": "(_rflatten (_rappend _s (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _v _s": "(_rflatten (_rappend _s (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _c _rempty) _v": "(_rflatten (_rappend _v (_rappend (_rconcat _c _rempty) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _c) _v": "(_rflatten (_rappend _v (_rappend (_rconcat _rempty _c) (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _a _y": "(_rflatten (_rappend _y (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _b _y": "(_rflatten (_rappend _y (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _e _y": "(_rflatten (_rappend _y (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _r _y": "(_rflatten (_rappend _y (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_2 $0 _v _y": "(_rflatten (_rappend _y (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $1))))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 3535,
            "final_cost": 34748,
            "compression_ratio": 1.1017324738114425,
            "cumulative_compression_ratio": 1.7445032807643606,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _j": "(_rflatten (_rappend _j (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _q": "(_rflatten (_rappend _q (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (_rappend _rempty (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _t": "(_rflatten (_rappend _t (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _u": "(_rflatten (_rappend _u (_rappend _e (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #1 _a #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a $1)))",
            "arity": 2,
            "name": "fn_4",
            "utility": 1818,
            "final_cost": 32930,
            "compression_ratio": 1.0552080170057698,
            "cumulative_compression_ratio": 1.8408138475554205,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 (car (_rsplit _rempty $0)) $0": "(fn_0 $0 _a (car (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 _a $0": "(fn_0 $0 _a _a)"
                },
                {
                    "fn_4 _b $0": "(fn_0 $0 _a _b)"
                },
                {
                    "fn_4 _e $0": "(fn_0 $0 _a _e)"
                },
                {
                    "fn_4 _g $0": "(fn_0 $0 _a _g)"
                },
                {
                    "fn_4 _i $0": "(fn_0 $0 _a _i)"
                },
                {
                    "fn_4 _j $0": "(fn_0 $0 _a _j)"
                },
                {
                    "fn_4 _k $0": "(fn_0 $0 _a _k)"
                },
                {
                    "fn_4 _m $0": "(fn_0 $0 _a _m)"
                },
                {
                    "fn_4 _n $0": "(fn_0 $0 _a _n)"
                },
                {
                    "fn_4 _q $0": "(fn_0 $0 _a _q)"
                },
                {
                    "fn_4 _r $0": "(fn_0 $0 _a _r)"
                },
                {
                    "fn_4 _rempty $0": "(fn_0 $0 _a _rempty)"
                },
                {
                    "fn_4 _w $0": "(fn_0 $0 _a _w)"
                },
                {
                    "fn_4 _x $0": "(fn_0 $0 _a _x)"
                },
                {
                    "fn_4 _y $0": "(fn_0 $0 _a _y)"
                },
                {
                    "fn_4 _g (_rflatten (_rsplit _b $0))": "(fn_0 (_rflatten (_rsplit _b $0)) _a _g)"
                },
                {
                    "fn_4 _g (_rflatten (_rsplit _r $0))": "(fn_0 (_rflatten (_rsplit _r $0)) _a _g)"
                },
                {
                    "fn_4 _g (_rflatten (_rsplit _rempty $0))": "(fn_0 (_rflatten (_rsplit _rempty $0)) _a _g)"
                },
                {
                    "fn_4 _k (_rflatten (cons _b (cdr (_rsplit _rempty $0))))": "(fn_0 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _a _k)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1515,
            "final_cost": 31415,
            "compression_ratio": 1.0482253700461563,
            "cumulative_compression_ratio": 1.9295877765398695,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rempty $0)) _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (fn_0 $0 _rempty _rempty) _w": "(_rflatten (cons _w (cdr (_rsplit _rempty (fn_0 $0 _rempty _rempty)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1312,
            "final_cost": 30103,
            "compression_ratio": 1.0435836959771452,
            "cumulative_compression_ratio": 2.0136863435537986,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $1)))"
                },
                {
                    "fn_6 (car (map (lam $1) (_rsplit _rempty $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (car (map (lam $1) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _a $0))": "(_rflatten (map (lam (_rconcat _a $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _b $0))": "(_rflatten (map (lam (_rconcat _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _e $0))": "(_rflatten (map (lam (_rconcat _e $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _r $0))": "(_rflatten (map (lam (_rconcat _r $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam (_rconcat _v $0))": "(_rflatten (map (lam (_rconcat _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rempty $0)) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _b (_rsplit #1 #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _b (_rsplit $0 $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1212,
            "final_cost": 28891,
            "compression_ratio": 1.041950780519885,
            "cumulative_compression_ratio": 2.098162057388114,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _a": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _b $0)))"
                },
                {
                    "fn_7 $0 _e": "(_rflatten (cons _b (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _r": "(_rflatten (cons _b (_rsplit _r $0)))"
                },
                {
                    "fn_7 $0 _rempty": "(_rflatten (cons _b (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _v": "(_rflatten (cons _b (_rsplit _v $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 27679,
            "compression_ratio": 1.0437877090935366,
            "cumulative_compression_ratio": 2.190035767188121,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _a": "(_rflatten (_rappend _a (_rsplit _c $0)))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (_rappend _b (_rsplit _c $0)))"
                },
                {
                    "fn_8 $0 _k": "(_rflatten (_rappend _k (_rsplit _c $0)))"
                },
                {
                    "fn_8 $0 _q": "(_rflatten (_rappend _q (_rsplit _c $0)))"
                },
                {
                    "fn_8 $0 _v": "(_rflatten (_rappend _v (_rsplit _c $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #1 #0 _b)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 $1 _b)))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1010,
            "final_cost": 26669,
            "compression_ratio": 1.037871686227455,
            "cumulative_compression_ratio": 2.2729761145899734,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _a $0": "(fn_1 $0 _a _b)"
                },
                {
                    "fn_9 _b $0": "(fn_1 $0 _b _b)"
                },
                {
                    "fn_9 _e $0": "(fn_1 $0 _e _b)"
                },
                {
                    "fn_9 _i $0": "(fn_1 $0 _i _b)"
                },
                {
                    "fn_9 _j $0": "(fn_1 $0 _j _b)"
                },
                {
                    "fn_9 _n $0": "(fn_1 $0 _n _b)"
                },
                {
                    "fn_9 _r $0": "(fn_1 $0 _r _b)"
                },
                {
                    "fn_9 _rempty $0": "(fn_1 $0 _rempty _b)"
                },
                {
                    "fn_9 _s $0": "(fn_1 $0 _s _b)"
                },
                {
                    "fn_9 _v $0": "(fn_1 $0 _v _b)"
                },
                {
                    "fn_9 _x $0": "(fn_1 $0 _x _b)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}