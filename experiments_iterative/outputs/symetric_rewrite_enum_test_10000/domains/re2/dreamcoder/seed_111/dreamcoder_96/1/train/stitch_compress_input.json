{
    "DSL": {
        "logVariable": -1.0355513992491776,
        "productions": [
            {
                "expression": "_rdot",
                "logProbability": -4.752697997738632
            },
            {
                "expression": "_rempty",
                "logProbability": -1.9399771740725331
            },
            {
                "expression": "_a",
                "logProbability": -2.8469942691613586
            },
            {
                "expression": "_b",
                "logProbability": -2.792117658935524
            },
            {
                "expression": "_c",
                "logProbability": -3.9004861225489984
            },
            {
                "expression": "_d",
                "logProbability": -3.2147190492866757
            },
            {
                "expression": "_e",
                "logProbability": -3.096113306878829
            },
            {
                "expression": "_f",
                "logProbability": -4.08575318957271
            },
            {
                "expression": "_g",
                "logProbability": -3.907866229846621
            },
            {
                "expression": "_h",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_i",
                "logProbability": -3.405969236824932
            },
            {
                "expression": "_j",
                "logProbability": -3.041699885155035
            },
            {
                "expression": "_k",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_l",
                "logProbability": -3.907866229846621
            },
            {
                "expression": "_m",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_n",
                "logProbability": -3.6951471958682953
            },
            {
                "expression": "_o",
                "logProbability": -3.1227815539609907
            },
            {
                "expression": "_p",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_q",
                "logProbability": -3.6951471958682953
            },
            {
                "expression": "_r",
                "logProbability": -3.3159727829918486
            },
            {
                "expression": "_s",
                "logProbability": -3.7071955343844705
            },
            {
                "expression": "_t",
                "logProbability": -2.8888852108705185
            },
            {
                "expression": "_u",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_v",
                "logProbability": -2.5689741076213144
            },
            {
                "expression": "_w",
                "logProbability": -2.9438440951512765
            },
            {
                "expression": "_x",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_y",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_z",
                "logProbability": -4.131009781160831
            },
            {
                "expression": "_rnot",
                "logProbability": -3.540141449721304
            },
            {
                "expression": "_ror",
                "logProbability": -5.411943626622895
            },
            {
                "expression": "_rconcat",
                "logProbability": -2.150008312294248
            },
            {
                "expression": "_rmatch",
                "logProbability": -2.451005098112319
            },
            {
                "expression": "_rsplit",
                "logProbability": -1.3983126254028306
            },
            {
                "expression": "_rflatten",
                "logProbability": -1.5583039340501799
            },
            {
                "expression": "_rtail",
                "logProbability": -5.411943626622895
            },
            {
                "expression": "_rappend",
                "logProbability": -1.707599324337874
            },
            {
                "expression": "_rrevcdr",
                "logProbability": -1.8200773077645644
            },
            {
                "expression": "if",
                "logProbability": -6.290210191915742
            },
            {
                "expression": "cons",
                "logProbability": -2.2689897356316653
            },
            {
                "expression": "car",
                "logProbability": -6.194900012111418
            },
            {
                "expression": "cdr",
                "logProbability": -2.1629189926712575
            },
            {
                "expression": "map",
                "logProbability": -2.3619935186005865
            }
        ]
    },
    "frontiers": [
        {
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _n (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _c (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _d (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _n (cons _f (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _k) _rempty)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (map (lambda $0) (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _b (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _b (_rsplit _a $0))))"
                }
            ]
        },
        {
            "task": "re2_train_41_if_there_is_any_letter_add_v_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty (car (map (lambda $1) (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (car (map (lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $1)))) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (car (map (lambda (_rsplit _rempty $1)) (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cons _v (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _t (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _w (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _c (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _d (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _f (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _rempty (_rflatten (cons _r (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _rdot (_rflatten (cons _r (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _v _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _b _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _a _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _t _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _v)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rdot (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend (_rconcat _rempty _d) (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rappend (_rconcat _rempty _d) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _b) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty (_rflatten (cons _e (cons _w (cdr (_rsplit _rempty $0))))))))))"
                }
            ]
        },
        {
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _t (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _w (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _v _t)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _v)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _b _t)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _a _t)) (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _b)) (_rsplit _rempty $0))))"
                }
            ]
        },
        {
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _x) (cons _e (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _x _e) (cons _rempty (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _x (_rsplit _i (_rflatten (cons _e (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _rdot (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _rempty (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _q (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))"
                }
            ]
        },
        {
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _m) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _o _m) (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _t (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _q (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _b (cdr (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _b (cdr (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _c (cdr (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _c (cdr (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _d (cdr (cdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _r $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _q $0))))"
                }
            ]
        },
        {
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rdot (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _a _rempty) (cons _w (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _a) (cons _w (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _rempty _j) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _e (cons _v (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _b (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _t (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _w (cdr (_rsplit _rempty $0))))))"
                }
            ]
        },
        {
            "task": "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _a (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rappend _w (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))"
                }
            ]
        },
        {
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _q $0))))"
                }
            ]
        },
        {
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _t $0))))"
                }
            ]
        },
        {
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _rempty) (cons _a (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                }
            ]
        },
        {
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _rdot $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _v $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _b $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a $0))))"
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _t $0))))"
                }
            ]
        }
    ]
}