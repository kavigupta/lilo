{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_with_rewrites_check_if_working --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --syMetricMethod Rewrite --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 101541,
    "final_cost": 46363,
    "compression_ratio": 2.190130060608675,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _r _u) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _rempty) (cons _u (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons (_rconcat _u _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rconcat _rempty _a) _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a (_rconcat _x _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _i $0))))))",
        "(lam (_rflatten (cons _rempty (cons _l (cdr (_rsplit _rempty (_rflatten (cons _e (cons _n (cdr (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _l (cdr (_rsplit _rempty (_rflatten (cons _e (cons _n (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _e _rempty)) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _e)) (_rconcat _e _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _q $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _k _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _c) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _j _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty _j) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (_rsplit _i $0))))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c (_rconcat _t _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _i (_rsplit _a (_rflatten (cons _r (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _p _rempty)) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _n (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _s) (_rflatten (_rrevcdr (_rsplit _rempty $0))) $0))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _k (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cdr (_rsplit _rempty (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _n) $0 _q)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat (_rconcat _rempty _t) _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t (_rconcat _u _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _w (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty (_rflatten (cons _s (cons _w (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (_rappend _f (_rsplit _e $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (_rappend _f (_rsplit _e $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _rempty _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rsplit _k (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _e) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _y (_rsplit _a $0))))",
        "(lam (_rflatten (cons _y (_rsplit _r $0))))",
        "(lam (_rflatten (cons _y (_rsplit _i $0))))",
        "(lam (_rflatten (cons _y (_rsplit _j $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _i (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _j (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _j (_rsplit _e $0)))))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _j (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _e $0)))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _e (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _i) $0 (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _i $0)) _i) $0 (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _i) $0 (_rflatten (_rappend (_rtail (_rsplit _rdot $0)) (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (_rflatten (_rappend (_rtail (_rsplit _rdot $0)) (_rsplit _e $0)))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons (_rconcat _rempty _a) (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _e (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _w) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _c) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p (_rconcat _t _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _i _p))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _i) _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (_rappend _rempty (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (_rflatten (cons _a (_rsplit _a $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (_rsplit _i $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _e (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend (_rconcat _r _q) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend (_rconcat _b _rempty) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend (_rconcat _rempty _b) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _b _j) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (cons _rempty (_rsplit _a (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _v $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e (_rflatten (_rappend _x (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e (_rflatten (_rappend _rempty (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _i (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _v (_rsplit _a $0)))))))",
        "(lam (_rflatten (cons _v (_rsplit _i $0))))",
        "(lam (_rflatten (cons _v (_rsplit _o $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _r $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _n $0))))))))",
        "(lam (_rflatten (_rsplit _n (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _j $0))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _v) (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))"
    ],
    "rewritten": [
        "(lam (fn_1 $0 _u _r))",
        "(lam (fn_1 $0 (_rconcat _r _u) _rempty))",
        "(lam (fn_1 $0 _rempty (_rconcat _r _u)))",
        "(lam (fn_1 $0 _u (_rconcat _r _rempty)))",
        "(lam (fn_1 $0 (_rconcat _u _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat _a _x) _t))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _a) _x) _t))",
        "(lam (fn_0 $0 (_rconcat _a (_rconcat _x _rempty)) _t))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) (_rconcat _a _x) _t))",
        "(lam (fn_0 (_rflatten (_rsplit _i $0)) (_rconcat _a _x) _t))",
        "(lam (fn_1 (fn_6 $0 _n) _l _rempty))",
        "(lam (fn_1 (_rflatten (cdr (fn_7 $0))) _n _l))",
        "(lam (fn_1 (fn_1 $0 _rempty _rempty) _n _l))",
        "(lam (_rflatten (cons _l (cdr (fn_7 (fn_6 $0 _n))))))",
        "(lam (_rflatten (cons _l (cons _n (cdr (cdr (fn_7 $0)))))))",
        "(lam (fn_0 $0 (_rconcat _e _e) _e))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) (_rconcat _e _e) _e))",
        "(lam (fn_0 $0 (_rconcat _e _e) (_rconcat _e _rempty)))",
        "(lam (fn_0 $0 (_rconcat _e _e) (_rconcat _rempty _e)))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) (_rconcat _e _e) _e))",
        "(lam (_rflatten (map (lam _k) (fn_7 $0))))",
        "(lam (fn_3 $0 _k _rempty))",
        "(lam (_rflatten (map (lam _k) (fn_7 (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (fn_7 $0)))))))))",
        "(lam (_rflatten (map (lam _k) (fn_7 (fn_8 $0 _rempty)))))",
        "(lam (_rflatten (map (lam _k) (fn_7 (_rflatten (map (lam _k) (fn_7 $0)))))))",
        "(lam (fn_2 $0 _rempty _r))",
        "(lam (fn_4 (_rflatten (_rappend _r (_rappend _o (_rrevcdr (fn_7 $0))))) _rempty _r))",
        "(lam (fn_4 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (fn_7 $0))))) _rempty _r))",
        "(lam (fn_4 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_7 $0))))) _rempty _r))",
        "(lam (fn_4 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (fn_7 $0))))) _rempty _r))",
        "(lam (fn_4 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (fn_7 (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (fn_7 $0)))))))))))",
        "(lam (fn_4 (_rflatten (_rappend _o (_rrevcdr (fn_7 $0)))) _o _u))",
        "(lam (fn_4 (_rflatten (_rappend _u (_rrevcdr (fn_7 $0)))) _o _u))",
        "(lam (fn_5 $0 _d))",
        "(lam (_rflatten (_rappend _d (fn_7 $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lam (fn_3 $0 _j _q))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (fn_7 $0))))",
        "(lam (fn_3 (_rflatten (fn_7 $0)) _j _q))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_7 (_rflatten (map (lam _j) (fn_7 $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_7 (fn_3 $0 _rempty _j)))))",
        "(lam (fn_0 $0 (_rconcat _q _g) _g))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) (_rconcat _q _g) _g))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _q) _g) _g))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) (_rconcat _q _g) _g))",
        "(lam (fn_0 (fn_5 $0 _rempty) (_rconcat _q _g) _g))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_7 (_rflatten (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_7 (fn_8 $0 _rempty)))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_7 (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (fn_7 (_rflatten (_rsplit _q $0))))))",
        "(lam (fn_0 $0 (_rconcat _k _t) _i))",
        "(lam (fn_2 $0 _t _m))",
        "(lam (fn_4 (_rflatten (_rappend _u (_rappend _o (_rrevcdr (fn_7 $0))))) _t _m))",
        "(lam (fn_4 (fn_5 $0 _u) _t _m))",
        "(lam (fn_4 (fn_5 $0 _t) _t _m))",
        "(lam (fn_4 (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_7 $0))))) _t _m))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (fn_7 $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (fn_8 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (map (lam _j) (fn_7 $0))))",
        "(lam (_rflatten (map (lam _j) (fn_7 (_rflatten (map (lam _j) (fn_7 $0)))))))",
        "(lam (_rflatten (map (lam _j) (fn_7 (_rflatten (map (lam _c) (fn_7 $0)))))))",
        "(lam (_rflatten (map (lam _j) (fn_7 (_rflatten (map (lam _k) (fn_7 $0)))))))",
        "(lam (_rflatten (map (lam _j) (fn_7 (_rflatten (map (lam _l) (fn_7 $0)))))))",
        "(lam (fn_3 $0 _s _h))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (fn_7 $0))))",
        "(lam (fn_3 (_rflatten (map (lam $0) (fn_7 $0))) _s _h))",
        "(lam (fn_3 (_rflatten (fn_7 $0)) _s _h))",
        "(lam (fn_3 (fn_6 $0 _s) _s _h))",
        "(lam (fn_1 $0 _i _w))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (fn_7 $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lam (fn_0 $0 _j _r))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) _j _r))",
        "(lam (fn_0 $0 (_rconcat _j _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat _rempty _j) _r))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) _j _r))",
        "(lam (fn_1 $0 _w _y))",
        "(lam (fn_1 $0 (_rconcat _w _rempty) _y))",
        "(lam (fn_1 $0 _w (_rconcat _y _rempty)))",
        "(lam (fn_1 (_rflatten (fn_7 $0)) _w _y))",
        "(lam (fn_1 (_rflatten (_rsplit _i $0)) _w _y))",
        "(lam (fn_1 $0 _v _c))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _v _c)))))",
        "(lam (_rflatten (fn_7 (fn_1 $0 _v _c))))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 _v _c))))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 _v _c))))",
        "(lam (fn_0 $0 (_rconcat _y _a) _b))",
        "(lam (fn_1 $0 _a _q))",
        "(lam (fn_1 $0 (_rconcat _a _rempty) _q))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _q))",
        "(lam (fn_8 (_rflatten (cons _a (cdr (fn_7 $0)))) _q))",
        "(lam (fn_8 (fn_8 (_rflatten (cdr (fn_7 $0))) _a) _q))",
        "(lam (fn_0 $0 (_rconcat _c _t) _d))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) (_rconcat _c _t) _d))",
        "(lam (fn_0 $0 (_rconcat _c (_rconcat _t _rempty)) _d))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) (_rconcat _c _t) _d))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) (_rconcat _c _t) _d))",
        "(lam (fn_1 $0 _a _g))",
        "(lam (fn_1 $0 (_rconcat _a _rempty) _g))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _g))",
        "(lam (fn_8 (_rflatten (cons _a (cdr (fn_7 $0)))) _g))",
        "(lam (fn_1 $0 _r _i))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _r _i))",
        "(lam (fn_1 $0 _r (_rconcat _i _rempty)))",
        "(lam (fn_1 (fn_1 $0 _r _r) _i _rempty))",
        "(lam (fn_8 (_rflatten (cons _r (cdr (fn_7 $0)))) _i))",
        "(lam (fn_3 $0 _v _r))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _t (_rrevcdr (fn_7 $0))))))",
        "(lam (fn_4 $0 _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (fn_7 $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (fn_7 $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (fn_7 $0)))))))))",
        "(lam (fn_0 $0 _g _p))",
        "(lam (fn_0 $0 _g (_rconcat _p _rempty)))",
        "(lam (fn_0 $0 _g (_rconcat _rempty _p)))",
        "(lam (_rflatten (fn_7 (fn_0 $0 _g _p))))",
        "(lam (_rflatten (_rsplit _n (fn_0 $0 _g _p))))",
        "(lam (fn_5 $0 _p))",
        "(lam (_rflatten (_rappend _p (fn_7 $0))))",
        "(lam (fn_5 (_rflatten (map (lam $0) (fn_7 $0))) _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lam (if (_rmatch (_rtail (fn_7 $0)) _s) (_rflatten (_rrevcdr (fn_7 $0))) $0))",
        "(lam (fn_0 $0 (_rconcat _c _g) _o))",
        "(lam (_rflatten (fn_7 (fn_0 $0 (_rconcat _c _g) _o))))",
        "(lam (fn_0 (fn_5 $0 _rempty) (_rconcat _c _g) _o))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _c _g) _o))))",
        "(lam (_rflatten (_rsplit _k (fn_0 $0 (_rconcat _c _g) _o))))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (fn_7 $0))))",
        "(lam (fn_1 $0 _b _rempty))",
        "(lam (fn_1 $0 _rempty _b))",
        "(lam (_rflatten (cons _b (cdr (fn_7 $0)))))",
        "(lam (fn_8 (_rflatten (cdr (fn_7 $0))) _b))",
        "(lam (_rflatten (cdr (fn_7 (fn_1 $0 _b _r)))))",
        "(lam (fn_0 $0 _q _n))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _n) $0 _q)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (fn_7 $0))))",
        "(lam (fn_0 $0 (_rconcat _t _u) _e))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _t) _u) _e))",
        "(lam (fn_0 $0 (_rconcat _t (_rconcat _u _rempty)) _e))",
        "(lam (_rflatten (fn_7 (fn_0 $0 (_rconcat _t _u) _e))))",
        "(lam (fn_9 (fn_2 $0 _f _w) $0 _e))",
        "(lam (fn_1 $0 _w _b))",
        "(lam (fn_1 $0 _w (_rconcat _b _rempty)))",
        "(lam (fn_8 (fn_1 $0 _rempty _w) _b))",
        "(lam (fn_8 (fn_1 $0 _w _rempty) _b))",
        "(lam (fn_1 (fn_1 $0 _w _s) _b _rempty))",
        "(lam (fn_5 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_5 $0 _f))))",
        "(lam (_rflatten (_rsplit _q (fn_5 $0 _f))))",
        "(lam (fn_0 $0 _q _b))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) _q _b))",
        "(lam (fn_0 $0 (_rconcat _q _rempty) _b))",
        "(lam (fn_0 $0 (_rconcat _rempty _q) _b))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) _q _b))",
        "(lam (fn_1 $0 _f _rempty))",
        "(lam (fn_1 $0 _rempty _f))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _rempty _f)))))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _rempty _f))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 _rempty _f))))",
        "(lam (fn_1 $0 _c _y))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _c _y)))))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _c _y))",
        "(lam (fn_1 (_rflatten (_rsplit _k $0)) _c _y))",
        "(lam (_rflatten (_rsplit _k (fn_1 $0 _c _y))))",
        "(lam (fn_3 $0 _i _n))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (fn_7 $0)))))",
        "(lam (fn_3 $0 _t _w))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (fn_7 $0))))))",
        "(lam (fn_2 $0 _i _y))",
        "(lam (fn_4 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (fn_7 $0))))) _i _y))",
        "(lam (fn_4 (fn_5 $0 _i) _i _y))",
        "(lam (fn_4 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_7 $0))))) _i _y))",
        "(lam (fn_4 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (fn_7 $0))))) _i _y))",
        "(lam (fn_3 $0 _e _u))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_3 $0 _e _u)))))",
        "(lam (fn_3 (_rflatten (map (lam _e) (fn_7 $0))) _e _u))",
        "(lam (fn_3 (_rflatten (map (lam _u) (fn_7 $0))) _e _u))",
        "(lam (fn_3 (fn_6 $0 _h) _e _u))",
        "(lam (fn_0 $0 (_rconcat _s _x) _s))",
        "(lam (fn_8 $0 _y))",
        "(lam (_rflatten (cons _y (_rsplit _r $0))))",
        "(lam (_rflatten (cons _y (_rsplit _i $0))))",
        "(lam (_rflatten (cons _y (_rsplit _j $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (fn_7 $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (cdr (fn_7 (fn_1 $0 _e _e))))))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (fn_7 $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (fn_7 (fn_1 $0 _e _e))))))",
        "(lam (fn_0 $0 (_rconcat _e _d) _r))",
        "(lam (_rflatten (_rsplit _r (fn_0 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _i (fn_0 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _j (fn_0 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 (_rconcat _e _d) _r))))",
        "(lam (fn_1 $0 _i _m))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _i _m))",
        "(lam (fn_1 (_rflatten (fn_7 $0)) _i _m))",
        "(lam (fn_1 (fn_5 $0 _rempty) _i _m))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) _i _m))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (fn_7 $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (fn_7 $0))))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (fn_8 (fn_1 $0 _o _rempty) _j))",
        "(lam (fn_8 (fn_1 $0 _rempty _o) _j))",
        "(lam (fn_8 (_rflatten (cons _o (cdr (fn_7 $0)))) _j))",
        "(lam (if (_rmatch (_rtail (cdr (fn_7 $0))) _e) $0 (fn_5 $0 _j)))",
        "(lam (if (_rmatch _e (_rtail (cdr (fn_7 $0)))) $0 (fn_5 $0 _j)))",
        "(lam (fn_9 (fn_5 $0 _p) $0 _e))",
        "(lam (fn_5 $0 (if (_rmatch (_rtail (fn_7 $0)) _e) _rempty _p)))",
        "(lam (fn_5 $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)))",
        "(lam (fn_5 $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)))",
        "(lam (fn_3 $0 _i _g))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (fn_7 $0))))",
        "(lam (fn_3 $0 _i (_rconcat _g _rempty)))",
        "(lam (fn_2 (fn_3 $0 _i _g) _rempty _i))",
        "(lam (fn_3 (fn_2 $0 _rempty _i) _i _g))",
        "(lam (fn_0 $0 _g _n))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) _g _n))",
        "(lam (fn_0 $0 (_rconcat _g _rempty) _n))",
        "(lam (fn_0 $0 (_rconcat _rempty _g) _n))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) _g _n))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_7 $0))))))",
        "(lam (fn_2 $0 _o _m))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_7 (_rflatten (map (lam $0) (fn_7 $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_7 (_rflatten (fn_7 $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (fn_7 (fn_5 $0 _rempty)))))))",
        "(lam (fn_3 $0 _x _h))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_3 $0 _x _h)))))",
        "(lam (fn_3 $0 _x (_rconcat _h _rempty)))",
        "(lam (fn_3 (fn_6 $0 _j) _x _h))",
        "(lam (fn_3 (fn_6 $0 _s) _x _h))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (fn_7 $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (fn_1 $0 _b _g))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _b _g)))))",
        "(lam (fn_5 (fn_1 $0 _b _g) _rempty))",
        "(lam (fn_1 (fn_5 $0 _rempty) _b _g))",
        "(lam (fn_1 (fn_8 $0 _rempty) _b _g))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (fn_7 $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (fn_7 $0))))))))",
        "(lam (fn_9 (fn_5 $0 (_rtail (fn_7 $0))) $0 _i))",
        "(lam (if (_rmatch (_rtail (_rsplit _i $0)) _i) $0 (fn_5 $0 (_rtail (fn_7 $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (fn_5 $0 (_rtail (fn_7 $0)))))",
        "(lam (fn_9 (fn_5 $0 (_rtail (_rsplit _rdot $0))) $0 _i))",
        "(lam (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (fn_5 $0 (_rtail (_rsplit _rdot $0)))))",
        "(lam (fn_6 $0 _a))",
        "(lam (fn_6 (_rflatten (map (lam $0) (fn_7 $0))) _a))",
        "(lam (fn_6 $0 (_rconcat _rempty _a)))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (cdr (fn_7 (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (fn_0 $0 (_rconcat _w _g) _g))",
        "(lam (fn_1 $0 _s _i))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _s _i)))))",
        "(lam (fn_1 (_rflatten (fn_7 $0)) _s _i))",
        "(lam (fn_5 (fn_1 $0 _s _i) _rempty))",
        "(lam (fn_1 (fn_5 $0 _rempty) _s _i))",
        "(lam (fn_1 $0 _l _g))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _l _g)))))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _l _g))",
        "(lam (fn_1 $0 (_rconcat _g _l) _rempty))",
        "(lam (fn_1 $0 (_rconcat _l _rempty) _g))",
        "(lam (fn_1 $0 _m _rempty))",
        "(lam (fn_1 $0 _rempty _m))",
        "(lam (_rflatten (fn_7 (fn_1 $0 _rempty _m))))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 _rempty _m))))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 _rempty _m))))",
        "(lam (fn_3 $0 _u _j))",
        "(lam (fn_3 (_rflatten (map (lam _u) (fn_7 $0))) _u _j))",
        "(lam (fn_3 (_rflatten (map (lam _w) (fn_7 $0))) _u _j))",
        "(lam (fn_3 (_rflatten (map (lam _c) (fn_7 $0))) _u _j))",
        "(lam (fn_3 (fn_4 $0 _u _u) _u _j))",
        "(lam (fn_0 $0 (_rconcat _p _t) _s))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) (_rconcat _p _t) _s))",
        "(lam (fn_0 $0 (_rconcat _p (_rconcat _t _rempty)) _s))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) (_rconcat _p _t) _s))",
        "(lam (_rflatten (fn_7 (fn_0 $0 (_rconcat _p _t) _s))))",
        "(lam (fn_1 $0 _w _a))",
        "(lam (fn_1 $0 (_rconcat _a _w) _rempty))",
        "(lam (fn_8 (fn_1 $0 _rempty _w) _a))",
        "(lam (fn_8 (fn_1 $0 _w _rempty) _a))",
        "(lam (fn_8 (_rflatten (cons _w (cdr (fn_7 $0)))) _a))",
        "(lam (fn_2 $0 _r _j))",
        "(lam (fn_2 (_rflatten (fn_7 $0)) _r _j))",
        "(lam (fn_4 (fn_5 $0 _j) _r _j))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 $0 _p _i))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (fn_7 $0))))",
        "(lam (fn_3 $0 (_rconcat _i _p) _rempty))",
        "(lam (fn_3 $0 _p (_rconcat _rempty _i)))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (fn_7 $0))))",
        "(lam (fn_1 $0 _o (car (fn_7 $0))))",
        "(lam (fn_1 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_1 $0 _o (car (map (lam $0) (fn_7 $0)))))",
        "(lam (fn_1 $0 _o (car (_rappend _rempty (fn_7 $0)))))",
        "(lam (fn_1 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_1 $0 _i _x))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_1 $0 _i _x)))))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _i _x))",
        "(lam (fn_1 $0 (_rconcat _rempty _i) _x))",
        "(lam (fn_1 (_rflatten (fn_7 $0)) _i _x))",
        "(lam (fn_1 $0 _i _q))",
        "(lam (fn_1 $0 (_rconcat _i _rempty) _q))",
        "(lam (fn_1 $0 (_rconcat _q _i) _rempty))",
        "(lam (fn_1 $0 _i (_rconcat _q _rempty)))",
        "(lam (fn_1 $0 _rempty (_rconcat _q _i)))",
        "(lam (fn_4 $0 _j _rempty))",
        "(lam (fn_4 $0 _rempty _j))",
        "(lam (fn_4 (_rflatten (fn_7 $0)) _rempty _j))",
        "(lam (fn_2 $0 _i _rempty))",
        "(lam (fn_2 $0 _rempty _i))",
        "(lam (fn_4 (fn_5 $0 _i) _i _rempty))",
        "(lam (fn_4 (fn_5 $0 _i) _rempty _i))",
        "(lam (fn_4 (fn_5 $0 _u) _rempty _i))",
        "(lam (fn_1 $0 _s _e))",
        "(lam (fn_6 (fn_8 $0 _a) _s))",
        "(lam (fn_6 (fn_1 $0 _e _e) _s))",
        "(lam (fn_6 (fn_1 $0 _e _q) _s))",
        "(lam (fn_6 (fn_1 $0 _e _k) _s))",
        "(lam (fn_0 $0 (_rconcat _r _q) _r))",
        "(lam (fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lam (fn_6 $0 _s))",
        "(lam (_rflatten (cons _e (cdr (fn_7 (fn_6 $0 _s))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_1 (_rflatten (cons _e (cdr (cdr (fn_7 $0))))) _s _e))",
        "(lam (_rflatten (cons _e (cdr (fn_7 (_rflatten (cons _s (cons _s (cdr (cdr (fn_7 $0)))))))))))",
        "(lam (fn_0 $0 _v _i))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_0 $0 _v _i)))))",
        "(lam (fn_0 (_rflatten (map (lam $0) (fn_7 $0))) _v _i))",
        "(lam (fn_0 (_rflatten (fn_7 $0)) _v _i))",
        "(lam (fn_0 (_rflatten (_rsplit _i $0)) _v _i))",
        "(lam (fn_1 (fn_6 $0 _s) _f _rempty))",
        "(lam (fn_1 (fn_6 $0 _s) _rempty _f))",
        "(lam (_rflatten (cons _f (cdr (fn_7 (fn_6 $0 _s))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _e (fn_6 $0 _s))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (fn_6 $0 _s))))))",
        "(lam (fn_4 $0 _r _q))",
        "(lam (fn_4 $0 (_rconcat _r _q) _rempty))",
        "(lam (fn_4 $0 _rempty (_rconcat _r _q)))",
        "(lam (fn_5 (fn_4 $0 _rempty _r) _q))",
        "(lam (fn_5 (fn_4 $0 _r _rempty) _q))",
        "(lam (fn_4 $0 _b _j))",
        "(lam (fn_4 (_rflatten (map (lam $0) (fn_7 $0))) _b _j))",
        "(lam (fn_4 $0 (_rconcat _b _rempty) _j))",
        "(lam (fn_4 $0 (_rconcat _rempty _b) _j))",
        "(lam (fn_4 $0 _rempty (_rconcat _b _j)))",
        "(lam (fn_5 $0 _k))",
        "(lam (_rflatten (_rappend _k (fn_7 $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lam (fn_2 $0 _x _s))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_2 $0 _x _s)))))",
        "(lam (fn_8 (fn_2 $0 _x _s) _rempty))",
        "(lam (fn_4 (_rflatten (_rappend _s (_rappend _o (_rrevcdr (fn_7 $0))))) _x _s))",
        "(lam (fn_4 (fn_5 $0 _p) _x _s))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _u $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _v $0))))",
        "(lam (fn_5 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (fn_2 $0 _x _p))",
        "(lam (fn_5 (fn_2 $0 _rempty _x) _p))",
        "(lam (fn_5 (fn_2 $0 _x _rempty) _p))",
        "(lam (fn_4 (fn_5 $0 _p) _x _p))",
        "(lam (fn_5 (_rflatten (_rappend _x (_rrevcdr (fn_7 $0)))) _p))",
        "(lam (fn_0 $0 (_rconcat _r _o) _o))",
        "(lam (_rflatten (_rsplit _r (fn_0 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _i (fn_0 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _t (fn_0 $0 (_rconcat _r _o) _o))))",
        "(lam (fn_8 $0 _v))",
        "(lam (_rflatten (cons _v (fn_7 $0))))",
        "(lam (_rflatten (map (lam $0) (fn_7 (fn_8 $0 _v)))))",
        "(lam (_rflatten (cons _v (_rsplit _i $0))))",
        "(lam (_rflatten (cons _v (_rsplit _o $0))))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (fn_7 $0))))",
        "(lam (fn_8 (_rflatten (map (lam $0) (fn_7 $0))) _b))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (fn_8 (_rflatten (fn_7 $0)) _b))",
        "(lam (fn_8 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _r $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _l) (fn_7 $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_7 (_rflatten (map (lam $0) (fn_7 $0)))))))))",
        "(lam (_rflatten (map (lam $0) (fn_7 (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_7 $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_7 (_rflatten (_rsplit _n $0))))))))",
        "(lam (_rflatten (_rsplit _n (_rflatten (_rappend _j (_rappend _o (_rrevcdr (fn_7 $0))))))))",
        "(lam (fn_1 $0 _b _s))",
        "(lam (fn_1 (_rflatten (map (lam $0) (fn_7 $0))) _b _s))",
        "(lam (fn_1 (fn_5 $0 _rempty) _b _s))",
        "(lam (fn_1 (_rflatten (_rsplit _j $0)) _b _s))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) _b _s))",
        "(lam (fn_2 $0 _c _v))",
        "(lam (fn_2 $0 _c (_rconcat _rempty _v)))",
        "(lam (fn_2 $0 _rempty (_rconcat _c _v)))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (fn_7 $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _r _u) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _r _u)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _u (_rconcat _r _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _u _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _a) _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a (_rconcat _x _rempty)) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _a _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _i $0)) (_rconcat _a _x) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _n) _l _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _n _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _rempty) _n _l))",
        "(lambda (_rflatten (cons _l (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _n))))))",
        "(lambda (_rflatten (cons _l (cons _n (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _e _e) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) (_rconcat _e _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _e) (_rconcat _rempty _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _e _e) _e))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _k _rempty))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty)))))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _r (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _i (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _g (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _n (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _u (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))",
        "(lambda (_rflatten (map (lambda (_rconcat _q _j)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _j _q))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _rempty _j)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _q _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _q) _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _q _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) (_rconcat _q _g) _g))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty)))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) (_rflatten (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rempty $0)) (_rflatten (_rsplit _q $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _t) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _u (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _t) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _k $0))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _c) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda _l) (#(lambda (_rsplit _rempty $0)) $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _s _h))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _j _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _j _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _j _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _j) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _j _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _w _rempty) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _y _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _i $0)) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c)))))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _t) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _c _t) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c (_rconcat _t _rempty)) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _c _t) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _rdot $0)) (_rconcat _c _t) _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _a (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r) _i _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _v _r))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _q (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g (_rconcat _p _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g (_rconcat _rempty _p)))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))))",
        "(lambda (_rflatten (_rsplit _n (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _s) (_rflatten (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) (_rconcat _c _g) _o))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (_rflatten (_rsplit _k (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _b))",
        "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) $0))) _b))",
        "(lambda (_rflatten (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _r)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _n))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _n $0) _q $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch (_rnot $0) _n) $0 _q)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _t) _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t (_rconcat _u _rempty)) _e))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))))",
        "(lambda (#(lambda (lambda (lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $1)) $0) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _f _w) $0 _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w (_rconcat _b _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _w) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _rempty) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _s) _b _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _q _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _rempty) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _q) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _q _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _f _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _rempty _f))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _f))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _c _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _k $0)) _c _y))",
        "(lambda (_rflatten (_rsplit _k (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _n))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _i (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _w (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (map (lambda (_rconcat _n _i)) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _t _w))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _i (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _g (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _n (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _e) (#(lambda (_rsplit _rempty $0)) $0))) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _u) (#(lambda (_rsplit _rempty $0)) $0))) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _h) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _s _x) _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _y))",
        "(lambda (_rflatten (cons _y (_rsplit _r $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _k (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _x (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _i (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _j (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rdot $0)) _i _m))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rrevcdr (_rappend _q (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _o) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _o (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _j))",
        "(lambda (if (_rmatch (_rtail (cdr (#(lambda (_rsplit _rempty $0)) $0))) _e) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j)))",
        "(lambda (if (_rmatch _e (_rtail (cdr (#(lambda (_rsplit _rempty $0)) $0)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j)))",
        "(lambda (#(lambda (lambda (lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $1)) $0) $1 $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p) $0 _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g))",
        "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i (_rconcat _g _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _g) _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _i) _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _g _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _g) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _g _n))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _o _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x (_rconcat _h _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _j) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _b _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty) _b _g))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (#(lambda (lambda (lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $1)) $0) $1 $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (_rtail (#(lambda (_rsplit _rempty $0)) $0))) $0 _i))",
        "(lambda (if (_rmatch (_rtail (_rsplit _i $0)) _i) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (_rtail (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (_rtail (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $1)) $0) $1 $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (_rtail (_rsplit _rdot $0))) $0 _i))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rdot $0)) _i) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (_rtail (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 (_rconcat _rempty _a)))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _w _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _i))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _i)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _s _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _i) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _g _l) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _l _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _m _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _m))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _m))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _m))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _u) (#(lambda (_rsplit _rempty $0)) $0))) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _w) (#(lambda (_rsplit _rempty $0)) $0))) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _c) (#(lambda (_rsplit _rempty $0)) $0))) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _u _u) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) (_rconcat _p _t) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p (_rconcat _t _rempty)) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) (_rconcat _p _t) _s))",
        "(lambda (_rflatten (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _t) _s))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _w) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _w) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _rempty) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _w (cdr (#(lambda (_rsplit _rempty $0)) $0)))) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j) _r _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p _i))",
        "(lambda (_rflatten (map (lambda (_rconcat _i _p)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _p) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _p (_rconcat _rempty _i)))",
        "(lambda (_rflatten (map (lambda (_rconcat _i _p)) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (_rappend _rempty (#(lambda (_rsplit _rempty $0)) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _i) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _i _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _q _i) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty (_rconcat _q _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u) _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _a) _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e) _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _q) _s))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _e (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0))))) _s _e))",
        "(lambda (_rflatten (cons _e (cdr (#(lambda (_rsplit _rempty $0)) (_rflatten (cons _s (cons _s (cdr (cdr (#(lambda (_rsplit _rempty $0)) $0)))))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _i $0)) _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s) _f _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s) _rempty _f))",
        "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _e (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 (_rconcat _r _q) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty (_rconcat _r _q)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _r) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _b _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 (_rconcat _b _rempty) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 (_rconcat _rempty _b) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty (_rconcat _b _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _j $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _x _s))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _x _s)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _x _s) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _s (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p) _x _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _r $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _u $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _v $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _x _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _x) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _x _rempty) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p) _x _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (_rappend _x (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _i (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v)))))",
        "(lambda (_rflatten (cons _v (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _o $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _b))",
        "(lambda (_rflatten (cons _b (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (#(lambda (_rsplit _rempty $0)) $0)) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _r $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _c $0))))",
        "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rempty $0)) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _b) $0))))",
        "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) (_rflatten (_rsplit _n $0))))))))",
        "(lambda (_rflatten (_rsplit _n (_rflatten (_rappend _j (_rappend _o (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rempty $0)) $0))) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _j $0)) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rdot $0)) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _c _v))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _c (_rconcat _rempty _v)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty (_rconcat _c _v)))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (#(lambda (_rsplit _rempty $0)) $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 14868,
            "final_cost": 86673,
            "compression_ratio": 1.1715413104426984,
            "cumulative_compression_ratio": 1.1715413104426984,
            "num_uses": 77,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _e _e) (_rconcat _e _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _e _rempty)) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g (_rconcat _p _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _p _rempty)) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) (_rconcat _rempty _e)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _e)) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g (_rconcat _rempty _p)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _rempty) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _q) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _rempty _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _q _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _q _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _c (_rconcat _t _rempty)) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c (_rconcat _t _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _t) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) (_rconcat _c _t) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _c _t) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _c _t) _d": "(_rflatten (map (lam (if (_rmatch $0 _d) (_rconcat _c _t) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _t) _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat (_rconcat _rempty _t) _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _e _e) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _e _e) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _t (_rconcat _u _rempty)) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t (_rconcat _u _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _q) _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _e $0))) (_rconcat _q _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _q _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _q _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q _g) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _t) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _k _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _i $0)) _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (_rsplit _i $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _g _rempty) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _g) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _e $0))) (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _j _rempty) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _j _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _j) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty _j) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _j _r": "(_rflatten (map (lam (if (_rmatch $0 _r) _j $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _p (_rconcat _t _rempty)) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p (_rconcat _t _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _p _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _p _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _p _t) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _p _t) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _s _x) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _s _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _a) _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat (_rconcat _rempty _a) _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a (_rconcat _x _rempty)) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a (_rconcat _x _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _i $0)) (_rconcat _a _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _i $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) (_rconcat _a _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _a _x) $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 14039,
            "final_cost": 72634,
            "compression_ratio": 1.1932841369055813,
            "cumulative_compression_ratio": 1.3979816614808491,
            "num_uses": 115,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _w (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _q _rempty)": "(_rflatten (cons (_rconcat _q _rempty) (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _u (_rconcat _r _rempty)": "(_rflatten (cons (_rconcat _r _rempty) (cons _u (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _r _u)": "(_rflatten (cons (_rconcat _r _u) (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w (_rconcat _y _rempty)": "(_rflatten (cons (_rconcat _y _rempty) (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rappend _rempty (_rsplit _rempty $0)))": "(_rflatten (cons (car (_rappend _rempty (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _b": "(_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _b": "(_rflatten (cons _b (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))) _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _l _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _g": "(_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _e $0))) _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (_rsplit _a $0))) _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0))))))))"
                },
                {
                    "fn_1 $0 _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _e $0))) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _s _i": "(_rflatten (cons _i (cons _s (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cdr (_rsplit _rempty $0))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))) _n _l": "(_rflatten (cons _l (cons _n (cdr (_rsplit _rempty (_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _e $0))) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _rempty _m": "(_rflatten (cons _m (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _o": "(_rflatten (cons _o (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _rempty) _q": "(_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _i _rempty) _q": "(_rflatten (cons _q (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _q": "(_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _q": "(_rflatten (cons _q (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _u _rempty) _r": "(_rflatten (cons _r (cons (_rconcat _u _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _r": "(_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _u _r": "(_rflatten (cons _r (cons _u (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _a _w) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _g _l) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _q _i) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _u) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _r _u) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _s (cons _w (cdr (_rsplit _rempty $0))))) _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty (_rflatten (cons _s (cons _w (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 $0 _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))) _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))) _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _e (cons _n (cdr (cdr (_rsplit _rempty $0)))))) _l _rempty": "(_rflatten (cons _rempty (cons _l (cdr (_rsplit _rempty (_rflatten (cons _e (cons _n (cdr (cdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_1 $0 _m _rempty": "(_rflatten (cons _rempty (cons _m (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _o _rempty": "(_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _rempty": "(_rflatten (cons _rempty (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _e $0))) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _j $0)) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _j $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _w _s": "(_rflatten (cons _s (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _i) _x": "(_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 (_rconcat _w _rempty) _y": "(_rflatten (cons _y (cons (_rconcat _w _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 $0 _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _k $0)) _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 $0 _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _i $0)) _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (_rsplit _i $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty #0)))))))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2))))))))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 9595,
            "final_cost": 63039,
            "compression_ratio": 1.1522073636954901,
            "cumulative_compression_ratio": 1.6107647646694903,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _rempty (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _c (_rconcat _rempty _v)": "(_rflatten (_rappend (_rconcat _rempty _v) (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))) _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))))))))))))"
                },
                {
                    "fn_2 $0 _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))))))"
                },
                {
                    "fn_2 $0 _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _i _rempty": "(_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _x _rempty": "(_rflatten (_rappend _rempty (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _f _w": "(_rflatten (_rappend _w (_rappend _f (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _rempty _x": "(_rflatten (_rappend _x (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 4253,
            "final_cost": 58786,
            "compression_ratio": 1.0723471574864765,
            "cumulative_compression_ratio": 1.727299016772701,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _i (_rconcat _g _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _x (_rconcat _h _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _p (_rconcat _rempty _i)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _i) _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (fn_2 $0 _rempty _i) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot (fn_2 $0 _rempty _i))))"
                },
                {
                    "fn_3 $0 _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0)))))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 $0 _p _i": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _rempty _j": "(_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _c) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _c) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _u) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _w) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _w) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 #0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (_rconcat _i _p) _rempty": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _i _p))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _k _rempty": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0)))))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _e) (_rsplit _rempty $0))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _u) (_rsplit _rempty $0))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2)))))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 3030,
            "final_cost": 55756,
            "compression_ratio": 1.0543439271109836,
            "cumulative_compression_ratio": 1.8211672286390703,
            "num_uses": 37,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _rempty (_rconcat _b _j)": "(_rflatten (_rappend (_rconcat _b _j) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _rempty (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rsplit _e $0))) _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _u (_rsplit _e $0))) _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 $0 (_rconcat _b _rempty) _j": "(_rflatten (_rappend _j (_rappend (_rconcat _b _rempty) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _b) _j": "(_rflatten (_rappend _j (_rappend (_rconcat _rempty _b) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _j (_rsplit _e $0))) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _rempty $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _t (_rsplit _e $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _u (_rsplit _e $0))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _p (_rsplit _e $0))) _x _p": "(_rflatten (_rappend _p (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 $0 (_rconcat _r _q) _rempty": "(_rflatten (_rappend _rempty (_rappend (_rconcat _r _q) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rsplit _e $0))) _i _rempty": "(_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _r _rempty": "(_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _p (_rsplit _e $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _p (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _s (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _s (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_4 $0 _u _u": "(_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _i (_rsplit _e $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0)))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _e #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 3030,
            "final_cost": 52726,
            "compression_ratio": 1.0574669043735538,
            "cumulative_compression_ratio": 1.9258240716155217,
            "num_uses": 44,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rtail (_rsplit _rdot $0))": "(_rflatten (_rappend (_rtail (_rsplit _rdot $0)) (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 (_rtail (_rsplit _rempty $0))": "(_rflatten (_rappend (_rtail (_rsplit _rempty $0)) (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _a": "(_rflatten (_rappend _a (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _d": "(_rflatten (_rappend _d (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (_rappend _f (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (_rappend _i (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _j": "(_rflatten (_rappend _j (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _p": "(_rflatten (_rappend _p (_rsplit _e $0)))"
                },
                {
                    "fn_5 (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0)))) _p": "(_rflatten (_rappend _p (_rsplit _e (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_5 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _p": "(_rflatten (_rappend _p (_rsplit _e (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (fn_2 $0 _rempty _x) _p": "(_rflatten (_rappend _p (_rsplit _e (fn_2 $0 _rempty _x))))"
                },
                {
                    "fn_5 (fn_2 $0 _x _rempty) _p": "(_rflatten (_rappend _p (_rsplit _e (fn_2 $0 _x _rempty))))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _e $0)))"
                },
                {
                    "fn_5 (fn_4 $0 _r _rempty) _q": "(_rflatten (_rappend _q (_rsplit _e (fn_4 $0 _r _rempty))))"
                },
                {
                    "fn_5 (fn_4 $0 _rempty _r) _q": "(_rflatten (_rappend _q (_rsplit _e (fn_4 $0 _rempty _r))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _e $0)))"
                },
                {
                    "fn_5 (fn_1 $0 _b _g) _rempty": "(_rflatten (_rappend _rempty (_rsplit _e (fn_1 $0 _b _g))))"
                },
                {
                    "fn_5 (fn_1 $0 _s _i) _rempty": "(_rflatten (_rappend _rempty (_rsplit _e (fn_1 $0 _s _i))))"
                },
                {
                    "fn_5 $0 _t": "(_rflatten (_rappend _t (_rsplit _e $0)))"
                },
                {
                    "fn_5 $0 _u": "(_rflatten (_rappend _u (_rsplit _e $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _e (cons #1 (cdr (cdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1))))))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 2222,
            "final_cost": 50504,
            "compression_ratio": 1.0439965151275146,
            "cumulative_compression_ratio": 2.010553619515286,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (_rconcat _rempty _a)": "(_rflatten (cons _e (cons (_rconcat _rempty _a) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_6 $0 _h": "(_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _j": "(_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _n": "(_rflatten (cons _e (cons _n (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rflatten (cons _a (_rsplit _a $0))) _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (_rflatten (cons _a (_rsplit _a $0)))))))))"
                },
                {
                    "fn_6 (fn_1 $0 _e _e) _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (fn_1 $0 _e _e)))))))"
                },
                {
                    "fn_6 (fn_1 $0 _e _k) _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (fn_1 $0 _e _k)))))))"
                },
                {
                    "fn_6 (fn_1 $0 _e _q) _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty (fn_1 $0 _e _q)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rsplit _rempty #0)",
            "dreamcoder": "#(lambda (_rsplit _rempty $0))",
            "arity": 1,
            "name": "fn_7",
            "utility": 1616,
            "final_cost": 48888,
            "compression_ratio": 1.0330551464572084,
            "cumulative_compression_ratio": 2.077012763868434,
            "num_uses": 190,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0": "(_rsplit _rempty $0)"
                },
                {
                    "fn_7 (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))": "(_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _n $0))": "(_rsplit _rempty (_rflatten (_rsplit _n $0)))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _q $0))": "(_rsplit _rempty (_rflatten (_rsplit _q $0)))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _rdot $0))": "(_rsplit _rempty (_rflatten (_rsplit _rdot $0)))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _rempty $0))": "(_rsplit _rempty (_rflatten (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))": "(_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_7 (_rflatten (cons _rempty (_rsplit _a $0)))": "(_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0))))"
                },
                {
                    "fn_7 (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0))))))": "(_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_7 (_rflatten (cons _v (_rsplit _a $0)))": "(_rsplit _rempty (_rflatten (cons _v (_rsplit _a $0))))"
                },
                {
                    "fn_7 (_rflatten (map (lam $0) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _c) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _c) (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _k) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _l) (_rsplit _rempty $0)))": "(_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0))))"
                },
                {
                    "fn_7 (fn_0 $0 (_rconcat _c _g) _o)": "(_rsplit _rempty (fn_0 $0 (_rconcat _c _g) _o))"
                },
                {
                    "fn_7 (fn_0 $0 (_rconcat _p _t) _s)": "(_rsplit _rempty (fn_0 $0 (_rconcat _p _t) _s))"
                },
                {
                    "fn_7 (fn_0 $0 (_rconcat _t _u) _e)": "(_rsplit _rempty (fn_0 $0 (_rconcat _t _u) _e))"
                },
                {
                    "fn_7 (fn_0 $0 _g _p)": "(_rsplit _rempty (fn_0 $0 _g _p))"
                },
                {
                    "fn_7 (fn_0 $0 _v _i)": "(_rsplit _rempty (fn_0 $0 _v _i))"
                },
                {
                    "fn_7 (fn_1 $0 _b _g)": "(_rsplit _rempty (fn_1 $0 _b _g))"
                },
                {
                    "fn_7 (fn_1 $0 _b _r)": "(_rsplit _rempty (fn_1 $0 _b _r))"
                },
                {
                    "fn_7 (fn_1 $0 _c _y)": "(_rsplit _rempty (fn_1 $0 _c _y))"
                },
                {
                    "fn_7 (fn_1 $0 _e _e)": "(_rsplit _rempty (fn_1 $0 _e _e))"
                },
                {
                    "fn_7 (fn_1 $0 _i _x)": "(_rsplit _rempty (fn_1 $0 _i _x))"
                },
                {
                    "fn_7 (fn_1 $0 _l _g)": "(_rsplit _rempty (fn_1 $0 _l _g))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _f)": "(_rsplit _rempty (fn_1 $0 _rempty _f))"
                },
                {
                    "fn_7 (fn_1 $0 _rempty _m)": "(_rsplit _rempty (fn_1 $0 _rempty _m))"
                },
                {
                    "fn_7 (fn_1 $0 _s _i)": "(_rsplit _rempty (fn_1 $0 _s _i))"
                },
                {
                    "fn_7 (fn_1 $0 _v _c)": "(_rsplit _rempty (fn_1 $0 _v _c))"
                },
                {
                    "fn_7 (fn_2 $0 _x _s)": "(_rsplit _rempty (fn_2 $0 _x _s))"
                },
                {
                    "fn_7 (fn_3 $0 _e _u)": "(_rsplit _rempty (fn_3 $0 _e _u))"
                },
                {
                    "fn_7 (fn_3 $0 _rempty _j)": "(_rsplit _rempty (fn_3 $0 _rempty _j))"
                },
                {
                    "fn_7 (fn_3 $0 _x _h)": "(_rsplit _rempty (fn_3 $0 _x _h))"
                },
                {
                    "fn_7 (fn_5 $0 _rempty)": "(_rsplit _rempty (fn_5 $0 _rempty))"
                },
                {
                    "fn_7 (fn_6 $0 _n)": "(_rsplit _rempty (fn_6 $0 _n))"
                },
                {
                    "fn_7 (fn_6 $0 _s)": "(_rsplit _rempty (fn_6 $0 _s))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1313,
            "final_cost": 47575,
            "compression_ratio": 1.027598528638991,
            "cumulative_compression_ratio": 2.134335260115607,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _a": "(_rflatten (cons _a (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cdr (fn_7 $0))) _a": "(_rflatten (cons _a (_rsplit _a (_rflatten (cdr (fn_7 $0))))))"
                },
                {
                    "fn_8 (_rflatten (cons _w (cdr (fn_7 $0)))) _a": "(_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cdr (fn_7 $0)))))))"
                },
                {
                    "fn_8 (fn_1 $0 _rempty _w) _a": "(_rflatten (cons _a (_rsplit _a (fn_1 $0 _rempty _w))))"
                },
                {
                    "fn_8 (fn_1 $0 _w _rempty) _a": "(_rflatten (cons _a (_rsplit _a (fn_1 $0 _w _rempty))))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cdr (fn_7 $0))) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (cdr (fn_7 $0))))))"
                },
                {
                    "fn_8 (_rflatten (fn_7 $0)) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (fn_7 $0)))))"
                },
                {
                    "fn_8 (_rflatten (map (lam $0) (fn_7 $0))) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (map (lam $0) (fn_7 $0))))))"
                },
                {
                    "fn_8 (fn_1 $0 _rempty _w) _b": "(_rflatten (cons _b (_rsplit _a (fn_1 $0 _rempty _w))))"
                },
                {
                    "fn_8 (fn_1 $0 _w _rempty) _b": "(_rflatten (cons _b (_rsplit _a (fn_1 $0 _w _rempty))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cdr (fn_7 $0)))) _g": "(_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (fn_7 $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _r (cdr (fn_7 $0)))) _i": "(_rflatten (cons _i (_rsplit _a (_rflatten (cons _r (cdr (fn_7 $0)))))))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cons _o (cdr (fn_7 $0)))) _j": "(_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (fn_7 $0)))))))"
                },
                {
                    "fn_8 (fn_1 $0 _o _rempty) _j": "(_rflatten (cons _j (_rsplit _a (fn_1 $0 _o _rempty))))"
                },
                {
                    "fn_8 (fn_1 $0 _rempty _o) _j": "(_rflatten (cons _j (_rsplit _a (fn_1 $0 _rempty _o))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (fn_7 $0)))))) _q": "(_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (fn_7 $0)))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cdr (fn_7 $0)))) _q": "(_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (cdr (fn_7 $0)))))))"
                },
                {
                    "fn_8 $0 _rempty": "(_rflatten (cons _rempty (_rsplit _a $0)))"
                },
                {
                    "fn_8 (fn_2 $0 _x _s) _rempty": "(_rflatten (cons _rempty (_rsplit _a (fn_2 $0 _x _s))))"
                },
                {
                    "fn_8 $0 _v": "(_rflatten (cons _v (_rsplit _a $0)))"
                },
                {
                    "fn_8 $0 _y": "(_rflatten (cons _y (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch (_rtail (fn_7 #1)) #2) #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rempty $0)) $1)) $0) $1 $2))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 1212,
            "final_cost": 46363,
            "compression_ratio": 1.0261415352759744,
            "cumulative_compression_ratio": 2.190130060608675,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 (fn_2 $0 _f _w) $0 _e": "(if (_rmatch (_rtail (fn_7 $0)) _e) $0 (fn_2 $0 _f _w))"
                },
                {
                    "fn_9 (fn_5 $0 _p) $0 _e": "(if (_rmatch (_rtail (fn_7 $0)) _e) $0 (fn_5 $0 _p))"
                },
                {
                    "fn_9 (fn_5 $0 (_rtail (_rsplit _rdot $0))) $0 _i": "(if (_rmatch (_rtail (fn_7 $0)) _i) $0 (fn_5 $0 (_rtail (_rsplit _rdot $0))))"
                },
                {
                    "fn_9 (fn_5 $0 (_rtail (fn_7 $0))) $0 _i": "(if (_rmatch (_rtail (fn_7 $0)) _i) $0 (fn_5 $0 (_rtail (fn_7 $0))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}