{
    "cmd": "python3 run_iterative_experiment.py --experiment_name test_runs_with_rewrites_check_if_working --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --syMetricMethod Rewrite --verbose",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 61228,
    "final_cost": 27376,
    "compression_ratio": 2.2365575686732906,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _q $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _c) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lam (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _i (_rsplit _a (_rflatten (cons _r (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _p _rempty)) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _n (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _e (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _k (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cdr (_rsplit _rempty (_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot $0) _n) $0 _q)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat (_rconcat _rempty _t) _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t (_rconcat _u _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (_rappend _f (_rsplit _e $0))))))",
        "(lam (_rflatten (_rsplit _q (_rflatten (_rappend _f (_rsplit _e $0))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rsplit _k (_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _e) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _y (_rsplit _a $0))))",
        "(lam (_rflatten (cons _y (_rsplit _r $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (_rsplit _i $0))))",
        "(lam (_rflatten (cons _y (_rsplit _j $0))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _i (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _j (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (_rflatten (_rappend _j (_rsplit _e $0)))))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (_rflatten (_rappend _j (_rsplit _e $0)))))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (_rflatten (_rappend _p (_rsplit _e $0)))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p) (_rsplit _e $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _e (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _e (cons (_rconcat _rempty _a) (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _w) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _c) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rsplit _e $0))))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _e $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _r (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _i (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (_rsplit _a $0))))",
        "(lam (_rflatten (cons _a (_rsplit _r $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _n $0))))))))",
        "(lam (_rflatten (_rsplit _n (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0)))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _j $0))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _v) (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))))"
    ],
    "rewritten": [
        "(lam (fn_7 $0 (lam _k)))",
        "(lam (fn_3 $0 _k _rempty))",
        "(lam (fn_7 (fn_8 $0 _rempty) (lam _k)))",
        "(lam (fn_7 (fn_7 $0 (lam _k)) (lam _k)))",
        "(lam (fn_7 (fn_9 $0 _rempty) (lam _k)))",
        "(lam (fn_2 $0 _rempty _r))",
        "(lam (fn_5 (fn_9 $0 _r) _rempty _r))",
        "(lam (fn_5 (fn_9 $0 _i) _rempty _r))",
        "(lam (fn_5 (fn_9 $0 _n) _rempty _r))",
        "(lam (fn_5 (fn_9 $0 _g) _rempty _r))",
        "(lam (fn_5 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_5 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lam (fn_5 (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lam (fn_9 (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _u))",
        "(lam (fn_4 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lam (fn_4 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lam (fn_3 $0 _j _q))",
        "(lam (fn_7 $0 (lam (_rconcat _q _j))))",
        "(lam (fn_3 (_rflatten (_rsplit _rempty $0)) _j _q))",
        "(lam (fn_7 (fn_7 $0 (lam _j)) (lam (_rconcat _q $0))))",
        "(lam (fn_7 (fn_3 $0 _rempty _j) (lam (_rconcat _q $0))))",
        "(lam (fn_7 $0 (lam (_rconcat $0 _v))))",
        "(lam (fn_7 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _v))))",
        "(lam (fn_7 (fn_8 $0 _rempty) (lam (_rconcat $0 _v))))",
        "(lam (fn_7 (_rflatten (_rsplit _rdot $0)) (lam (_rconcat $0 _v))))",
        "(lam (fn_7 (_rflatten (_rsplit _q $0)) (lam (_rconcat $0 _v))))",
        "(lam (fn_2 $0 _t _m))",
        "(lam (fn_5 (fn_4 $0 _t) _t _m))",
        "(lam (fn_5 (fn_4 $0 _u) _t _m))",
        "(lam (fn_5 (fn_9 $0 _u) _t _m))",
        "(lam (fn_5 (fn_9 $0 _m) _t _m))",
        "(lam (fn_0 $0 _e _e))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (fn_8 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _c $0))))",
        "(lam (fn_7 $0 (lam _j)))",
        "(lam (fn_7 (fn_7 $0 (lam _j)) (lam _j)))",
        "(lam (fn_7 (fn_7 $0 (lam _k)) (lam _j)))",
        "(lam (fn_7 (fn_7 $0 (lam _l)) (lam _j)))",
        "(lam (fn_7 (fn_7 $0 (lam _c)) (lam _j)))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lam (fn_0 $0 _v _c))",
        "(lam (fn_7 (fn_0 $0 _v _c) (lam $0)))",
        "(lam (_rflatten (_rsplit _rempty (fn_0 $0 _v _c))))",
        "(lam (_rflatten (_rsplit _r (fn_0 $0 _v _c))))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _v _c))))",
        "(lam (fn_1 $0 (_rconcat _y _a) _b))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (fn_0 $0 (_rconcat _a _rempty) _q))",
        "(lam (fn_0 $0 (_rconcat _rempty _a) _q))",
        "(lam (fn_8 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _q))",
        "(lam (fn_8 (fn_8 (_rflatten (cdr (_rsplit _rempty $0))) _a) _q))",
        "(lam (fn_0 $0 _a _g))",
        "(lam (fn_0 $0 (_rconcat _a _rempty) _g))",
        "(lam (fn_0 $0 (_rconcat _rempty _a) _g))",
        "(lam (fn_8 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _g))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _r _i))",
        "(lam (fn_0 $0 _r (_rconcat _i _rempty)))",
        "(lam (fn_0 (fn_0 $0 _r _r) _i _rempty))",
        "(lam (fn_8 (_rflatten (cons _r (cdr (_rsplit _rempty $0)))) _i))",
        "(lam (fn_3 $0 _v _r))",
        "(lam (fn_7 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_5 $0 _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_1 $0 _g _p))",
        "(lam (fn_1 $0 _g (_rconcat _p _rempty)))",
        "(lam (fn_1 $0 _g (_rconcat _rempty _p)))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _g _p))))",
        "(lam (_rflatten (_rsplit _n (fn_1 $0 _g _p))))",
        "(lam (fn_4 $0 _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lam (fn_4 (fn_7 $0 (lam $0)) _p))",
        "(lam (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lam (fn_1 $0 (_rconcat _c _g) _o))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 (_rconcat _c _g) _o))))",
        "(lam (fn_1 (fn_4 $0 _rempty) (_rconcat _c _g) _o))",
        "(lam (_rflatten (_rsplit _t (fn_1 $0 (_rconcat _c _g) _o))))",
        "(lam (_rflatten (_rsplit _k (fn_1 $0 (_rconcat _c _g) _o))))",
        "(lam (fn_1 $0 _rempty _m))",
        "(lam (fn_7 $0 (lam (if (_rmatch _m $0) _rempty $0))))",
        "(lam (fn_0 $0 _b _rempty))",
        "(lam (fn_0 $0 _rempty _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_8 (_rflatten (cdr (_rsplit _rempty $0))) _b))",
        "(lam (_rflatten (cdr (_rsplit _rempty (fn_0 $0 _b _r)))))",
        "(lam (fn_1 $0 _q _n))",
        "(lam (fn_7 $0 (lam (if (_rmatch _n $0) _q $0))))",
        "(lam (fn_7 $0 (lam (if (_rmatch (_rnot $0) _n) $0 _q))))",
        "(lam (fn_7 $0 (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0))))",
        "(lam (fn_1 $0 (_rconcat _t _u) _e))",
        "(lam (fn_1 $0 (_rconcat (_rconcat _rempty _t) _u) _e))",
        "(lam (fn_1 $0 (_rconcat _t (_rconcat _u _rempty)) _e))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 (_rconcat _t _u) _e))))",
        "(lam (fn_4 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_4 $0 _f))))",
        "(lam (_rflatten (_rsplit _q (fn_4 $0 _f))))",
        "(lam (fn_0 $0 _c _y))",
        "(lam (fn_7 (fn_0 $0 _c _y) (lam $0)))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _c _y))",
        "(lam (fn_0 (_rflatten (_rsplit _k $0)) _c _y))",
        "(lam (_rflatten (_rsplit _k (fn_0 $0 _c _y))))",
        "(lam (fn_3 $0 _i _n))",
        "(lam (fn_7 $0 (lam (_rconcat _n _i))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lam (fn_3 $0 _t _w))",
        "(lam (fn_7 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_2 $0 _i _y))",
        "(lam (fn_5 (fn_4 $0 _i) _i _y))",
        "(lam (fn_5 (fn_9 $0 _i) _i _y))",
        "(lam (fn_5 (fn_9 $0 _n) _i _y))",
        "(lam (fn_5 (fn_9 $0 _g) _i _y))",
        "(lam (fn_3 $0 _e _u))",
        "(lam (fn_7 (fn_3 $0 _e _u) (lam $0)))",
        "(lam (fn_3 (fn_7 $0 (lam _e)) _e _u))",
        "(lam (fn_3 (fn_7 $0 (lam _u)) _e _u))",
        "(lam (fn_3 (fn_6 $0 _h) _e _u))",
        "(lam (fn_8 $0 _y))",
        "(lam (_rflatten (cons _y (_rsplit _r $0))))",
        "(lam (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (_rsplit _i $0))))",
        "(lam (_rflatten (cons _y (_rsplit _j $0))))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rempty (fn_0 $0 _e _e))))))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rempty (fn_0 $0 _e _e))))))",
        "(lam (fn_1 $0 (_rconcat _e _d) _r))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _i (fn_1 $0 (_rconcat _e _d) _r))))",
        "(lam (_rflatten (_rsplit _j (fn_1 $0 (_rconcat _e _d) _r))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _i _m))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _i _m))",
        "(lam (fn_0 (fn_4 $0 _rempty) _i _m))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _i _m))",
        "(lam (fn_7 $0 (lam (_rconcat _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_8 (fn_0 $0 _o _rempty) _j))",
        "(lam (fn_8 (fn_0 $0 _rempty _o) _j))",
        "(lam (fn_8 (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j))",
        "(lam (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (fn_4 $0 _j)))",
        "(lam (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (fn_4 $0 _j)))",
        "(lam (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (fn_4 $0 _p)))",
        "(lam (fn_4 $0 (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p)))",
        "(lam (fn_4 $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)))",
        "(lam (fn_4 $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)))",
        "(lam (fn_3 $0 _x _h))",
        "(lam (fn_7 (fn_3 $0 _x _h) (lam $0)))",
        "(lam (fn_3 $0 _x (_rconcat _h _rempty)))",
        "(lam (fn_3 (fn_6 $0 _j) _x _h))",
        "(lam (fn_3 (fn_6 $0 _s) _x _h))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lam (fn_0 $0 _b _g))",
        "(lam (fn_7 (fn_0 $0 _b _g) (lam $0)))",
        "(lam (fn_0 (fn_8 $0 _rempty) _b _g))",
        "(lam (fn_4 (fn_0 $0 _b _g) _rempty))",
        "(lam (fn_0 (fn_4 $0 _rempty) _b _g))",
        "(lam (fn_9 $0 _g))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_6 $0 _a))",
        "(lam (fn_6 (fn_7 $0 (lam $0)) _a))",
        "(lam (fn_6 $0 (_rconcat _rempty _a)))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lam (fn_4 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (fn_1 $0 (_rconcat _w _g) _g))",
        "(lam (fn_0 $0 _l _g))",
        "(lam (fn_7 (fn_0 $0 _l _g) (lam $0)))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _l _g))",
        "(lam (fn_0 $0 (_rconcat _g _l) _rempty))",
        "(lam (fn_0 $0 (_rconcat _l _rempty) _g))",
        "(lam (fn_3 $0 _u _j))",
        "(lam (fn_3 (fn_7 $0 (lam _w)) _u _j))",
        "(lam (fn_3 (fn_7 $0 (lam _u)) _u _j))",
        "(lam (fn_3 (fn_7 $0 (lam _c)) _u _j))",
        "(lam (fn_3 (fn_5 $0 _u _u) _u _j))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_0 $0 (_rconcat _a _w) _rempty))",
        "(lam (fn_8 (fn_0 $0 _rempty _w) _a))",
        "(lam (fn_8 (fn_0 $0 _w _rempty) _a))",
        "(lam (fn_8 (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _a))",
        "(lam (fn_2 $0 _r _j))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_2 (_rflatten (_rsplit _rempty $0)) _r _j))",
        "(lam (fn_5 (fn_4 $0 _j) _r _j))",
        "(lam (fn_0 $0 _i _x))",
        "(lam (fn_7 (fn_0 $0 _i _x) (lam $0)))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _i _x))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _x))",
        "(lam (fn_0 (_rflatten (_rsplit _rempty $0)) _i _x))",
        "(lam (fn_5 $0 _rempty _j))",
        "(lam (fn_5 $0 _j _rempty))",
        "(lam (fn_5 (_rflatten (_rsplit _rempty $0)) _rempty _j))",
        "(lam (fn_5 $0 _j _rempty))",
        "(lam (fn_5 $0 _rempty _j))",
        "(lam (fn_2 $0 _i _rempty))",
        "(lam (fn_2 $0 _rempty _i))",
        "(lam (fn_5 (fn_4 $0 _i) _rempty _i))",
        "(lam (fn_5 (fn_4 $0 _i) _i _rempty))",
        "(lam (fn_5 (fn_4 $0 _u) _rempty _i))",
        "(lam (fn_1 $0 (_rconcat _r _q) _r))",
        "(lam (fn_1 $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lam (fn_6 $0 _s))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (fn_6 $0 _s))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))) _s _e))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (fn_4 $0 _u))",
        "(lam (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (fn_1 $0 (_rconcat _r _o) _o))",
        "(lam (_rflatten (_rsplit _r (fn_1 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _i (fn_1 $0 (_rconcat _r _o) _o))))",
        "(lam (_rflatten (_rsplit _t (fn_1 $0 (_rconcat _r _o) _o))))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (fn_8 (fn_7 $0 (lam $0)) _b))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))",
        "(lam (fn_8 (_rflatten (_rsplit _rempty $0)) _b))",
        "(lam (fn_8 $0 _a))",
        "(lam (_rflatten (cons _a (_rsplit _r $0))))",
        "(lam (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _a (_rsplit _b $0))))",
        "(lam (_rflatten (cons _a (_rsplit _c $0))))",
        "(lam (fn_7 $0 (lam _l)))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _rdot) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _a) $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit (_rnot _b) $0))))",
        "(lam (fn_9 $0 _j))",
        "(lam (fn_7 (fn_9 $0 _j) (lam $0)))",
        "(lam (fn_9 (fn_7 $0 (lam $0)) _j))",
        "(lam (fn_9 (_rflatten (_rsplit _n $0)) _j))",
        "(lam (_rflatten (_rsplit _n (fn_9 $0 _j))))",
        "(lam (fn_0 $0 _b _s))",
        "(lam (fn_0 (fn_7 $0 (lam $0)) _b _s))",
        "(lam (fn_0 (fn_4 $0 _rempty) _b _s))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _b _s))",
        "(lam (fn_0 (_rflatten (_rsplit _j $0)) _b _s))",
        "(lam (fn_2 $0 _c _v))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_2 $0 _c (_rconcat _rempty _v)))",
        "(lam (fn_2 $0 _rempty (_rconcat _c _v)))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _k _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _rempty) (lambda _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _r) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _i) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _n) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _g) _rempty _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _n $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _j _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) _j _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _rempty _j) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rdot $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _q $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _t) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _u) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _m) _t _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit (_rnot _w) $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _k $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)) (lambda _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _c)) (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit (_rnot _r) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _v _c))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _a) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cdr (_rsplit _rempty $0))) _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _a) _g))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r) _i _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _r (cdr (_rsplit _rempty $0)))) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _q (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rrevcdr (_rappend _d (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g (_rconcat _p _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g (_rconcat _rempty _p)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))))",
        "(lambda (_rflatten (_rsplit _n (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _p))",
        "(lambda (_rflatten (_rappend _p (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _p (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) (_rconcat _c _g) _o))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (_rflatten (_rsplit _k (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _m $0) _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cdr (_rsplit _rempty $0))) _b))",
        "(lambda (_rflatten (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _r)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _n $0) _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch (_rnot $0) _n) $0 _q))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch _n (_rconcat _rempty $0)) _q $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _t) _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t (_rconcat _u _rempty)) _e))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _f (_rsplit _q $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))))",
        "(lambda (_rflatten (_rsplit _q (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _c _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _k $0)) _c _y))",
        "(lambda (_rflatten (_rsplit _k (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _c _y))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _i _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _n _i))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (cons _w (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _n _i)) (map (lambda (_rconcat _n _i)) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (cons _r (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _i) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _n) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _g) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _e _u) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _e)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _u)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _h) _e _u))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _y))",
        "(lambda (_rflatten (cons _y (_rsplit _r $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _y (_rsplit _j $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _k (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _x))",
        "(lambda (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _x (cdr (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _e _e))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _i (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (_rflatten (_rsplit _j (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rdot $0)) _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit (_rnot _n) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit (_rnot _z) $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rrevcdr (_rappend _q (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _o _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _o) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j))",
        "(lambda (if (_rmatch (_rtail (cdr (_rsplit _rempty $0))) _e) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j)))",
        "(lambda (if (_rmatch _e (_rtail (cdr (_rsplit _rempty $0)))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j)))",
        "(lambda (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x _h) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _x (_rconcat _h _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _j) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _r _r))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _r (cons _r (cdr (_rsplit (_rnot _w) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _rempty) _b _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _g) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _b _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _g))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rappend _g (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 (_rconcat _rempty _a)))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _r $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _w _g) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _l _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _g _l) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _l _rempty) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) $0 _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _w)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _u)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _c)) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _u _u) _u _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _a _w) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _rempty _w) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _w _rempty) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _r _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) (_rflatten (_rsplit _rempty $0)) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _j) _r _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _i _x) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 (_rconcat _rempty _i) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rempty $0)) _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rsplit _rempty $0)) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _i) _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u) _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1)))))))) $0 _s))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))) _s _e))",
        "(lambda (_rflatten (cons _e (cdr (_rsplit _rempty (_rflatten (cons _s (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u))",
        "(lambda (_rflatten (_rappend _u (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))",
        "(lambda (_rflatten (_rsplit _r (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _i (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _o) _o))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _b))",
        "(lambda (_rflatten (cons _b (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (_rsplit _rempty $0)) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (_rsplit _r $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _a (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _rdot) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _a) $0))))",
        "(lambda (_rflatten (map (lambda _l) (_rsplit (_rnot _b) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _j) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) (_rflatten (_rsplit _n $0)) _j))",
        "(lambda (_rflatten (_rsplit _n (#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1))))))) $0 _j))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _rempty) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _rdot $0)) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2)))))))) (_rflatten (_rsplit _j $0)) _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _c _v))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _c (_rconcat _rempty _v)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2)))))))))))))) $0 _rempty (_rconcat _c _v)))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rempty $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 8888,
            "final_cost": 52340,
            "compression_ratio": 1.1698127627053878,
            "cumulative_compression_ratio": 1.1698127627053878,
            "num_uses": 64,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _r (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat _i _rempty) (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _b": "(_rflatten (cons _b (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _v _c": "(_rflatten (cons _c (cons _v (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _e": "(_rflatten (cons _e (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))) _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rempty (_rflatten (cons _e (cdr (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _l _rempty) _g": "(_rflatten (cons _g (cons (_rconcat _l _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _a) _g": "(_rflatten (cons _g (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _g": "(_rflatten (cons _g (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _e $0))) _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rempty (_rsplit _a $0))) _b _g": "(_rflatten (cons _g (cons _b (cdr (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0))))))))"
                },
                {
                    "fn_0 $0 _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _l _g": "(_rflatten (cons _g (cons _l (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _e $0))) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _rempty _o": "(_rflatten (cons _o (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _rempty) _q": "(_rflatten (cons _q (cons (_rconcat _a _rempty) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _a) _q": "(_rflatten (cons _q (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _r": "(_rflatten (cons _r (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _g _l) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _g _l) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _rempty": "(_rflatten (cons _rempty (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))) _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (_rsplit _rempty (_rflatten (cons _r (cons _r (cdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_0 $0 _o _rempty": "(_rflatten (cons _rempty (cons _o (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _w _rempty": "(_rflatten (cons _rempty (cons _w (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _rempty (_rsplit _e $0))) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _j $0)) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _j $0)))))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _b _s": "(_rflatten (cons _s (cons _b (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _rempty _w": "(_rflatten (cons _w (cons _rempty (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _x": "(_rflatten (cons _x (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rempty $0)) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _x": "(_rflatten (cons _x (cons _i (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _k $0)) _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (_rsplit _k $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _c _y": "(_rflatten (cons _y (cons _c (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 7080,
            "final_cost": 45260,
            "compression_ratio": 1.1564295183384887,
            "cumulative_compression_ratio": 1.3528060097216086,
            "num_uses": 30,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _g (_rconcat _p _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _p _rempty)) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _g (_rconcat _rempty _p)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _p)) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _y _a) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _y _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat (_rconcat _rempty _t) _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat (_rconcat _rempty _t) _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _t (_rconcat _u _rempty)) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t (_rconcat _u _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _t _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _w _g) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _e $0))) (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _e $0))))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _o) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _r _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 _g _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _r (_rconcat _q _rempty)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_1 $0 (_rconcat _r _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty #0)))))))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $2))))))))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 5757,
            "final_cost": 39503,
            "compression_ratio": 1.1457357669037795,
            "cumulative_compression_ratio": 1.5499582310204287,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _rempty (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _c (_rconcat _rempty _v)": "(_rflatten (_rappend (_rconcat _rempty _v) (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))))))))"
                },
                {
                    "fn_2 $0 _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _i _rempty": "(_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _c _v": "(_rflatten (_rappend _v (_rappend _c (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rdot $2))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 3038,
            "final_cost": 36465,
            "compression_ratio": 1.083312765665707,
            "cumulative_compression_ratio": 1.6790895379130673,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _x (_rconcat _h _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0)))))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 $0 _rempty _j": "(_rflatten (map (lam (_rconcat _j _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _c) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _c) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _u) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _w) (_rsplit _rempty $0))) _u _j": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rdot (_rflatten (map (lam _w) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _i _n": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 #0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _k _rempty": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0)))))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _e) (_rsplit _rempty $0))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _e) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _u) (_rsplit _rempty $0))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot (_rflatten (map (lam _u) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _e #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 2121,
            "final_cost": 34344,
            "compression_ratio": 1.0617575122292104,
            "cumulative_compression_ratio": 1.7827859305846727,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _e $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rdot $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p)": "(_rflatten (_rappend (if (_rmatch (_rtail (_rsplit _rempty $0)) _e) _rempty _p) (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _d": "(_rflatten (_rappend _d (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _f": "(_rflatten (_rappend _f (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _i": "(_rflatten (_rappend _i (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _j": "(_rflatten (_rappend _j (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _p": "(_rflatten (_rappend _p (_rsplit _e $0)))"
                },
                {
                    "fn_4 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _p": "(_rflatten (_rappend _p (_rsplit _e (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_4 $0 _q": "(_rflatten (_rappend _q (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _e $0)))"
                },
                {
                    "fn_4 (fn_0 $0 _b _g) _rempty": "(_rflatten (_rappend _rempty (_rsplit _e (fn_0 $0 _b _g))))"
                },
                {
                    "fn_4 $0 _t": "(_rflatten (_rappend _t (_rsplit _e $0)))"
                },
                {
                    "fn_4 $0 _u": "(_rflatten (_rappend _u (_rsplit _e $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2)))))))))",
            "arity": 3,
            "name": "fn_5",
            "utility": 1818,
            "final_cost": 32526,
            "compression_ratio": 1.0558937465412286,
            "cumulative_compression_ratio": 1.8824325155260406,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 (fn_4 $0 _i) _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _i)))))))"
                },
                {
                    "fn_5 (fn_4 $0 _u) _rempty _i": "(_rflatten (_rappend _i (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _u)))))))"
                },
                {
                    "fn_5 (fn_4 $0 _j) _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _j)))))))"
                },
                {
                    "fn_5 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rempty $0)) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (fn_4 $0 _t) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _t)))))))"
                },
                {
                    "fn_5 (fn_4 $0 _u) _t _m": "(_rflatten (_rappend _m (_rappend _t (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _u)))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (fn_4 $0 _i) _i _rempty": "(_rflatten (_rappend _rempty (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _i)))))))"
                },
                {
                    "fn_5 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0)))) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rrevcdr (_rsplit _rempty $0))))))))))"
                },
                {
                    "fn_5 $0 _u _u": "(_rflatten (_rappend _u (_rappend _u (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_5 (fn_4 $0 _i) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rempty (fn_4 $0 _i)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons _e (cons #1 (cdr (cdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons _e (cons $0 (cdr (cdr (_rsplit _rempty $1))))))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1414,
            "final_cost": 31112,
            "compression_ratio": 1.0454487014656724,
            "cumulative_compression_ratio": 1.9679866289534584,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (_rconcat _rempty _a)": "(_rflatten (cons _e (cons (_rconcat _rempty _a) (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _a": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_6 $0 _h": "(_rflatten (cons _e (cons _h (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _j": "(_rflatten (cons _e (cons _j (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 $0 _s": "(_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1312,
            "final_cost": 29800,
            "compression_ratio": 1.0440268456375839,
            "cumulative_compression_ratio": 2.0546308724832216,
            "num_uses": 55,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_7 (fn_0 $0 _b _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _b _g))))"
                },
                {
                    "fn_7 (fn_0 $0 _c _y) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _c _y))))"
                },
                {
                    "fn_7 (fn_0 $0 _i _x) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _i _x))))"
                },
                {
                    "fn_7 (fn_0 $0 _l _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _l _g))))"
                },
                {
                    "fn_7 (fn_0 $0 _v _c) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _v _c))))"
                },
                {
                    "fn_7 (fn_3 $0 _e _u) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_3 $0 _e _u))))"
                },
                {
                    "fn_7 (fn_3 $0 _x _h) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_3 $0 _x _h))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _q $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _q $0)))))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _rdot $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_7 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_7 (_rflatten (cons _rempty (_rsplit _a $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (fn_3 $0 _rempty _j) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (fn_3 $0 _rempty _j))))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (if (_rmatch (_rnot $0) _n) $0 _q))": "(_rflatten (map (lam (if (_rmatch (_rnot $0) _n) $0 _q)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (if (_rmatch _m $0) _rempty $0))": "(_rflatten (map (lam (if (_rmatch _m $0) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (if (_rmatch _n $0) _q $0))": "(_rflatten (map (lam (if (_rmatch _n $0) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0))": "(_rflatten (map (lam (if (_rmatch _n (_rconcat _rempty $0)) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam _c)": "(_rflatten (map (lam _c) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (map (lam _c) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _c) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _l) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0))))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_7 (_rflatten (cons _rempty (_rsplit _a $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (cons _rempty (_rsplit _a $0))))))"
                },
                {
                    "fn_7 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_7 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam _u)": "(_rflatten (map (lam _u) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 (lam _w)": "(_rflatten (map (lam _w) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 28588,
            "compression_ratio": 1.042395410661816,
            "cumulative_compression_ratio": 2.141737792080593,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _a": "(_rflatten (cons _a (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cdr (_rsplit _rempty $0))) _a": "(_rflatten (cons _a (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_8 (_rflatten (cons _w (cdr (_rsplit _rempty $0)))) _a": "(_rflatten (cons _a (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _rempty _w) _a": "(_rflatten (cons _a (_rsplit _a (fn_0 $0 _rempty _w))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _rempty) _a": "(_rflatten (cons _a (_rsplit _a (fn_0 $0 _w _rempty))))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (_rsplit _rempty $0)) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_8 (_rflatten (cdr (_rsplit _rempty $0))) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_8 (fn_7 $0 (lam $0)) _b": "(_rflatten (cons _b (_rsplit _a (fn_7 $0 (lam $0)))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _g": "(_rflatten (cons _g (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _r (cdr (_rsplit _rempty $0)))) _i": "(_rflatten (cons _i (_rsplit _a (_rflatten (cons _r (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cons _o (cdr (_rsplit _rempty $0)))) _j": "(_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _o _rempty) _j": "(_rflatten (cons _j (_rsplit _a (fn_0 $0 _o _rempty))))"
                },
                {
                    "fn_8 (fn_0 $0 _rempty _o) _j": "(_rflatten (cons _j (_rsplit _a (fn_0 $0 _rempty _o))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0)))))) _q": "(_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (_rsplit _a (_rflatten (cdr (_rsplit _rempty $0)))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _q": "(_rflatten (cons _q (_rsplit _a (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_8 $0 _rempty": "(_rflatten (cons _rempty (_rsplit _a $0)))"
                },
                {
                    "fn_8 $0 _y": "(_rflatten (cons _y (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rappend _o (_rrevcdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rappend _o (_rrevcdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1212,
            "final_cost": 27376,
            "compression_ratio": 1.0442723553477498,
            "cumulative_compression_ratio": 2.2365575686732906,
            "num_uses": 17,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _g": "(_rflatten (_rappend _g (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _i": "(_rflatten (_rappend _i (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 (_rflatten (_rsplit _n $0)) _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _n $0)))))))"
                },
                {
                    "fn_9 (fn_7 $0 (lam $0)) _j": "(_rflatten (_rappend _j (_rappend _o (_rrevcdr (_rsplit _rempty (fn_7 $0 (lam $0)))))))"
                },
                {
                    "fn_9 $0 _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _n": "(_rflatten (_rappend _n (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _r": "(_rflatten (_rappend _r (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _rempty": "(_rflatten (_rappend _rempty (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 $0 _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_9 (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}