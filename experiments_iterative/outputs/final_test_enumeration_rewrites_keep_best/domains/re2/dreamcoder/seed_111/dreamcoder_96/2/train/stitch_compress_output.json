{
    "cmd": "python run_iterative_experiment.py --experiment_name final_test_enumeration_rewrites_keep_best --experiment_type dreamcoder --domain re2 --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --recognition_train_steps 10000 --random_seeds 111 --verbose --syMetricMethod RewriteEnumeration",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 57894,
    "final_cost": 27982,
    "compression_ratio": 2.0689729111571724,
    "num_abstractions": 10,
    "original": [
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _b (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _c (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _d (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _e (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _q _j))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q (_rconcat _rempty _j))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot (car (map (lam $1) (_rsplit _rdot $0)))))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _a $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _b $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _c $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _d $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _e $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _v $0))))",
        "(lam (_rflatten (cons _j (_rsplit _d $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _m $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _rempty (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons _w (cons _w (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons _e (cons _w (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _v (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _d (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _w (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _g (_rflatten (map (lam _p) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cons (_rconcat _r _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (cons _e (cons _r (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _a (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _b (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _f (_rsplit _v $0))))",
        "(lam (_rflatten (cons _f (_rsplit _d $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _t $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _r) (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cons (_rconcat _rempty _w) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _b (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _v $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _d $0)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _w (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _v (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _d (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _a (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _g (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _k _rempty) (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _m) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _y) $0))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _rdot (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _j (_rsplit _v (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _j (_rsplit _d (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _g _i))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g (_rconcat _rempty _i))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _v (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rsplit _v $0))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _g $0) _c $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _g $0) _c $0)) (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _a _v) $0 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _b _v) $0 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _c _v) $0 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _d _v) $0 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (if (_rmatch _f _v) $0 (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot (_rflatten (cons _w (cons _w (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _rdot (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _v (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _v $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _a $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _d $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _a $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (if (_rmatch _rdot $0) _l $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _rdot $0) (_rconcat _l $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend (_rconcat _rempty _r) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend (_rconcat _r _rempty) (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h (_rconcat _rempty _r))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _s (_rsplit _w (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _w $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _w $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _w $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _o (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r _o) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _d (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _v (_rsplit _v $0))))",
        "(lam (_rflatten (cons _v (_rsplit _d $0))))",
        "(lam (_rflatten (cons _v (_rsplit _o $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _v $0))))",
        "(lam (_rflatten (cons _b (_rsplit _d $0))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))"
    ],
    "rewritten": [
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_3 $0 _rempty _v)))",
        "(lam (fn_7 (fn_3 $0 _rempty _v) $0))",
        "(lam (fn_0 $0 _a _n))",
        "(lam (fn_6 $0 (_rconcat _n _a)))",
        "(lam (_rflatten (cons _n (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_9 _k _rempty $0))",
        "(lam (fn_9 _rempty _k $0))",
        "(lam (fn_5 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r))",
        "(lam (_rflatten (_rappend _r (_rsplit _b (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _c (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _d (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rsplit _e (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (fn_3 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_5 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (fn_9 _j _q $0))",
        "(lam (fn_9 _j _q $0))",
        "(lam (fn_9 (_rconcat _q _j) _rempty $0))",
        "(lam (fn_9 (_rconcat _rempty _j) _q $0))",
        "(lam (fn_9 _j _q (fn_4 $0 _j)))",
        "(lam (fn_1 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v))))",
        "(lam (car (map (lam (fn_1 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (car (map (lam (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lam (fn_7 (fn_5 $0 _o) $0))",
        "(lam (fn_7 (_rflatten (_rappend _o (_rsplit _b $0))) $0))",
        "(lam (fn_7 (_rflatten (_rappend _o (_rsplit _c $0))) $0))",
        "(lam (fn_7 (_rflatten (_rappend _o (_rsplit _d $0))) $0))",
        "(lam (fn_7 (_rflatten (_rappend _o (_rsplit _e $0))) $0))",
        "(lam (fn_4 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_8 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _d $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _k $0))))",
        "(lam (_rflatten (cons _j (_rsplit _m $0))))",
        "(lam (fn_9 _s _h $0))",
        "(lam (fn_9 _s _h $0))",
        "(lam (fn_9 _s _h $0))",
        "(lam (fn_1 (fn_9 _s _h $0) (lam $0)))",
        "(lam (_rflatten (cons _rempty (_rsplit _rdot (fn_9 _s _h $0)))))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (fn_6 $0 (_rconcat _w _i)))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_2 _j _r $0))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_6 $0 (_rconcat _y _w)))",
        "(lam (fn_6 (fn_0 $0 _w _w) _y))",
        "(lam (fn_6 (fn_0 $0 _w _b) _y))",
        "(lam (fn_6 (fn_0 $0 _w _e) _y))",
        "(lam (fn_2 (_rconcat _d _q) _t $0))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (fn_6 $0 (_rconcat _q _a)))",
        "(lam (fn_6 (fn_0 $0 _a _v) _q))",
        "(lam (fn_6 (fn_0 $0 _a _d) _q))",
        "(lam (fn_6 (fn_0 $0 _a _w) _q))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (fn_9 _p _rempty $0))",
        "(lam (fn_9 _rempty _p $0))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (_rflatten (_rsplit _g (fn_1 $0 (lam _p)))))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_6 $0 (_rconcat _i _r)))",
        "(lam (fn_0 $0 (_rconcat _r _rempty) _i))",
        "(lam (_rflatten (_rsplit _rdot (fn_6 $0 (_rconcat _i _r)))))",
        "(lam (fn_6 (fn_0 $0 _r _e) _i))",
        "(lam (fn_9 _v _r $0))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_5 (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _t))",
        "(lam (_rflatten (_rappend _t (_rsplit _b (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _d (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _e (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _d $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _t $0))))",
        "(lam (fn_9 _n _f $0))",
        "(lam (fn_9 _n _f $0))",
        "(lam (fn_1 (fn_9 _n _f $0) (lam $0)))",
        "(lam (fn_2 _l _o (fn_9 _n _f $0)))",
        "(lam (fn_9 _n _f (fn_2 _l _o $0)))",
        "(lam (fn_6 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_6 $0 (_rconcat _r _m)))",
        "(lam (fn_0 $0 (_rconcat _r _m) _rempty))",
        "(lam (fn_0 $0 _m (_rconcat _rempty _r)))",
        "(lam (fn_0 $0 _rempty (_rconcat _r _m)))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_6 $0 (_rconcat _b _w)))",
        "(lam (fn_0 $0 (_rconcat _b _w) _rempty))",
        "(lam (fn_0 $0 (_rconcat _rempty _w) _b))",
        "(lam (fn_0 $0 (_rconcat _w _rempty) _b))",
        "(lam (fn_4 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (fn_4 $0 _a)))))))",
        "(lam (fn_6 $0 _f))",
        "(lam (fn_6 (_rflatten (_rsplit _rdot $0)) _f))",
        "(lam (fn_6 (_rflatten (_rsplit _v $0)) _f))",
        "(lam (fn_6 (_rflatten (_rsplit _d $0)) _f))",
        "(lam (fn_6 (_rflatten (_rsplit _a $0)) _f))",
        "(lam (fn_9 _t _w $0))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _w (fn_4 $0 _i)))))",
        "(lam (_rflatten (_rappend _y (_rsplit _rdot (fn_4 $0 _i)))))",
        "(lam (_rflatten (_rappend _y (_rsplit _v (fn_4 $0 _i)))))",
        "(lam (_rflatten (_rappend _y (_rsplit _d (fn_4 $0 _i)))))",
        "(lam (fn_5 (fn_4 $0 _i) _y))",
        "(lam (fn_9 _e _u $0))",
        "(lam (_rflatten (_rsplit _rdot (fn_9 _e _u $0))))",
        "(lam (_rflatten (_rsplit _d (fn_9 _e _u $0))))",
        "(lam (_rflatten (_rsplit _a (fn_9 _e _u $0))))",
        "(lam (_rflatten (_rsplit _g (fn_9 _e _u $0))))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _e _k))))",
        "(lam (_rflatten (_rsplit _v (fn_0 $0 _e _k))))",
        "(lam (fn_0 $0 _e (_rconcat _k _rempty)))",
        "(lam (fn_0 $0 _e (_rconcat _rempty _k)))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_6 $0 (_rconcat _x _e)))",
        "(lam (_rflatten (cons _x (_rsplit _rdot (fn_6 $0 _e)))))",
        "(lam (_rflatten (_rsplit _rdot (fn_6 $0 (_rconcat _x _e)))))",
        "(lam (_rflatten (_rsplit _v (fn_6 $0 (_rconcat _x _e)))))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _i _m))))",
        "(lam (_rflatten (_rsplit _d (fn_0 $0 _i _m))))",
        "(lam (_rflatten (_rsplit _a (fn_0 $0 _i _m))))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _m)))",
        "(lam (fn_1 $0 (lam (_rconcat _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit (_rnot _y) $0))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_6 $0 (_rconcat _j _o)))",
        "(lam (_rflatten (cons _j (_rsplit _rdot (fn_6 $0 _o)))))",
        "(lam (fn_8 (fn_6 $0 _o) _j))",
        "(lam (_rflatten (cons _j (_rsplit _d (fn_6 $0 _o)))))",
        "(lam (fn_9 _i _g $0))",
        "(lam (fn_9 (_rconcat _g _i) _rempty $0))",
        "(lam (fn_9 (_rconcat _rempty _i) _g $0))",
        "(lam (fn_9 _rempty (_rconcat _g _i) $0))",
        "(lam (fn_9 _i _g $0))",
        "(lam (fn_4 $0 (_rconcat _o _m)))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _v (fn_4 $0 _o)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _rempty (fn_4 $0 _o)))))",
        "(lam (fn_9 _x _h $0))",
        "(lam (fn_9 _x _h (_rflatten (_rsplit _v $0))))",
        "(lam (fn_9 _x (_rconcat _rempty _h) $0))",
        "(lam (fn_9 _x _h $0))",
        "(lam (fn_9 _x _h (fn_4 $0 _j)))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_6 $0 (_rconcat _r _r)))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _r _r))))",
        "(lam (_rflatten (_rsplit _d (fn_0 $0 _r _r))))",
        "(lam (_rflatten (_rsplit _a (fn_0 $0 _r _r))))",
        "(lam (fn_2 _c _g $0))",
        "(lam (_rflatten (_rsplit _rdot (fn_2 _c _g $0))))",
        "(lam (if (_rmatch _a _v) $0 (fn_6 $0 _i)))",
        "(lam (if (_rmatch _b _v) $0 (fn_6 $0 _i)))",
        "(lam (if (_rmatch _c _v) $0 (fn_6 $0 _i)))",
        "(lam (if (_rmatch _d _v) $0 (fn_6 $0 _i)))",
        "(lam (if (_rmatch _f _v) $0 (fn_6 $0 _i)))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_6 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) _e))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (fn_6 $0 _e))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (fn_5 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_6 $0 (_rconcat _a _w)))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 (fn_0 $0 _w _w) _a _rempty))",
        "(lam (fn_0 (fn_0 $0 _w _b) _a _rempty))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 (_rconcat (car (_rsplit _rdot $0)) _o) _rempty))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_6 $0 (_rconcat _q _i)))",
        "(lam (fn_0 $0 _i (_rconcat _q _rempty)))",
        "(lam (fn_0 (fn_6 $0 _j) _i _q))",
        "(lam (fn_0 (fn_6 $0 _b) _i _q))",
        "(lam (fn_3 $0 _j _rempty))",
        "(lam (fn_3 $0 _rempty _j))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _rdot (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _v (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (fn_4 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_2 _k _t $0))",
        "(lam (fn_2 _k _t (_rflatten (_rsplit _rdot $0))))",
        "(lam (fn_2 _k _t (_rflatten (_rsplit _v $0))))",
        "(lam (fn_2 _k _t (_rflatten (_rsplit _d $0))))",
        "(lam (fn_2 _k _t (_rflatten (_rsplit _a $0))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (fn_6 $0 (_rconcat _e _s)))",
        "(lam (fn_6 (fn_0 $0 _s _e) _e))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_2 _v _i $0))",
        "(lam (fn_2 _v _i (_rflatten (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_2 _v _i $0))))",
        "(lam (fn_2 _v _i (_rflatten (_rsplit _d $0))))",
        "(lam (fn_2 _v _i (_rflatten (_rsplit _a $0))))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (_rconcat (if (_rmatch _rdot $0) _l $0) $0))))",
        "(lam (fn_1 $0 (lam (if (_rmatch _rdot $0) (_rconcat _l $0) $0))))",
        "(lam (fn_3 $0 _r _q))",
        "(lam (fn_3 $0 (_rconcat _rempty _r) _q))",
        "(lam (fn_3 $0 (_rconcat _r _rempty) _q))",
        "(lam (fn_4 (fn_3 $0 _r _a) _q))",
        "(lam (fn_4 (fn_3 $0 _r _q) _q))",
        "(lam (fn_3 $0 _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (fn_4 (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lam (fn_4 (_rflatten (_rappend _d (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lam (fn_4 (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lam (fn_9 _r _h $0))",
        "(lam (fn_9 _r _h $0))",
        "(lam (fn_9 (_rconcat _rempty _r) _h $0))",
        "(lam (fn_9 _r (_rconcat _h _rempty) $0))",
        "(lam (fn_9 _r (_rconcat _rempty _h) $0))",
        "(lam (fn_5 $0 _k))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (fn_4 $0 (_rconcat _x _s)))",
        "(lam (_rflatten (_rappend _s (_rsplit _w (fn_4 $0 _x)))))",
        "(lam (fn_3 (_rflatten (_rappend _d (_rsplit _w $0))) _x _s))",
        "(lam (fn_3 (_rflatten (_rappend _r (_rsplit _w $0))) _x _s))",
        "(lam (fn_3 (_rflatten (_rappend _u (_rsplit _w $0))) _x _s))",
        "(lam (fn_5 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (fn_6 $0 _a))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (_rflatten (_rsplit _v (fn_6 $0 _a))))",
        "(lam (_rflatten (_rsplit _d (fn_6 $0 _a))))",
        "(lam (_rflatten (_rsplit _o (fn_6 $0 _a))))",
        "(lam (fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))))",
        "(lam (fn_2 (_rconcat _r _o) _o $0))",
        "(lam (_rflatten (_rsplit _rdot (fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lam (_rflatten (_rsplit _d (fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lam (_rflatten (_rsplit _a (fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _d $0))))",
        "(lam (_rflatten (cons _v (_rsplit _o $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (fn_2 _l _o $0))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _d $0))))",
        "(lam (_rflatten (cons _b (_rsplit _t $0))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _v)))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _v) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (_rflatten (cons _n (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _k _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty _k $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r))",
        "(lambda (_rflatten (_rappend _r (_rsplit _b (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _r (_rsplit _c (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _r (_rsplit _d (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _r (_rsplit _e (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _q _j) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _j) _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (car (map (lambda $1) (_rsplit _rdot $0))) (lambda (_rconcat $0 _v))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (car (map (lambda (_rsplit _rdot $1)) (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _o) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (_rflatten (_rappend _o (_rsplit _b $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (_rflatten (_rappend _o (_rsplit _c $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (_rflatten (_rappend _o (_rsplit _d $0))) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1))) (_rflatten (_rappend _o (_rsplit _e $0))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _d $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _k $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _m $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0) (lambda $0)))",
        "(lambda (_rflatten (cons _rempty (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _w _i)))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _rempty (cons _w (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _y _w)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _w) _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b) _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _e) _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _d _q) _t $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _v) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _d) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _w) _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty _p $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))",
        "(lambda (_rflatten (_rsplit _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _rempty) _i))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _r)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _e) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _v _r $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _t))",
        "(lambda (_rflatten (_rappend _t (_rsplit _b (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _d (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rappend _t (_rsplit _e (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _d $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _m) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m (_rconcat _rempty _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _w) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _w) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _rempty) _b))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _a)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _v $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _d $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _a $0)) _f))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _y (_rsplit _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))",
        "(lambda (_rflatten (_rappend _y (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))",
        "(lambda (_rflatten (_rappend _y (_rsplit _v (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))",
        "(lambda (_rflatten (_rappend _y (_rsplit _d (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))))",
        "(lambda (_rflatten (_rsplit _g (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _k _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _k)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _e)))",
        "(lambda (_rflatten (cons _x (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _e)))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _e)))))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _e)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat _q $0)) (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit (_rnot _y) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _j _o)))",
        "(lambda (_rflatten (cons _j (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _o)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _o) _j))",
        "(lambda (_rflatten (cons _j (_rsplit _d (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _o)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _g _i) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _i) _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty (_rconcat _g _i) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _m (_rsplit _v (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o)))))",
        "(lambda (_rflatten (_rappend _m (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (_rflatten (_rsplit _v $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x (_rconcat _rempty _h) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _r)))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _c _g $0))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _c _g $0))))",
        "(lambda (if (_rmatch _a _v) $0 (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (if (_rmatch _b _v) $0 (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (if (_rmatch _c _v) $0 (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (if (_rmatch _d _v) $0 (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (if (_rmatch _f _v) $0 (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i)))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) _e))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _e))))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (map (lambda $0) (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _q (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _w)))",
        "(lambda (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _w) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat (car (_rsplit _rdot $0)) _o) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _q _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _j) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _rempty _j))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _j (_rsplit _rdot (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (_rflatten (_rappend _j (_rsplit _v (_rflatten (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (_rflatten (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (_rflatten (_rsplit _v $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (_rflatten (_rsplit _d $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (_rflatten (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _e _s)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e) _e))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i (_rflatten (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i (_rflatten (_rsplit _d $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i (_rflatten (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat (if (_rmatch _rdot $0) _l $0) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _rdot $0) (_rconcat _l $0) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 (_rconcat _rempty _r) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 (_rconcat _r _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _a) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _r _q) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) $0 _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend _d (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _r) _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r (_rconcat _h _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3)))))) _r (_rconcat _rempty _h) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _k))",
        "(lambda (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _s)))",
        "(lambda (_rflatten (_rappend _s (_rsplit _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _d (_rsplit _w $0))) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _r (_rsplit _w $0))) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2))))))))) (_rflatten (_rappend _u (_rsplit _w $0))) _x _s))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _d $0))))",
        "(lambda (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _rempty))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))))",
        "(lambda (_rflatten (_rsplit _o (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _r _o) _o $0))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lambda (_rflatten (_rsplit _d (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0))))))",
        "(lambda (_rflatten (cons _v (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _d $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _o $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o $0))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _d $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _t $0))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 8383,
            "final_cost": 49511,
            "compression_ratio": 1.1693159095958474,
            "cumulative_compression_ratio": 1.1693159095958474,
            "num_uses": 54,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _e (_rconcat _k _rempty)": "(_rflatten (cons (_rconcat _k _rempty) (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _q _rempty)": "(_rflatten (cons (_rconcat _q _rempty) (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e (_rconcat _rempty _k)": "(_rflatten (cons (_rconcat _rempty _k) (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _m)": "(_rflatten (cons (_rconcat _rempty _m) (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _m (_rconcat _rempty _r)": "(_rflatten (cons (_rconcat _rempty _r) (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _w) _b": "(_rflatten (cons _b (cons (_rconcat _rempty _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _rempty) _b": "(_rflatten (cons _b (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _d": "(_rflatten (cons _d (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _e": "(_rflatten (cons _e (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _e": "(_rflatten (cons _e (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _rempty) _i": "(_rflatten (cons _i (cons (_rconcat _r _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons _r (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat (car (_rsplit _rdot $0)) _o) _rempty": "(_rflatten (cons _rempty (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _w) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _m) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))) _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _w (cons _w (cdr (_rsplit _rdot $0))))) _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot (_rflatten (cons _w (cons _w (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_0 $0 _a _v": "(_rflatten (cons _v (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _w": "(_rflatten (cons _w (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _w": "(_rflatten (cons _w (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 6363,
            "final_cost": 43148,
            "compression_ratio": 1.1474691758598312,
            "cumulative_compression_ratio": 1.341753963103736,
            "num_uses": 77,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))"
                },
                {
                    "fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot (car (map (lam $1) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _g _i) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _h _rempty) _r))": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _r))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _x))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat (if (_rmatch _rdot $0) _l $0) $0))": "(_rflatten (map (lam (_rconcat (if (_rmatch _rdot $0) _l $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _g (_rconcat _rempty _i)))": "(_rflatten (map (lam (_rconcat _g (_rconcat _rempty _i))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h (_rconcat _rempty _r)))": "(_rflatten (map (lam (_rconcat _h (_rconcat _rempty _r))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _v $0)) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot (_rflatten (_rsplit _v $0)))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _k _rempty))": "(_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _p _rempty))": "(_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q (_rconcat _rempty _j)))": "(_rflatten (map (lam (_rconcat _q (_rconcat _rempty _j))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty (_rconcat _g _i)))": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _g _i))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty (_rconcat _q _j)))": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _q _j))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty _k))": "(_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _rempty _p))": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _g $0) _c $0))": "(_rflatten (map (lam (if (_rmatch _g $0) _c $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _a $0)) (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _a $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0))": "(_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r _o) $0))": "(_rflatten (map (lam (if (_rmatch _o $0) (_rconcat _r _o) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))) (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _r $0) _j $0))": "(_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _rdot $0) (_rconcat _l $0) $0))": "(_rflatten (map (lam (if (_rmatch _rdot $0) (_rconcat _l $0) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) (_rconcat _d _q) $0))": "(_rflatten (map (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _a $0)) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _a $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _d $0)) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _d $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _v $0)) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _v $0)))))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 2835,
            "final_cost": 40313,
            "compression_ratio": 1.0703247091508943,
            "cumulative_compression_ratio": 1.436112420311066,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 _c _g $0": "(fn_1 $0 (lam (if (_rmatch _g $0) _c $0)))"
                },
                {
                    "fn_2 _v _i $0": "(fn_1 $0 (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_2 (_rconcat _r #0) _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r $0) $0)))"
                },
                {
                    "fn_2 (_rconcat _r _o) _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) (_rconcat _r _o) $0)))"
                },
                {
                    "fn_2 _l _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) _l $0)))"
                },
                {
                    "fn_2 _j _r $0": "(fn_1 $0 (lam (if (_rmatch _r $0) _j $0)))"
                },
                {
                    "fn_2 (_rconcat _l #0) _rdot $0": "(fn_1 $0 (lam (if (_rmatch _rdot $0) (_rconcat _l $0) $0)))"
                },
                {
                    "fn_2 (_rconcat _d _q) _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) (_rconcat _d _q) $0)))"
                },
                {
                    "fn_2 _k _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_2 _v _i (_rflatten (_rsplit _a $0))": "(fn_1 (_rflatten (_rsplit _a $0)) (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_2 _k _t (_rflatten (_rsplit _a $0))": "(fn_1 (_rflatten (_rsplit _a $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_2 _v _i (_rflatten (_rsplit _d $0))": "(fn_1 (_rflatten (_rsplit _d $0)) (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_2 _k _t (_rflatten (_rsplit _d $0))": "(fn_1 (_rflatten (_rsplit _d $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_2 _v _i (_rflatten (_rsplit _rdot $0))": "(fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_2 _k _t (_rflatten (_rsplit _rdot $0))": "(fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_2 _k _t (_rflatten (_rsplit _v $0))": "(fn_1 (_rflatten (_rsplit _v $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_2 _l _o (fn_1 $0 (lam (_rconcat _f _n)))": "(fn_1 (fn_1 $0 (lam (_rconcat _f _n))) (lam (if (_rmatch _o $0) _l $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rempty $2)))))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 2828,
            "final_cost": 37485,
            "compression_ratio": 1.0754435107376283,
            "cumulative_compression_ratio": 1.5444577831132453,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _r _a": "(_rflatten (_rappend _a (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (_rconcat _r _rempty) _q": "(_rflatten (_rappend _q (_rappend (_rconcat _r _rempty) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (_rconcat _rempty _r) _q": "(_rflatten (_rappend _q (_rappend (_rconcat _rempty _r) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _d (_rsplit _w $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _w $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _r (_rsplit _w $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _r (_rsplit _w $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _u (_rsplit _w $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _w $0)))))))))"
                },
                {
                    "fn_3 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 _rempty _v": "(_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 2424,
            "final_cost": 35061,
            "compression_ratio": 1.0691366475571147,
            "cumulative_compression_ratio": 1.6512364165311886,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 (_rconcat _x _s)": "(_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _d (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_4 (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _v (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_4 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_4 (fn_3 $0 _r _a) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (fn_3 $0 _r _a)))))"
                },
                {
                    "fn_4 (fn_3 $0 _r _q) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (fn_3 $0 _r _q)))))"
                },
                {
                    "fn_4 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 2424,
            "final_cost": 32637,
            "compression_ratio": 1.074271532309955,
            "cumulative_compression_ratio": 1.773876275392959,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _a": "(_rflatten (_rappend _a (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _d": "(_rflatten (_rappend _d (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _o": "(_rflatten (_rappend _o (_rsplit _a $0)))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _a $0)))"
                },
                {
                    "fn_5 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _r": "(_rflatten (_rappend _r (_rsplit _a (_rflatten (_rrevcdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))) _t": "(_rflatten (_rappend _t (_rsplit _a (_rflatten (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_5 (fn_4 $0 _i) _y": "(_rflatten (_rappend _y (_rsplit _a (fn_4 $0 _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1313,
            "final_cost": 31324,
            "compression_ratio": 1.0419167411569403,
            "cumulative_compression_ratio": 1.848231388073043,
            "num_uses": 47,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _i _r)": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _x _e)": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 (_rconcat _y _w)": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _e": "(_rflatten (cons _e (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))) _e": "(_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_6 (fn_0 $0 _s _e) _e": "(_rflatten (cons _e (cdr (_rsplit _rdot (fn_0 $0 _s _e)))))"
                },
                {
                    "fn_6 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _a $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0))))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _d $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _d $0))))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rdot $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _v $0)) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (_rsplit _v $0))))))"
                },
                {
                    "fn_6 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 (fn_0 $0 _r _e) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (fn_0 $0 _r _e)))))"
                },
                {
                    "fn_6 $0 _j": "(_rflatten (cons _j (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 $0 _o": "(_rflatten (cons _o (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_6 (fn_0 $0 _a _d) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (fn_0 $0 _a _d)))))"
                },
                {
                    "fn_6 (fn_0 $0 _a _v) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (fn_0 $0 _a _v)))))"
                },
                {
                    "fn_6 (fn_0 $0 _a _w) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (fn_0 $0 _a _w)))))"
                },
                {
                    "fn_6 (fn_0 $0 _w _b) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_6 (fn_0 $0 _w _e) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _e)))))"
                },
                {
                    "fn_6 (fn_0 $0 _w _w) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _w)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _e (_rtail (_rsplit _rempty #1))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 $1)))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1212,
            "final_cost": 30112,
            "compression_ratio": 1.040249734325186,
            "cumulative_compression_ratio": 1.9226222104144528,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 (_rflatten (_rappend _o (_rsplit _b $0))) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _b $0))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _o (_rsplit _c $0))) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _c $0))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _o (_rsplit _d $0))) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _d $0))))"
                },
                {
                    "fn_7 (_rflatten (_rappend _o (_rsplit _e $0))) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _o (_rsplit _e $0))))"
                },
                {
                    "fn_7 (fn_3 $0 _rempty _v) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (fn_3 $0 _rempty _v))"
                },
                {
                    "fn_7 (fn_5 $0 _o) $0": "(if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (fn_5 $0 _o))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _v #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _v $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 28900,
            "compression_ratio": 1.0419377162629757,
            "cumulative_compression_ratio": 2.0032525951557094,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _v $0)))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (_rsplit _v $0)))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (cons _j (_rsplit _v $0)))"
                },
                {
                    "fn_8 (fn_6 $0 _o) _j": "(_rflatten (cons _j (_rsplit _v (fn_6 $0 _o))))"
                },
                {
                    "fn_8 $0 _v": "(_rflatten (cons _v (_rsplit _v $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (_rconcat #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $3))))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 918,
            "final_cost": 27982,
            "compression_ratio": 1.0328068043742407,
            "cumulative_compression_ratio": 2.0689729111571724,
            "num_uses": 48,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _v #0 $0": "(fn_1 $0 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_9 _rempty (_rconcat _g _i) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _g _i) _rempty)))"
                },
                {
                    "fn_9 _r (_rconcat _h _rempty) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _h _rempty) _r)))"
                },
                {
                    "fn_9 _r (_rconcat _rempty _h) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _r)))"
                },
                {
                    "fn_9 _x (_rconcat _rempty _h) $0": "(fn_1 $0 (lam (_rconcat (_rconcat _rempty _h) _x)))"
                },
                {
                    "fn_9 #0 (if (_rmatch _rdot #0) _l #0) $0": "(fn_1 $0 (lam (_rconcat (if (_rmatch _rdot $0) _l $0) $0)))"
                },
                {
                    "fn_9 _n _f $0": "(fn_1 $0 (lam (_rconcat _f _n)))"
                },
                {
                    "fn_9 (_rconcat _rempty _i) _g $0": "(fn_1 $0 (lam (_rconcat _g (_rconcat _rempty _i))))"
                },
                {
                    "fn_9 _i _g $0": "(fn_1 $0 (lam (_rconcat _g _i)))"
                },
                {
                    "fn_9 (_rconcat _rempty _r) _h $0": "(fn_1 $0 (lam (_rconcat _h (_rconcat _rempty _r))))"
                },
                {
                    "fn_9 _r _h $0": "(fn_1 $0 (lam (_rconcat _h _r)))"
                },
                {
                    "fn_9 _s _h $0": "(fn_1 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_9 _x _h $0": "(fn_1 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_9 _rempty _k $0": "(fn_1 $0 (lam (_rconcat _k _rempty)))"
                },
                {
                    "fn_9 #0 _l $0": "(fn_1 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_9 _rempty _p $0": "(fn_1 $0 (lam (_rconcat _p _rempty)))"
                },
                {
                    "fn_9 #0 _q $0": "(fn_1 $0 (lam (_rconcat _q $0)))"
                },
                {
                    "fn_9 (_rconcat _rempty _j) _q $0": "(fn_1 $0 (lam (_rconcat _q (_rconcat _rempty _j))))"
                },
                {
                    "fn_9 _j _q $0": "(fn_1 $0 (lam (_rconcat _q _j)))"
                },
                {
                    "fn_9 _v _r $0": "(fn_1 $0 (lam (_rconcat _r _v)))"
                },
                {
                    "fn_9 (_rconcat _g _i) _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty (_rconcat _g _i))))"
                },
                {
                    "fn_9 (_rconcat _q _j) _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty (_rconcat _q _j))))"
                },
                {
                    "fn_9 _k _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty _k)))"
                },
                {
                    "fn_9 _p _rempty $0": "(fn_1 $0 (lam (_rconcat _rempty _p)))"
                },
                {
                    "fn_9 _e _u $0": "(fn_1 $0 (lam (_rconcat _u _e)))"
                },
                {
                    "fn_9 _t _w $0": "(fn_1 $0 (lam (_rconcat _w _t)))"
                },
                {
                    "fn_9 _v #0 $1": "(fn_1 $1 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_9 _x _h (_rflatten (_rsplit _v $0))": "(fn_1 (_rflatten (_rsplit _v $0)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_9 _v #0 (car (map (lam $1) (_rsplit _rdot $0)))": "(fn_1 (car (map (lam $1) (_rsplit _rdot $0))) (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_9 _n _f (fn_2 _l _o $0)": "(fn_1 (fn_2 _l _o $0) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_9 _x _h (fn_4 $0 _j)": "(fn_1 (fn_4 $0 _j) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_9 _j _q (fn_4 $0 _j)": "(fn_1 (fn_4 $0 _j) (lam (_rconcat _q _j)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}